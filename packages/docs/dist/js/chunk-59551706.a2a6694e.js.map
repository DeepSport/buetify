{"version":3,"sources":["webpack:////mnt/c/Users/kight/projects/buetify/node_modules/core-js/modules/es.array.every.js","webpack:///../buetify/src/utils/eventHelpers.ts","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/core-js/modules/es.regexp.exec.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/core-js/internals/regexp-sticky-helpers.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/core-js/modules/es.string.replace.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/fp-ts/es6/function.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/core-js/internals/regexp-exec.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/core-js/modules/es.string.match.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/core-js/internals/string-trim.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/core-js/modules/es.string.split.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/fp-ts/es6/ReadonlyArray.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/fp-ts/es6/Array.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/fp-ts/es6/Option.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/core-js/internals/is-regexp.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/fp-ts/es6/Ordering.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/fp-ts/es6/Ord.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/core-js/modules/es.array.find-index.js","webpack:///../buetify/src/composables/toggle/useToggle.ts","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/core-js/internals/regexp-exec-abstract.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/core-js/internals/advance-string-index.js","webpack:///../buetify/src/utils/helpers.ts","webpack:////mnt/c/Users/kight/projects/buetify/node_modules/core-js/internals/whitespaces.js"],"names":["$","$every","every","arrayMethodIsStrict","arrayMethodUsesToLength","STRICT_METHOD","USES_TO_LENGTH","target","proto","forced","callbackfn","this","arguments","length","undefined","isEnterEvent","e","key","keyCode","isSpaceEvent","code","which","isEscEvent","isArrowDownEvent","isArrowRightEvent","isArrowLeftEvent","isArrowUpEvent","isTabEvent","exec","fails","RE","s","f","RegExp","exports","UNSUPPORTED_Y","re","lastIndex","BROKEN_CARET","fixRegExpWellKnownSymbolLogic","anObject","toObject","toLength","toInteger","requireObjectCoercible","advanceStringIndex","regExpExec","max","Math","min","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","it","String","REPLACE","nativeReplace","maybeCallNative","reason","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_KEEPS_$0","UNSAFE_SUBSTITUTE","searchValue","replaceValue","O","replacer","call","regexp","indexOf","res","done","value","rx","S","functionalReplace","global","fullUnicode","unicode","results","result","push","matchStr","accumulatedResult","nextSourcePosition","i","matched","position","index","captures","j","namedCaptures","groups","replacerArgs","concat","replacement","apply","getSubstitution","slice","str","tailPos","m","symbols","match","ch","capture","charAt","n","identity","a","not","predicate","constant","constTrue","constFalse","constVoid","flow","ab","bc","cd","de","ef","fg","gh","hi","ij","pipe","jk","kl","lm","mn","no","op","pq","qr","rs","st","bind_","name","b","_a","Object","assign","bindTo_","regexpFlags","stickyHelpers","nativeExec","prototype","replace","patchedExec","UPDATES_LAST_INDEX_WRONG","re1","re2","NPCG_INCLUDED","PATCH","reCopy","sticky","flags","source","charsAdded","strCopy","multiline","input","module","MATCH","nativeMatch","matcher","A","whitespaces","whitespace","ltrim","rtrim","createMethod","TYPE","$this","string","start","end","trim","isRegExp","speciesConstructor","callRegExpExec","regexpExec","arrayPush","MAX_UINT32","SUPPORTS_Y","SPLIT","nativeSplit","internalSplit","split","separator","limit","lim","lastLength","output","ignoreCase","lastLastIndex","separatorCopy","test","splitter","C","unicodeMatching","p","q","z","x","y","lenx","leny","r","Array","makeBy","range","isEmpty","as","isNonEmpty","isOutOfBound","lookup","snoc","init","len","head","findFirst","reverse","sort","compare","rotate","abs","elem","E","elemE_1","element","equals","sortBy","ords","M","reduce","empty","of","zero","map_","fa","map","mapWithIndex_","mapWithIndex","ap_","fab","ap","chain_","ma","chain","filter_","filter","filterMap_","filterMap","partitionWithIndex_","predicateWithIndex","partitionWithIndex","partition_","partition","partitionMap_","partitionMap","partitionMapWithIndex_","partitionMapWithIndex","alt_","that","alt","reduce_","foldMap_","foldMapM","foldMap","reduceRight_","reduceRight","reduceWithIndex_","l","foldMapWithIndex_","reduceRightWithIndex_","reduceRightWithIndex","filterMapWithIndex_","filterMapWithIndex","filterWithIndex_","filterWithIndex","extend_","extend","traverse_","F","traverseF","traverse","ta","traverseWithIndex_","traverseWithIndexF","traverseWithIndex","wither_","witherF","wither","wilt_","wiltF","wilt","chainWithIndex","_","outLen","temp","arr","out","l_1","separate","left","right","_i","fa_1","_tag","optionB","compact","wa","foldMapWithIndex","foldMapWithIndexM","reduceWithIndex","sequence","fas","fbs","bs","URI","FunctorWithIndex","Monad","Alternative","Extend","Filterable","FilterableWithIndex","Foldable","FoldableWithIndex","Traversable","TraversableWithIndex","Witherable","unsafeDeleteAt","xs","splice","isSome","isNone","none","some","fromNullable","fold","onNone","onSome","toNullable","toUndefined","getOrElseW","getOrElse","getEq","exists","isObject","classof","wellKnownSymbol","redefine","createNonEnumerableProperty","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","KEY","sham","SYMBOL","DELEGATES_TO_SYMBOL","DELEGATES_TO_EXEC","execCalled","constructor","nativeRegExpMethod","methods","nativeMethod","arg2","forceStringMethod","stringMethod","regexMethod","arg","semigroupOrdering","monoidOrdering","strictEqual","ordNumber","leq","geq","fromCompare","optimizedCompare","getSemigroup","getMonoid","contramap","date","valueOf","$findIndex","findIndex","addToUnscopables","FIND_INDEX","SKIPS_HOLES","getUseTogglePropsDefinition","statusName","defaultStatus","type","Boolean","default","Function","required","getToggleAttrs","status","hasPopup","tabindex","role","getListeners","toggle","onClick","onKeydown","preventDefault","useToggle","props","internalStatus","get","set","val","cValue","onToggle","onSetOn","onSetOff","updateModel","setOn","stopPropagation","setOff","attrs","listeners","isOn","isOff","R","TypeError","_typeof","obj","Symbol","iterator","capitalizeFirstLetter","toUpperCase","deepEqual","Date","getTime","keys","isBoolean","isFunction","isNil","isString","isNumber","isHTMLElement","HTMLElement","nodeType","nodeName","constEmptyArray","constNone","removeListItem","toggleListItem","isEmptyString","prop","extractProp","extractor","item","hasOwnProperty","camelizeRE","camelize","c"],"mappings":"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","file":"js/chunk-59551706.a2a6694e.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $every = require('../internals/array-iteration').every;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar STRICT_METHOD = arrayMethodIsStrict('every');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('every');\n\n// `Array.prototype.every` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.every\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD || !USES_TO_LENGTH }, {\n  every: function every(callbackfn /* , thisArg */) {\n    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","export function isEnterEvent(e: KeyboardEvent): boolean {\n  return e.key === 'Enter' || e.keyCode === 13;\n}\n\nexport function isSpaceEvent(e: KeyboardEvent): boolean {\n  return e.code === 'Space' || e.which === 32 || e.key === ' ';\n}\n\nexport function isEscEvent(e: KeyboardEvent): boolean {\n  return e.key === 'Escape' || e.code === 'Escape' || e.which === 27;\n}\n\nexport function isArrowDownEvent(e: KeyboardEvent): boolean {\n  return e.key === 'ArrowDown' || e.code === 'ArrowDown' || e.which === 40;\n}\n\nexport function isArrowRightEvent(e: KeyboardEvent): boolean {\n  return e.key === 'ArrowRight' || e.code === 'ArrowRight' || e.which === 39;\n}\n\nexport function isArrowLeftEvent(e: KeyboardEvent): boolean {\n  return e.key === 'ArrowLeft' || e.code === 'ArrowLeft' || e.which === 37;\n}\n\nexport function isArrowUpEvent(e: KeyboardEvent): boolean {\n  return e.key === 'ArrowUp' || e.code === 'ArrowUp' || e.which === 38;\n}\n\nexport function isTabEvent(e: KeyboardEvent): boolean {\n  return e.key === 'Tab' || e.code === 'Tab' || e.which === 9;\n}\n","'use strict';\nvar $ = require('../internals/export');\nvar exec = require('../internals/regexp-exec');\n\n$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {\n  exec: exec\n});\n","'use strict';\n\nvar fails = require('./fails');\n\n// babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError,\n// so we use an intermediate function.\nfunction RE(s, f) {\n  return RegExp(s, f);\n}\n\nexports.UNSUPPORTED_Y = fails(function () {\n  // babel-minify transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError\n  var re = RE('a', 'y');\n  re.lastIndex = 2;\n  return re.exec('abcd') != null;\n});\n\nexports.BROKEN_CARET = fails(function () {\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687\n  var re = RE('^r', 'gy');\n  re.lastIndex = 2;\n  return re.exec('str') != null;\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","/**\n * @since 2.0.0\n */\n/**\n * @since 2.0.0\n */\nexport function identity(a) {\n    return a;\n}\n/**\n * @since 2.0.0\n */\nexport var unsafeCoerce = identity;\n/**\n * @since 2.0.0\n */\nexport function not(predicate) {\n    return function (a) { return !predicate(a); };\n}\n/**\n * @since 2.0.0\n */\nexport function constant(a) {\n    return function () { return a; };\n}\n/**\n * A thunk that returns always `true`\n *\n * @since 2.0.0\n */\nexport var constTrue = function () {\n    return true;\n};\n/**\n * A thunk that returns always `false`\n *\n * @since 2.0.0\n */\nexport var constFalse = function () {\n    return false;\n};\n/**\n * A thunk that returns always `null`\n *\n * @since 2.0.0\n */\nexport var constNull = function () {\n    return null;\n};\n/**\n * A thunk that returns always `undefined`\n *\n * @since 2.0.0\n */\nexport var constUndefined = function () {\n    return;\n};\n/**\n * A thunk that returns always `void`\n *\n * @since 2.0.0\n */\nexport var constVoid = function () {\n    return;\n};\n// TODO: remove in v3\n/**\n * Flips the order of the arguments of a function of two arguments.\n *\n * @since 2.0.0\n */\nexport function flip(f) {\n    return function (b, a) { return f(a, b); };\n}\nexport function flow(ab, bc, cd, de, ef, fg, gh, hi, ij) {\n    switch (arguments.length) {\n        case 1:\n            return ab;\n        case 2:\n            return function () {\n                return bc(ab.apply(this, arguments));\n            };\n        case 3:\n            return function () {\n                return cd(bc(ab.apply(this, arguments)));\n            };\n        case 4:\n            return function () {\n                return de(cd(bc(ab.apply(this, arguments))));\n            };\n        case 5:\n            return function () {\n                return ef(de(cd(bc(ab.apply(this, arguments)))));\n            };\n        case 6:\n            return function () {\n                return fg(ef(de(cd(bc(ab.apply(this, arguments))))));\n            };\n        case 7:\n            return function () {\n                return gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))));\n            };\n        case 8:\n            return function () {\n                return hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments))))))));\n            };\n        case 9:\n            return function () {\n                return ij(hi(gh(fg(ef(de(cd(bc(ab.apply(this, arguments)))))))));\n            };\n    }\n    return;\n}\n/**\n * @since 2.0.0\n */\nexport function tuple() {\n    var t = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        t[_i] = arguments[_i];\n    }\n    return t;\n}\n/**\n * @since 2.0.0\n */\nexport function increment(n) {\n    return n + 1;\n}\n/**\n * @since 2.0.0\n */\nexport function decrement(n) {\n    return n - 1;\n}\n/**\n * @since 2.0.0\n */\nexport function absurd(_) {\n    throw new Error('Called `absurd` function which should be uncallable');\n}\n/**\n * Creates a tupled version of this function: instead of `n` arguments, it accepts a single tuple argument.\n *\n * @example\n * import { tupled } from 'fp-ts/function'\n *\n * const add = tupled((x: number, y: number): number => x + y)\n *\n * assert.strictEqual(add([1, 2]), 3)\n *\n * @since 2.4.0\n */\nexport function tupled(f) {\n    return function (a) { return f.apply(void 0, a); };\n}\n/**\n * Inverse function of `tupled`\n *\n * @since 2.4.0\n */\nexport function untupled(f) {\n    return function () {\n        var a = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            a[_i] = arguments[_i];\n        }\n        return f(a);\n    };\n}\nexport function pipe(a, ab, bc, cd, de, ef, fg, gh, hi, ij, jk, kl, lm, mn, no, op, pq, qr, rs, st) {\n    switch (arguments.length) {\n        case 1:\n            return a;\n        case 2:\n            return ab(a);\n        case 3:\n            return bc(ab(a));\n        case 4:\n            return cd(bc(ab(a)));\n        case 5:\n            return de(cd(bc(ab(a))));\n        case 6:\n            return ef(de(cd(bc(ab(a)))));\n        case 7:\n            return fg(ef(de(cd(bc(ab(a))))));\n        case 8:\n            return gh(fg(ef(de(cd(bc(ab(a)))))));\n        case 9:\n            return hi(gh(fg(ef(de(cd(bc(ab(a))))))));\n        case 10:\n            return ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))));\n        case 11:\n            return jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))));\n        case 12:\n            return kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))));\n        case 13:\n            return lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))));\n        case 14:\n            return mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))));\n        case 15:\n            return no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))));\n        case 16:\n            return op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))));\n        case 17:\n            return pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))));\n        case 18:\n            return qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))));\n        case 19:\n            return rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a))))))))))))))))));\n        case 20:\n            return st(rs(qr(pq(op(no(mn(lm(kl(jk(ij(hi(gh(fg(ef(de(cd(bc(ab(a)))))))))))))))))));\n    }\n    return;\n}\n/**\n * Type hole simulation\n *\n * @since 2.7.0\n */\nexport var hole = absurd;\n/**\n * @internal\n */\nexport var bind_ = function (a, name, b) {\n    var _a;\n    return Object.assign({}, a, (_a = {}, _a[name] = b, _a));\n};\n/**\n * @internal\n */\nexport var bindTo_ = function (name) { return function (b) {\n    var _a;\n    return (_a = {}, _a[name] = b, _a);\n}; };\n","'use strict';\nvar regexpFlags = require('./regexp-flags');\nvar stickyHelpers = require('./regexp-sticky-helpers');\n\nvar nativeExec = RegExp.prototype.exec;\n// This always refers to the native implementation, because the\n// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,\n// which loads this file before patching the method.\nvar nativeReplace = String.prototype.replace;\n\nvar patchedExec = nativeExec;\n\nvar UPDATES_LAST_INDEX_WRONG = (function () {\n  var re1 = /a/;\n  var re2 = /b*/g;\n  nativeExec.call(re1, 'a');\n  nativeExec.call(re2, 'a');\n  return re1.lastIndex !== 0 || re2.lastIndex !== 0;\n})();\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y || stickyHelpers.BROKEN_CARET;\n\n// nonparticipating capturing group, copied from es5-shim's String#split patch.\nvar NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;\n\nvar PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y;\n\nif (PATCH) {\n  patchedExec = function exec(str) {\n    var re = this;\n    var lastIndex, reCopy, match, i;\n    var sticky = UNSUPPORTED_Y && re.sticky;\n    var flags = regexpFlags.call(re);\n    var source = re.source;\n    var charsAdded = 0;\n    var strCopy = str;\n\n    if (sticky) {\n      flags = flags.replace('y', '');\n      if (flags.indexOf('g') === -1) {\n        flags += 'g';\n      }\n\n      strCopy = String(str).slice(re.lastIndex);\n      // Support anchored sticky behavior.\n      if (re.lastIndex > 0 && (!re.multiline || re.multiline && str[re.lastIndex - 1] !== '\\n')) {\n        source = '(?: ' + source + ')';\n        strCopy = ' ' + strCopy;\n        charsAdded++;\n      }\n      // ^(? + rx + ) is needed, in combination with some str slicing, to\n      // simulate the 'y' flag.\n      reCopy = new RegExp('^(?:' + source + ')', flags);\n    }\n\n    if (NPCG_INCLUDED) {\n      reCopy = new RegExp('^' + source + '$(?!\\\\s)', flags);\n    }\n    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;\n\n    match = nativeExec.call(sticky ? reCopy : re, strCopy);\n\n    if (sticky) {\n      if (match) {\n        match.input = match.input.slice(charsAdded);\n        match[0] = match[0].slice(charsAdded);\n        match.index = re.lastIndex;\n        re.lastIndex += match[0].length;\n      } else re.lastIndex = 0;\n    } else if (UPDATES_LAST_INDEX_WRONG && match) {\n      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;\n    }\n    if (NPCG_INCLUDED && match && match.length > 1) {\n      // Fix browsers whose `exec` methods don't consistently return `undefined`\n      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/\n      nativeReplace.call(match[0], reCopy, function () {\n        for (i = 1; i < arguments.length - 2; i++) {\n          if (arguments[i] === undefined) match[i] = undefined;\n        }\n      });\n    }\n\n    return match;\n  };\n}\n\nmodule.exports = patchedExec;\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toLength = require('../internals/to-length');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\n// @@match logic\nfixRegExpWellKnownSymbolLogic('match', 1, function (MATCH, nativeMatch, maybeCallNative) {\n  return [\n    // `String.prototype.match` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.match\n    function match(regexp) {\n      var O = requireObjectCoercible(this);\n      var matcher = regexp == undefined ? undefined : regexp[MATCH];\n      return matcher !== undefined ? matcher.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));\n    },\n    // `RegExp.prototype[@@match]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match\n    function (regexp) {\n      var res = maybeCallNative(nativeMatch, regexp, this);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      if (!rx.global) return regExpExec(rx, S);\n\n      var fullUnicode = rx.unicode;\n      rx.lastIndex = 0;\n      var A = [];\n      var n = 0;\n      var result;\n      while ((result = regExpExec(rx, S)) !== null) {\n        var matchStr = String(result[0]);\n        A[n] = matchStr;\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n        n++;\n      }\n      return n === 0 ? null : A;\n    }\n  ];\n});\n","var requireObjectCoercible = require('../internals/require-object-coercible');\nvar whitespaces = require('../internals/whitespaces');\n\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = String(requireObjectCoercible($this));\n    if (TYPE & 1) string = string.replace(ltrim, '');\n    if (TYPE & 2) string = string.replace(rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.github.io/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\n\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SUPPORTS_Y);\n","import { identity, pipe, bind_, bindTo_, flow } from './function';\nimport { isSome, none, some } from './Option';\nimport { fromCompare, getMonoid as getOrdMonoid, ordNumber } from './Ord';\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nexport function fromArray(as) {\n    var l = as.length;\n    if (l === 0) {\n        return empty;\n    }\n    var ras = Array(l);\n    for (var i = 0; i < l; i++) {\n        ras[i] = as[i];\n    }\n    return ras;\n}\n/**\n * @category destructors\n * @since 2.5.0\n */\n// tslint:disable-next-line: readonly-array\nexport function toArray(ras) {\n    var l = ras.length;\n    var as = Array(l);\n    for (var i = 0; i < l; i++) {\n        as[i] = ras[i];\n    }\n    return as;\n}\n/**\n * @category instances\n * @since 2.5.0\n */\nexport function getShow(S) {\n    return {\n        show: function (as) { return \"[\" + as.map(S.show).join(', ') + \"]\"; }\n    };\n}\nvar concat = function (x, y) {\n    var lenx = x.length;\n    if (lenx === 0) {\n        return y;\n    }\n    var leny = y.length;\n    if (leny === 0) {\n        return x;\n    }\n    var r = Array(lenx + leny);\n    for (var i = 0; i < lenx; i++) {\n        r[i] = x[i];\n    }\n    for (var i = 0; i < leny; i++) {\n        r[i + lenx] = y[i];\n    }\n    return r;\n};\n/**\n * Returns a `Monoid` for `ReadonlyArray<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/ReadonlyArray'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getMonoid() {\n    return {\n        concat: concat,\n        empty: empty\n    };\n}\n/**\n * Derives an `Eq` over the `ReadonlyArray` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import { eqString } from 'fp-ts/Eq'\n * import { getEq } from 'fp-ts/ReadonlyArray'\n *\n * const E = getEq(eqString)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getEq(E) {\n    return {\n        equals: function (xs, ys) { return xs === ys || (xs.length === ys.length && xs.every(function (x, i) { return E.equals(x, ys[i]); })); }\n    };\n}\n/**\n * Derives an `Ord` over the `ReadonlyArray` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/ReadonlyArray'\n * import { ordString } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordString)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n *\n * @category instances\n * @since 2.5.0\n */\nexport function getOrd(O) {\n    return fromCompare(function (a, b) {\n        var aLen = a.length;\n        var bLen = b.length;\n        var len = Math.min(aLen, bLen);\n        for (var i = 0; i < len; i++) {\n            var ordering = O.compare(a[i], b[i]);\n            if (ordering !== 0) {\n                return ordering;\n            }\n        }\n        return ordNumber.compare(aLen, bLen);\n    });\n}\n/**\n * Return a list of length `n` with element `i` initialized with `f(i)`\n *\n * @example\n * import { makeBy } from 'fp-ts/ReadonlyArray'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function makeBy(n, f) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    for (var i = 0; i < n; i++) {\n        r.push(f(i));\n    }\n    return r;\n}\n/**\n * Create an array containing a range of integers, including both endpoints\n *\n * @example\n * import { range } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function range(start, end) {\n    return makeBy(end - start + 1, function (i) { return start + i; });\n}\n/**\n * Create an array containing a value repeated the specified number of times\n *\n * @example\n * import { replicate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function replicate(n, a) {\n    return makeBy(n, function () { return a; });\n}\n/**\n * Removes one level of nesting\n *\n * @example\n * import { flatten } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])\n *\n * @category Monad\n * @since 2.5.0\n */\nexport function flatten(mma) {\n    var rLen = 0;\n    var len = mma.length;\n    for (var i = 0; i < len; i++) {\n        rLen += mma[i].length;\n    }\n    var r = Array(rLen);\n    var start = 0;\n    for (var i = 0; i < len; i++) {\n        var arr = mma[i];\n        var l = arr.length;\n        for (var j = 0; j < l; j++) {\n            r[j + start] = arr[j];\n        }\n        start += l;\n    }\n    return r;\n}\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { foldLeft } from 'fp-ts/ReadonlyArray'\n *\n * const len: <A>(as: ReadonlyArray<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.5.0\n */\nexport function foldLeft(onNil, onCons) {\n    return function (as) { return (isEmpty(as) ? onNil() : onCons(as[0], as.slice(1))); };\n}\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.5.0\n */\nexport function foldRight(onNil, onCons) {\n    return function (as) { return (isEmpty(as) ? onNil() : onCons(as.slice(0, as.length - 1), as[as.length - 1])); };\n}\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * ```ts\n * import { scanLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n * ```\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function scanLeft(b, f) {\n    return function (as) {\n        var l = as.length;\n        // tslint:disable-next-line: readonly-array\n        var r = new Array(l + 1);\n        r[0] = b;\n        for (var i = 0; i < l; i++) {\n            r[i + 1] = f(r[i], as[i]);\n        }\n        return r;\n    };\n}\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function scanRight(b, f) {\n    return function (as) {\n        var l = as.length;\n        // tslint:disable-next-line: readonly-array\n        var r = new Array(l + 1);\n        r[l] = b;\n        for (var i = l - 1; i >= 0; i--) {\n            r[i] = f(as[i], r[i + 1]);\n        }\n        return r;\n    };\n}\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/ReadonlyArray'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.5.0\n */\nexport function isEmpty(as) {\n    return as.length === 0;\n}\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyReadonlyArray<A>`\n *\n * @category guards\n * @since 2.5.0\n */\nexport function isNonEmpty(as) {\n    return as.length > 0;\n}\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.5.0\n */\nexport function isOutOfBound(i, as) {\n    return i < 0 || i >= as.length;\n}\nexport function lookup(i, as) {\n    return as === undefined ? function (as) { return lookup(i, as); } : isOutOfBound(i, as) ? none : some(as[i]);\n}\nexport function cons(head, tail) {\n    if (tail === undefined) {\n        return function (tail) { return cons(head, tail); };\n    }\n    var len = tail.length;\n    var r = Array(len + 1);\n    for (var i = 0; i < len; i++) {\n        r[i + 1] = tail[i];\n    }\n    r[0] = head;\n    return r;\n}\n// TODO: curry and make data-last in v3\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.5.0\n */\nexport function snoc(init, end) {\n    var len = init.length;\n    var r = Array(len + 1);\n    for (var i = 0; i < len; i++) {\n        r[i] = init[i];\n    }\n    r[len] = end;\n    return r;\n}\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @since 2.5.0\n */\nexport function head(as) {\n    return isEmpty(as) ? none : some(as[0]);\n}\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @since 2.5.0\n */\nexport function last(as) {\n    return lookup(as.length - 1, as);\n}\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @since 2.5.0\n */\nexport function tail(as) {\n    return isEmpty(as) ? none : some(as.slice(1));\n}\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @since 2.5.0\n */\nexport function init(as) {\n    var len = as.length;\n    return len === 0 ? none : some(as.slice(0, len - 1));\n}\n/**\n * Keep only a number of elements from the start of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function takeLeft(n) {\n    return function (as) { return as.slice(0, n); };\n}\n/**\n * Keep only a number of elements from the end of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @since 2.5.0\n */\nexport function takeRight(n) {\n    return function (as) { return (n === 0 ? empty : as.slice(-n)); };\n}\nexport function takeLeftWhile(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var init = Array(i);\n        for (var j = 0; j < i; j++) {\n            init[j] = as[j];\n        }\n        return init;\n    };\n}\nvar spanIndexUncurry = function (as, predicate) {\n    var l = as.length;\n    var i = 0;\n    for (; i < l; i++) {\n        if (!predicate(as[i])) {\n            break;\n        }\n    }\n    return i;\n};\nexport function spanLeft(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var init = Array(i);\n        for (var j = 0; j < i; j++) {\n            init[j] = as[j];\n        }\n        var l = as.length;\n        var rest = Array(l - i);\n        for (var j = i; j < l; j++) {\n            rest[j - i] = as[j];\n        }\n        return { init: init, rest: rest };\n    };\n}\n/**\n * Drop a number of elements from the start of an array, creating a new array\n *\n * @example\n * import { dropLeft } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropLeft(n) {\n    return function (as) { return as.slice(n, as.length); };\n}\n/**\n * Drop a number of elements from the end of an array, creating a new array\n *\n * @example\n * import { dropRight } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropRight(n) {\n    return function (as) { return as.slice(0, as.length - n); };\n}\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function dropLeftWhile(predicate) {\n    return function (as) {\n        var i = spanIndexUncurry(as, predicate);\n        var l = as.length;\n        var rest = Array(l - i);\n        for (var j = i; j < l; j++) {\n            rest[j - i] = as[j];\n        }\n        return rest;\n    };\n}\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.5.0\n */\nexport function findIndex(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            if (predicate(as[i])) {\n                return some(i);\n            }\n        }\n        return none;\n    };\n}\nexport function findFirst(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            if (predicate(as[i])) {\n                return some(as[i]);\n            }\n        }\n        return none;\n    };\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @since 2.5.0\n */\nexport function findFirstMap(f) {\n    return function (as) {\n        var len = as.length;\n        for (var i = 0; i < len; i++) {\n            var v = f(as[i]);\n            if (isSome(v)) {\n                return v;\n            }\n        }\n        return none;\n    };\n}\nexport function findLast(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return some(as[i]);\n            }\n        }\n        return none;\n    };\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: ReadonlyArray<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @since 2.5.0\n */\nexport function findLastMap(f) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var v = f(as[i]);\n            if (isSome(v)) {\n                return v;\n            }\n        }\n        return none;\n    };\n}\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   a: number\n *   b: number\n * }\n * const xs: ReadonlyArray<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.5.0\n */\nexport function findLastIndex(predicate) {\n    return function (as) {\n        var len = as.length;\n        for (var i = len - 1; i >= 0; i--) {\n            if (predicate(as[i])) {\n                return some(i);\n            }\n        }\n        return none;\n    };\n}\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/ReadonlyArray'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.5.0\n */\nexport function insertAt(i, a) {\n    return function (as) { return (i < 0 || i > as.length ? none : some(unsafeInsertAt(i, a, as))); };\n}\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.5.0\n */\nexport function updateAt(i, a) {\n    return function (as) { return (isOutOfBound(i, as) ? none : some(unsafeUpdateAt(i, a, as))); };\n}\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.5.0\n */\nexport function deleteAt(i) {\n    return function (as) { return (isOutOfBound(i, as) ? none : some(unsafeDeleteAt(i, as))); };\n}\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/ReadonlyArray'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.5.0\n */\nexport function modifyAt(i, f) {\n    return function (as) { return (isOutOfBound(i, as) ? none : some(unsafeUpdateAt(i, f(as[i]), as))); };\n}\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function reverse(as) {\n    if (isEmpty(as)) {\n        return as;\n    }\n    return as.slice().reverse();\n}\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/ReadonlyArray'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function rights(as) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n        var a = as[i];\n        if (a._tag === 'Right') {\n            r.push(a.right);\n        }\n    }\n    return r;\n}\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/ReadonlyArray'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @since 2.5.0\n */\nexport function lefts(as) {\n    // tslint:disable-next-line: readonly-array\n    var r = [];\n    var len = as.length;\n    for (var i = 0; i < len; i++) {\n        var a = as[i];\n        if (a._tag === 'Left') {\n            r.push(a.left);\n        }\n    }\n    return r;\n}\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/ReadonlyArray'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var sort = function (O) { return function (as) {\n    return isEmpty(as) ? as : as.slice().sort(O.compare);\n}; };\n// TODO: curry and make data-last in v3\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function zipWith(fa, fb, f) {\n    // tslint:disable-next-line: readonly-array\n    var fc = [];\n    var len = Math.min(fa.length, fb.length);\n    for (var i = 0; i < len; i++) {\n        fc[i] = f(fa[i], fb[i]);\n    }\n    return fc;\n}\nexport function zip(as, bs) {\n    if (bs === undefined) {\n        return function (bs) { return zip(bs, as); };\n    }\n    return zipWith(as, bs, function (a, b) { return [a, b]; });\n}\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.5.0\n */\nexport function unzip(as) {\n    // tslint:disable-next-line: readonly-array\n    var fa = [];\n    // tslint:disable-next-line: readonly-array\n    var fb = [];\n    for (var i = 0; i < as.length; i++) {\n        fa[i] = as[i][0];\n        fb[i] = as[i][1];\n    }\n    return [fa, fb];\n}\n/**\n * Rotate an array to the right by `n` steps\n *\n * @example\n * import { rotate } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function rotate(n) {\n    return function (as) {\n        var len = as.length;\n        if (n === 0 || len <= 1 || len === Math.abs(n)) {\n            return as;\n        }\n        else if (n < 0) {\n            return rotate(len + n)(as);\n        }\n        else {\n            return as.slice(-n).concat(as.slice(0, len - n));\n        }\n    };\n}\nexport function elem(E) {\n    return function (a, as) {\n        if (as === undefined) {\n            var elemE_1 = elem(E);\n            return function (as) { return elemE_1(a, as); };\n        }\n        var predicate = function (element) { return E.equals(element, a); };\n        var i = 0;\n        var len = as.length;\n        for (; i < len; i++) {\n            if (predicate(as[i])) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/ReadonlyArray'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function uniq(E) {\n    var elemS = elem(E);\n    return function (as) {\n        // tslint:disable-next-line: readonly-array\n        var r = [];\n        var len = as.length;\n        var i = 0;\n        for (; i < len; i++) {\n            var a = as[i];\n            if (!elemS(a, r)) {\n                r.push(a);\n            }\n        }\n        return len === r.length ? as : r;\n    };\n}\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/ReadonlyArray'\n * import { ord, ordString, ordNumber } from 'fp-ts/Ord'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n * const byName = ord.contramap(ordString, (p: Person) => p.name)\n * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport function sortBy(ords) {\n    var M = getOrdMonoid();\n    return sort(ords.reduce(M.concat, M.empty));\n}\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq, eqNumber } from 'fp-ts/Eq'\n * import { chop, spanLeft } from 'fp-ts/ReadonlyArray'\n *\n * const group = <A>(S: Eq<A>): ((as: ReadonlyArray<A>) => ReadonlyArray<ReadonlyArray<A>>) => {\n *   return chop(as => {\n *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.5.0\n */\nexport var chop = function (f) { return function (as) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    var cs = as;\n    while (isNonEmpty(cs)) {\n        var _a = f(cs), b = _a[0], c = _a[1];\n        result.push(b);\n        cs = c;\n    }\n    return result;\n}; };\n/**\n * Splits an array into two pieces, the first piece has `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.5.0\n */\nexport function splitAt(n) {\n    return function (as) { return [as.slice(0, n), as.slice(n)]; };\n}\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/ReadonlyArray'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n *\n * @since 2.5.0\n */\nexport function chunksOf(n) {\n    var f = chop(splitAt(n));\n    return function (as) { return (as.length === 0 ? empty : isOutOfBound(n - 1, as) ? [as] : f(as)); };\n}\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    var go = function (scope, input) {\n        if (input.length === 0) {\n            return g.apply(void 0, scope) ? [f.apply(void 0, scope)] : empty;\n        }\n        else {\n            return chain_(input[0], function (x) { return go(snoc(scope, x), input.slice(1)); });\n        }\n    };\n    return go(empty, input);\n}\nexport function union(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var unionE_1 = union(E);\n            return function (ys) { return unionE_1(ys, xs); };\n        }\n        return concat(xs, ys.filter(function (a) { return !elemE(a, xs); }));\n    };\n}\nexport function intersection(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var intersectionE_1 = intersection(E);\n            return function (ys) { return intersectionE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return elemE(a, ys); });\n    };\n}\nexport function difference(E) {\n    var elemE = elem(E);\n    return function (xs, ys) {\n        if (ys === undefined) {\n            var differenceE_1 = difference(E);\n            return function (ys) { return differenceE_1(ys, xs); };\n        }\n        return xs.filter(function (a) { return !elemE(a, ys); });\n    };\n}\n/**\n * @category Applicative\n * @since 2.5.0\n */\nexport var of = function (a) { return [a]; };\n/**\n * @category Alternative\n * @since 2.7.0\n */\nexport var zero = function () { return empty; };\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = function (fa, f) { return pipe(fa, map(f)); };\nvar mapWithIndex_ = function (fa, f) { return pipe(fa, mapWithIndex(f)); };\nvar ap_ = function (fab, fa) { return pipe(fab, ap(fa)); };\nvar chain_ = function (ma, f) {\n    return pipe(ma, chain(f));\n};\nvar filter_ = function (fa, predicate) { return pipe(fa, filter(predicate)); };\nvar filterMap_ = function (fa, f) { return pipe(fa, filterMap(f)); };\nvar partitionWithIndex_ = function (fa, predicateWithIndex) { return pipe(fa, partitionWithIndex(predicateWithIndex)); };\nvar partition_ = function (fa, predicate) { return pipe(fa, partition(predicate)); };\nvar partitionMap_ = function (fa, f) { return pipe(fa, partitionMap(f)); };\nvar partitionMapWithIndex_ = function (fa, f) { return pipe(fa, partitionMapWithIndex(f)); };\nvar alt_ = function (fa, that) { return pipe(fa, alt(that)); };\nvar reduce_ = function (fa, b, f) { return pipe(fa, reduce(b, f)); };\nvar foldMap_ = function (M) {\n    var foldMapM = foldMap(M);\n    return function (fa, f) { return pipe(fa, foldMapM(f)); };\n};\nvar reduceRight_ = function (fa, b, f) { return pipe(fa, reduceRight(b, f)); };\nvar reduceWithIndex_ = function (fa, b, f) {\n    var l = fa.length;\n    var r = b;\n    for (var i = 0; i < l; i++) {\n        r = f(i, r, fa[i]);\n    }\n    return r;\n};\nvar foldMapWithIndex_ = function (M) { return function (fa, f) {\n    return fa.reduce(function (b, a, i) { return M.concat(b, f(i, a)); }, M.empty);\n}; };\nvar reduceRightWithIndex_ = function (fa, b, f) {\n    return pipe(fa, reduceRightWithIndex(b, f));\n};\nvar filterMapWithIndex_ = function (fa, f) {\n    return pipe(fa, filterMapWithIndex(f));\n};\nvar filterWithIndex_ = function (fa, predicateWithIndex) { return pipe(fa, filterWithIndex(predicateWithIndex)); };\nvar extend_ = function (fa, f) { return pipe(fa, extend(f)); };\nvar traverse_ = function (F) {\n    var traverseF = traverse(F);\n    return function (ta, f) { return pipe(ta, traverseF(f)); };\n};\n/* istanbul ignore next */\nvar traverseWithIndex_ = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (ta, f) { return pipe(ta, traverseWithIndexF(f)); };\n};\n/* istanbul ignore next */\nvar wither_ = function (F) {\n    var witherF = wither(F);\n    return function (fa, f) { return pipe(fa, witherF(f)); };\n};\n/* istanbul ignore next */\nvar wilt_ = function (F) {\n    var wiltF = wilt(F);\n    return function (fa, f) { return pipe(fa, wiltF(f)); };\n};\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.5.0\n */\nexport var alt = function (that) { return function (fa) {\n    return concat(fa, that());\n}; };\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.5.0\n */\nexport var ap = function (fa) {\n    return chain(function (f) { return pipe(fa, map(f)); });\n};\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @category Apply\n * @since 2.5.0\n */\nexport var apFirst = function (fb) {\n    return flow(map(function (a) { return function () { return a; }; }), ap(fb));\n};\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @category Apply\n * @since 2.5.0\n */\nexport var apSecond = function (fb) {\n    return flow(map(function () { return function (b) { return b; }; }), ap(fb));\n};\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.5.0\n */\nexport var chain = function (f) { return function (ma) {\n    return pipe(ma, chainWithIndex(function (_, a) { return f(a); }));\n}; };\n/**\n * @since 2.7.0\n */\nexport var chainWithIndex = function (f) { return function (ma) {\n    var outLen = 0;\n    var l = ma.length;\n    var temp = new Array(l);\n    for (var i = 0; i < l; i++) {\n        var e = ma[i];\n        var arr = f(i, e);\n        outLen += arr.length;\n        temp[i] = arr;\n    }\n    var out = Array(outLen);\n    var start = 0;\n    for (var i = 0; i < l; i++) {\n        var arr = temp[i];\n        var l_1 = arr.length;\n        for (var j = 0; j < l_1; j++) {\n            out[j + start] = arr[j];\n        }\n        start += l_1;\n    }\n    return out;\n}; };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category Monad\n * @since 2.5.0\n */\nexport var chainFirst = function (f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function () { return a; }));\n    });\n};\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.5.0\n */\nexport var map = function (f) { return function (fa) {\n    return fa.map(function (a) { return f(a); });\n}; };\n/**\n * @category FunctorWithIndex\n * @since 2.5.0\n */\nexport var mapWithIndex = function (f) { return function (fa) { return fa.map(function (a, i) { return f(i, a); }); }; };\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexport var separate = function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var _i = 0, fa_1 = fa; _i < fa_1.length; _i++) {\n        var e = fa_1[_i];\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n};\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var filter = function (predicate) { return function (fa) { return fa.filter(predicate); }; };\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var filterMapWithIndex = function (f) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var result = [];\n    for (var i = 0; i < fa.length; i++) {\n        var optionB = f(i, fa[i]);\n        if (isSome(optionB)) {\n            result.push(optionB.value);\n        }\n    }\n    return result;\n}; };\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var filterMap = function (f) {\n    return filterMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category Compactable\n * @since 2.5.0\n */\nexport var compact = \n/*#__PURE__*/\nfilterMap(identity);\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var partition = function (predicate) {\n    return partitionWithIndex(function (_, a) { return predicate(a); });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var partitionWithIndex = function (predicateWithIndex) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var a = fa[i];\n        if (predicateWithIndex(i, a)) {\n            right.push(a);\n        }\n        else {\n            left.push(a);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n}; };\n/**\n * @category Filterable\n * @since 2.5.0\n */\nexport var partitionMap = function (f) {\n    return partitionMapWithIndex(function (_, a) { return f(a); });\n};\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var partitionMapWithIndex = function (f) { return function (fa) {\n    // tslint:disable-next-line: readonly-array\n    var left = [];\n    // tslint:disable-next-line: readonly-array\n    var right = [];\n    for (var i = 0; i < fa.length; i++) {\n        var e = f(i, fa[i]);\n        if (e._tag === 'Left') {\n            left.push(e.left);\n        }\n        else {\n            right.push(e.right);\n        }\n    }\n    return {\n        left: left,\n        right: right\n    };\n}; };\n/**\n * @category FilterableWithIndex\n * @since 2.5.0\n */\nexport var filterWithIndex = function (predicateWithIndex) { return function (fa) {\n    return fa.filter(function (a, i) { return predicateWithIndex(i, a); });\n}; };\n/**\n * @category Extend\n * @since 2.5.0\n */\nexport var extend = function (f) { return function (wa) { return wa.map(function (_, i, as) { return f(as.slice(i)); }); }; };\n/**\n * @category Extend\n * @since 2.5.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var foldMapWithIndex = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex_(M);\n    return function (f) { return function (fa) { return foldMapWithIndexM(fa, f); }; };\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduce = function (b, f) {\n    return reduceWithIndex(b, function (_, b, a) { return f(b, a); });\n};\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var foldMap = function (M) {\n    var foldMapWithIndexM = foldMapWithIndex(M);\n    return function (f) { return foldMapWithIndexM(function (_, a) { return f(a); }); };\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceWithIndex = function (b, f) { return function (fa) { return reduceWithIndex_(fa, b, f); }; };\n/**\n * @category Foldable\n * @since 2.5.0\n */\nexport var reduceRight = function (b, f) {\n    return reduceRightWithIndex(b, function (_, a, b) { return f(a, b); });\n};\n/**\n * @category FoldableWithIndex\n * @since 2.5.0\n */\nexport var reduceRightWithIndex = function (b, f) { return function (fa) { return fa.reduceRight(function (b, a, i) { return f(i, a, b); }, b); }; };\n/**\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseWithIndexF = traverseWithIndex(F);\n    return function (f) { return traverseWithIndexF(function (_, a) { return f(a); }); };\n};\n/**\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ta) {\n    return reduce_(ta, F.of(zero()), function (fas, fa) {\n        return F.ap(F.map(fas, function (as) { return function (a) { return snoc(as, a); }; }), fa);\n    });\n}; };\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nexport var traverseWithIndex = function (F) { return function (f) {\n    return reduceWithIndex(F.of(zero()), function (i, fbs, a) {\n        return F.ap(F.map(fbs, function (bs) { return function (b) { return snoc(bs, b); }; }), f(i, a));\n    });\n}; };\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), compact); }; };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var traverseF = traverse(F);\n    return function (f) { return function (fa) { return F.map(pipe(fa, traverseF(f)), separate); }; };\n};\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nexport var unfold = function (b, f) {\n    // tslint:disable-next-line: readonly-array\n    var ret = [];\n    var bb = b;\n    while (true) {\n        var mt = f(bb);\n        if (isSome(mt)) {\n            var _a = mt.value, a = _a[0], b_1 = _a[1];\n            ret.push(a);\n            bb = b_1;\n        }\n        else {\n            break;\n        }\n    }\n    return ret;\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var URI = 'ReadonlyArray';\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    alt: alt_,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: map_,\n    extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: map_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverse: traverse_,\n    sequence: sequence,\n    traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: map_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    wither: wither_,\n    wilt: wilt_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.5.0\n */\nexport var readonlyArray = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    mapWithIndex: mapWithIndex_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_,\n    alt: alt_,\n    zero: zero,\n    unfold: unfold,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_,\n    extend: extend_,\n    wither: wither_,\n    wilt: wilt_\n};\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeInsertAt(i, a, as) {\n    var xs = as.slice();\n    xs.splice(i, 0, a);\n    return xs;\n}\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeUpdateAt(i, a, as) {\n    if (as[i] === a) {\n        return as;\n    }\n    else {\n        var xs = as.slice();\n        xs[i] = a;\n        return xs;\n    }\n}\n/**\n * @category unsafe\n * @since 2.5.0\n */\nexport function unsafeDeleteAt(i, as) {\n    var xs = as.slice();\n    xs.splice(i, 1);\n    return xs;\n}\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.5.0\n */\nexport var empty = [];\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var bindTo = function (name) {\n    return map(bindTo_(name));\n};\n/**\n * @since 2.8.0\n */\nexport var bind = function (name, f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function (b) { return bind_(a, name, b); }));\n    });\n};\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = function (name, fb) {\n    return flow(map(function (a) { return function (b) { return bind_(a, name, b); }; }), ap(fb));\n};\n","import * as RA from './ReadonlyArray';\n// -------------------------------------------------------------------------------------\n// model\n// -------------------------------------------------------------------------------------\n/* tslint:disable:readonly-array */\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var getShow = RA.getShow;\n/**\n * Returns a `Monoid` for `Array<A>`\n *\n * @example\n * import { getMonoid } from 'fp-ts/Array'\n *\n * const M = getMonoid<number>()\n * assert.deepStrictEqual(M.concat([1, 2], [3, 4]), [1, 2, 3, 4])\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getMonoid = RA.getMonoid;\n/**\n * Derives an `Eq` over the `Array` of a given element type from the `Eq` of that type. The derived `Eq` defines two\n * arrays as equal if all elements of both arrays are compared equal pairwise with the given `E`. In case of arrays of\n * different lengths, the result is non equality.\n *\n * @example\n * import { eqString } from 'fp-ts/Eq'\n * import { getEq } from 'fp-ts/Array'\n *\n * const E = getEq(eqString)\n * assert.strictEqual(E.equals(['a', 'b'], ['a', 'b']), true)\n * assert.strictEqual(E.equals(['a'], []), false)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getEq = RA.getEq;\n/**\n * Derives an `Ord` over the `Array` of a given element type from the `Ord` of that type. The ordering between two such\n * arrays is equal to: the first non equal comparison of each arrays elements taken pairwise in increasing order, in\n * case of equality over all the pairwise elements; the longest array is considered the greatest, if both arrays have\n * the same length, the result is equality.\n *\n * @example\n * import { getOrd } from 'fp-ts/Array'\n * import { ordString } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordString)\n * assert.strictEqual(O.compare(['b'], ['a']), 1)\n * assert.strictEqual(O.compare(['a'], ['a']), 0)\n * assert.strictEqual(O.compare(['a'], ['b']), -1)\n *\n * @category instances\n * @since 2.0.0\n */\nexport var getOrd = RA.getOrd;\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * Return a list of length `n` with element `i` initialized with `f(i)`\n *\n * @example\n * import { makeBy } from 'fp-ts/Array'\n *\n * const double = (n: number): number => n * 2\n * assert.deepStrictEqual(makeBy(5, double), [0, 2, 4, 6, 8])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var makeBy = RA.makeBy;\n/**\n * Create an array containing a range of integers, including both endpoints\n *\n * @example\n * import { range } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(range(1, 5), [1, 2, 3, 4, 5])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var range = RA.range;\n/**\n * Create an array containing a value repeated the specified number of times\n *\n * @example\n * import { replicate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(replicate(3, 'a'), ['a', 'a', 'a'])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var replicate = RA.replicate;\n/**\n * Removes one level of nesting\n *\n * @example\n * import { flatten } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(flatten([[1], [2], [3]]), [1, 2, 3])\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var flatten = RA.flatten;\n/**\n * Break an array into its first element and remaining elements\n *\n * @example\n * import { foldLeft } from 'fp-ts/Array'\n *\n * const len: <A>(as: Array<A>) => number = foldLeft(() => 0, (_, tail) => 1 + len(tail))\n * assert.strictEqual(len([1, 2, 3]), 3)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var foldLeft = RA.foldLeft;\n/**\n * Break an array into its initial elements and the last element\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var foldRight = RA.foldRight;\n/**\n * Same as `reduce` but it carries over the intermediate steps\n *\n * ```ts\n * import { scanLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanLeft(10, (b, a: number) => b - a)([1, 2, 3]), [10, 9, 7, 4])\n * ```\n * @category combinators\n * @since 2.0.0\n */\nexport var scanLeft = RA.scanLeft;\n/**\n * Fold an array from the right, keeping all intermediate results instead of only the final result\n *\n * @example\n * import { scanRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(scanRight(10, (a: number, b) => b - a)([1, 2, 3]), [4, 5, 7, 10])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var scanRight = RA.scanRight;\n/**\n * Test whether an array is empty\n *\n * @example\n * import { isEmpty } from 'fp-ts/Array'\n *\n * assert.strictEqual(isEmpty([]), true)\n *\n * @since 2.0.0\n */\nexport var isEmpty = RA.isEmpty;\n/**\n * Test whether an array is non empty narrowing down the type to `NonEmptyArray<A>`\n *\n * @category guards\n * @since 2.0.0\n */\nexport var isNonEmpty = RA.isNonEmpty;\n/**\n * Test whether an array contains a particular index\n *\n * @since 2.0.0\n */\nexport var isOutOfBound = RA.isOutOfBound;\n// TODO: remove non-curried overloading in v3\n/**\n * This function provides a safe way to read a value at a particular index from an array\n *\n * @example\n * import { lookup } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(1)), some(2))\n * assert.deepStrictEqual(pipe([1, 2, 3], lookup(3)), none)\n *\n * @since 2.0.0\n */\nexport var lookup = RA.lookup;\n// TODO: remove non-curried overloading in v3\n/**\n * Attaches an element to the front of an array, creating a new non empty array\n *\n * @example\n * import { cons } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], cons(0)), [0, 1, 2, 3])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var cons = RA.cons;\n// TODO: curry in v3\n/**\n * Append an element to the end of an array, creating a new non empty array\n *\n * @example\n * import { snoc } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(snoc([1, 2, 3], 4), [1, 2, 3, 4])\n *\n * @category constructors\n * @since 2.0.0\n */\nexport var snoc = RA.snoc;\n/**\n * Get the first element in an array, or `None` if the array is empty\n *\n * @example\n * import { head } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(head([1, 2, 3]), some(1))\n * assert.deepStrictEqual(head([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var head = RA.head;\n/**\n * Get the last element in an array, or `None` if the array is empty\n *\n * @example\n * import { last } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(last([1, 2, 3]), some(3))\n * assert.deepStrictEqual(last([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var last = RA.last;\n/**\n * Get all but the first element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { tail } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(tail([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(tail([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var tail = RA.tail;\n/**\n * Get all but the last element of an array, creating a new array, or `None` if the array is empty\n *\n * @example\n * import { init } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(init([1, 2, 3]), some([1, 2]))\n * assert.deepStrictEqual(init([]), none)\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var init = RA.init;\n/**\n * Keep only a number of elements from the start of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeLeft(2)([1, 2, 3]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var takeLeft = RA.takeLeft;\n/**\n * Keep only a number of elements from the end of an array, creating a new array.\n * `n` must be a natural number\n *\n * @example\n * import { takeRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(takeRight(2)([1, 2, 3, 4, 5]), [4, 5])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var takeRight = RA.takeRight;\nexport function takeLeftWhile(predicate) {\n    return RA.takeLeftWhile(predicate);\n}\nexport function spanLeft(predicate) {\n    return RA.spanLeft(predicate);\n}\n/* tslint:enable:readonly-keyword */\n/**\n * Drop a number of elements from the start of an array, creating a new array\n *\n * @example\n * import { dropLeft } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeft(2)([1, 2, 3]), [3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var dropLeft = RA.dropLeft;\n/**\n * Drop a number of elements from the end of an array, creating a new array\n *\n * @example\n * import { dropRight } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropRight(2)([1, 2, 3, 4, 5]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var dropRight = RA.dropRight;\n/**\n * Remove the longest initial subarray for which all element satisfy the specified predicate, creating a new array\n *\n * @example\n * import { dropLeftWhile } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(dropLeftWhile((n: number) => n % 2 === 1)([1, 3, 2, 4, 5]), [2, 4, 5])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var dropLeftWhile = RA.dropLeftWhile;\n/**\n * Find the first index for which a predicate holds\n *\n * @example\n * import { findIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([1, 2, 3]), some(1))\n * assert.deepStrictEqual(findIndex((n: number) => n === 2)([]), none)\n *\n * @since 2.0.0\n */\nexport var findIndex = RA.findIndex;\nexport function findFirst(predicate) {\n    return RA.findFirst(predicate);\n}\n/**\n * Find the first element returned by an option based selector function\n *\n * @example\n * import { findFirstMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the first person that has an age\n * assert.deepStrictEqual(findFirstMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Mary'))\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var findFirstMap = RA.findFirstMap;\nexport function findLast(predicate) {\n    return RA.findLast(predicate);\n}\n/**\n * Find the last element returned by an option based selector function\n *\n * @example\n * import { findLastMap } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface Person {\n *   name: string\n *   age?: number\n * }\n *\n * const persons: Array<Person> = [{ name: 'John' }, { name: 'Mary', age: 45 }, { name: 'Joey', age: 28 }]\n *\n * // returns the name of the last person that has an age\n * assert.deepStrictEqual(findLastMap((p: Person) => (p.age === undefined ? none : some(p.name)))(persons), some('Joey'))\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var findLastMap = RA.findLastMap;\n/**\n * Returns the index of the last element of the list which matches the predicate\n *\n * @example\n * import { findLastIndex } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * interface X {\n *   a: number\n *   b: number\n * }\n * const xs: Array<X> = [{ a: 1, b: 0 }, { a: 1, b: 1 }]\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 1)(xs), some(1))\n * assert.deepStrictEqual(findLastIndex((x: { a: number }) => x.a === 4)(xs), none)\n *\n *\n * @since 2.0.0\n */\nexport var findLastIndex = RA.findLastIndex;\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport var copy = RA.toArray;\n/**\n * Insert an element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { insertAt } from 'fp-ts/Array'\n * import { some } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(insertAt(2, 5)([1, 2, 3, 4]), some([1, 2, 5, 3, 4]))\n *\n * @since 2.0.0\n */\nexport var insertAt = RA.insertAt;\n/**\n * Change the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { updateAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(updateAt(1, 1)([1, 2, 3]), some([1, 1, 3]))\n * assert.deepStrictEqual(updateAt(1, 1)([]), none)\n *\n * @since 2.0.0\n */\nexport var updateAt = RA.updateAt;\n/**\n * Delete the element at the specified index, creating a new array, or returning `None` if the index is out of bounds\n *\n * @example\n * import { deleteAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(deleteAt(0)([1, 2, 3]), some([2, 3]))\n * assert.deepStrictEqual(deleteAt(1)([]), none)\n *\n * @since 2.0.0\n */\nexport var deleteAt = RA.deleteAt;\n/**\n * Apply a function to the element at the specified index, creating a new array, or returning `None` if the index is out\n * of bounds\n *\n * @example\n * import { modifyAt } from 'fp-ts/Array'\n * import { some, none } from 'fp-ts/Option'\n *\n * const double = (x: number): number => x * 2\n * assert.deepStrictEqual(modifyAt(1, double)([1, 2, 3]), some([1, 4, 3]))\n * assert.deepStrictEqual(modifyAt(1, double)([]), none)\n *\n * @since 2.0.0\n */\nexport var modifyAt = RA.modifyAt;\n/**\n * Reverse an array, creating a new array\n *\n * @example\n * import { reverse } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(reverse([1, 2, 3]), [3, 2, 1])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var reverse = RA.reverse;\n/**\n * Extracts from an array of `Either` all the `Right` elements. All the `Right` elements are extracted in order\n *\n * @example\n * import { rights } from 'fp-ts/Array'\n * import { right, left } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(rights([right(1), left('foo'), right(2)]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var rights = RA.rights;\n/**\n * Extracts from an array of `Either` all the `Left` elements. All the `Left` elements are extracted in order\n *\n * @example\n * import { lefts } from 'fp-ts/Array'\n * import { left, right } from 'fp-ts/Either'\n *\n * assert.deepStrictEqual(lefts([right(1), left('foo'), right(2)]), ['foo'])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var lefts = RA.lefts;\n/**\n * Sort the elements of an array in increasing order, creating a new array\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * assert.deepStrictEqual(sort(ordNumber)([3, 2, 1]), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var sort = RA.sort;\n/**\n * Apply a function to pairs of elements at the same index in two arrays, collecting the results in a new array. If one\n * input array is short, excess elements of the longer array are discarded.\n *\n * @example\n * import { zipWith } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(zipWith([1, 2, 3], ['a', 'b', 'c', 'd'], (n, s) => s + n), ['a1', 'b2', 'c3'])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var zipWith = RA.zipWith;\n// TODO: remove non-curried overloading in v3\n/**\n * Takes two arrays and returns an array of corresponding pairs. If one input array is short, excess elements of the\n * longer array are discarded\n *\n * @example\n * import { zip } from 'fp-ts/Array'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2, 3], zip(['a', 'b', 'c', 'd'])), [[1, 'a'], [2, 'b'], [3, 'c']])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var zip = RA.zip;\n/**\n * The function is reverse of `zip`. Takes an array of pairs and return two corresponding arrays\n *\n * @example\n * import { unzip } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(unzip([[1, 'a'], [2, 'b'], [3, 'c']]), [[1, 2, 3], ['a', 'b', 'c']])\n *\n * @since 2.0.0\n */\nexport var unzip = RA.unzip;\n/**\n * Rotate an array to the right by `n` steps\n *\n * @example\n * import { rotate } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(rotate(2)([1, 2, 3, 4, 5]), [4, 5, 1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var rotate = RA.rotate;\n// TODO: remove non-curried overloading in v3\n/**\n * Test if a value is a member of an array. Takes a `Eq<A>` as a single\n * argument which returns the function to use to search for a value of type `A` in\n * an array of type `Array<A>`.\n *\n * @example\n * import { elem } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(pipe([1, 2, 3], elem(eqNumber)(2)), true)\n * assert.strictEqual(pipe([1, 2, 3], elem(eqNumber)(0)), false)\n *\n * @since 2.0.0\n */\nexport var elem = RA.elem;\n/**\n * Remove duplicates from an array, keeping the first occurrence of an element.\n *\n * @example\n * import { uniq } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.deepStrictEqual(uniq(eqNumber)([1, 2, 1]), [1, 2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var uniq = RA.uniq;\n/**\n * Sort the elements of an array in increasing order, where elements are compared using first `ords[0]`, then `ords[1]`,\n * etc...\n *\n * @example\n * import { sortBy } from 'fp-ts/Array'\n * import { ord, ordString, ordNumber } from 'fp-ts/Ord'\n *\n * interface Person {\n *   name: string\n *   age: number\n * }\n * const byName = ord.contramap(ordString, (p: Person) => p.name)\n * const byAge = ord.contramap(ordNumber, (p: Person) => p.age)\n *\n * const sortByNameByAge = sortBy([byName, byAge])\n *\n * const persons = [{ name: 'a', age: 1 }, { name: 'b', age: 3 }, { name: 'c', age: 2 }, { name: 'b', age: 2 }]\n * assert.deepStrictEqual(sortByNameByAge(persons), [\n *   { name: 'a', age: 1 },\n *   { name: 'b', age: 2 },\n *   { name: 'b', age: 3 },\n *   { name: 'c', age: 2 }\n * ])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var sortBy = RA.sortBy;\n/**\n * A useful recursion pattern for processing an array to produce a new array, often used for \"chopping\" up the input\n * array. Typically chop is called with some function that will consume an initial prefix of the array and produce a\n * value and the rest of the array.\n *\n * @example\n * import { Eq, eqNumber } from 'fp-ts/Eq'\n * import { chop, spanLeft } from 'fp-ts/Array'\n *\n * const group = <A>(S: Eq<A>): ((as: Array<A>) => Array<Array<A>>) => {\n *   return chop(as => {\n *     const { init, rest } = spanLeft((a: A) => S.equals(a, as[0]))(as)\n *     return [init, rest]\n *   })\n * }\n * assert.deepStrictEqual(group(eqNumber)([1, 1, 2, 3, 3, 4]), [[1, 1], [2], [3, 3], [4]])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var chop = RA.chop;\n/**\n * Splits an array into two pieces, the first piece has `n` elements.\n *\n * @example\n * import { splitAt } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(splitAt(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4, 5]])\n *\n * @since 2.0.0\n */\nexport var splitAt = RA.splitAt;\n/**\n * Splits an array into length-`n` pieces. The last piece will be shorter if `n` does not evenly divide the length of\n * the array. Note that `chunksOf(n)([])` is `[]`, not `[[]]`. This is intentional, and is consistent with a recursive\n * definition of `chunksOf`; it satisfies the property that\n *\n * ```ts\n * chunksOf(n)(xs).concat(chunksOf(n)(ys)) == chunksOf(n)(xs.concat(ys)))\n * ```\n *\n * whenever `n` evenly divides the length of `xs`.\n *\n * @example\n * import { chunksOf } from 'fp-ts/Array'\n *\n * assert.deepStrictEqual(chunksOf(2)([1, 2, 3, 4, 5]), [[1, 2], [3, 4], [5]])\n *\n * @since 2.0.0\n */\nexport var chunksOf = RA.chunksOf;\nexport function comprehension(input, f, g) {\n    if (g === void 0) { g = function () { return true; }; }\n    return RA.comprehension(input, f, g);\n}\n// TODO: remove non-curried overloading in v3\n/**\n * Creates an array of unique values, in order, from all given arrays using a `Eq` for equality comparisons\n *\n * @example\n * import { union } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2], union(eqNumber)([2, 3])), [1, 2, 3])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var union = RA.union;\n// TODO: remove non-curried overloading in v3\n/**\n * Creates an array of unique values that are included in all given arrays using a `Eq` for equality\n * comparisons. The order and references of result values are determined by the first array.\n *\n * @example\n * import { intersection } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2], intersection(eqNumber)([2, 3])), [2])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var intersection = RA.intersection;\n// TODO: remove non-curried overloading in v3\n/**\n * Creates an array of array values not included in the other given array using a `Eq` for equality\n * comparisons. The order and references of result values are determined by the first array.\n *\n * @example\n * import { difference } from 'fp-ts/Array'\n * import { eqNumber } from 'fp-ts/Eq'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(pipe([1, 2], difference(eqNumber)([2, 3])), [1])\n *\n * @category combinators\n * @since 2.0.0\n */\nexport var difference = RA.difference;\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var of = RA.of;\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = RA.Monad.map;\nvar ap_ = RA.Monad.ap;\nvar chain_ = RA.Monad.chain;\nvar mapWithIndex_ = RA.FunctorWithIndex.mapWithIndex;\nvar filter_ = RA.Filterable.filter;\nvar filterMap_ = RA.Filterable.filterMap;\nvar partition_ = RA.Filterable.partition;\nvar partitionMap_ = RA.Filterable.partitionMap;\nvar filterWithIndex_ = RA.FilterableWithIndex\n    .filterWithIndex;\nvar filterMapWithIndex_ = RA.FilterableWithIndex\n    .filterMapWithIndex;\nvar partitionWithIndex_ = RA.FilterableWithIndex\n    .partitionWithIndex;\nvar partitionMapWithIndex_ = RA.FilterableWithIndex\n    .partitionMapWithIndex;\nvar reduce_ = RA.Foldable.reduce;\nvar foldMap_ = RA.Foldable.foldMap;\nvar reduceRight_ = RA.Foldable.reduceRight;\nvar traverse_ = RA.Traversable.traverse;\nvar alt_ = RA.Alternative.alt;\nvar reduceWithIndex_ = RA.FoldableWithIndex.reduceWithIndex;\nvar foldMapWithIndex_ = RA.FoldableWithIndex.foldMapWithIndex;\nvar reduceRightWithIndex_ = RA.FoldableWithIndex.reduceRightWithIndex;\nvar traverseWithIndex_ = RA.TraversableWithIndex\n    .traverseWithIndex;\nvar extend_ = RA.Extend.extend;\nvar wither_ = RA.Witherable.wither;\nvar wilt_ = RA.Witherable.wilt;\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * `map` can be used to turn functions `(a: A) => B` into functions `(fa: F<A>) => F<B>` whose argument and return types\n * use the type constructor `F` to represent some computational context.\n *\n * @category Functor\n * @since 2.0.0\n */\nexport var map = RA.map;\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var ap = RA.ap;\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var apFirst = RA.apFirst;\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var apSecond = RA.apSecond;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chain = RA.chain;\n/**\n * @since 2.7.0\n */\nexport var chainWithIndex = RA.chainWithIndex;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chainFirst = RA.chainFirst;\n/**\n * @category FunctorWithIndex\n * @since 2.0.0\n */\nexport var mapWithIndex = RA.mapWithIndex;\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexport var compact = RA.compact;\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexport var separate = RA.separate;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var filter = RA.filter;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var filterMap = RA.filterMap;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var partition = RA.partition;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var partitionWithIndex = RA.partitionWithIndex;\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var partitionMap = RA.partitionMap;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var partitionMapWithIndex = RA.partitionMapWithIndex;\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * @category Alt\n * @since 2.0.0\n */\nexport var alt = RA.alt;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var filterMapWithIndex = RA.filterMapWithIndex;\n/**\n * @category FilterableWithIndex\n * @since 2.0.0\n */\nexport var filterWithIndex = RA.filterWithIndex;\n/**\n * @category Extend\n * @since 2.0.0\n */\nexport var extend = RA.extend;\n/**\n * @category Extend\n * @since 2.0.0\n */\nexport var duplicate = RA.duplicate;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var foldMap = RA.foldMap;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var foldMapWithIndex = RA.foldMapWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduce = RA.reduce;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceWithIndex = RA.reduceWithIndex;\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduceRight = RA.reduceRight;\n/**\n * @category FoldableWithIndex\n * @since 2.0.0\n */\nexport var reduceRightWithIndex = RA.reduceRightWithIndex;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = RA.traverse;\n/**\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = RA.sequence;\n/**\n * @category TraversableWithIndex\n * @since 2.6.3\n */\nexport var traverseWithIndex = RA.traverseWithIndex;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wither = RA.wither;\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wilt = RA.wilt;\n/**\n * @category Unfoldable\n * @since 2.6.6\n */\nexport var unfold = RA.unfold;\n/**\n * @category Alternative\n * @since 2.7.0\n */\nexport var zero = RA.Alternative.zero;\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Array';\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FunctorWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Unfoldable = {\n    URI: URI,\n    unfold: unfold\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    alt: alt_,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: map_,\n    extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: map_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FilterableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var FoldableWithIndex = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var TraversableWithIndex = {\n    URI: URI,\n    map: map_,\n    mapWithIndex: mapWithIndex_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverse: traverse_,\n    sequence: sequence,\n    traverseWithIndex: traverseWithIndex_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: map_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    wither: wither_,\n    wilt: wilt_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var array = {\n    URI: URI,\n    compact: compact,\n    separate: separate,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    mapWithIndex: mapWithIndex_,\n    partitionMapWithIndex: partitionMapWithIndex_,\n    partitionWithIndex: partitionWithIndex_,\n    filterMapWithIndex: filterMapWithIndex_,\n    filterWithIndex: filterWithIndex_,\n    alt: alt_,\n    zero: zero,\n    unfold: unfold,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    reduceWithIndex: reduceWithIndex_,\n    foldMapWithIndex: foldMapWithIndex_,\n    reduceRightWithIndex: reduceRightWithIndex_,\n    traverseWithIndex: traverseWithIndex_,\n    extend: extend_,\n    wither: wither_,\n    wilt: wilt_\n};\n// -------------------------------------------------------------------------------------\n// unsafe\n// -------------------------------------------------------------------------------------\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeInsertAt = RA.unsafeInsertAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeUpdateAt = RA.unsafeUpdateAt;\n/**\n * @category unsafe\n * @since 2.0.0\n */\nexport var unsafeDeleteAt = RA.unsafeDeleteAt;\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * An empty array\n *\n * @since 2.0.0\n */\nexport var empty = [];\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var bindTo = RA.bindTo;\n/**\n * @since 2.8.0\n */\nexport var bind = RA.bind;\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = RA.apS;\n","import { identity, pipe, bind_, bindTo_, flow } from './function';\n// -------------------------------------------------------------------------------------\n// guards\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if the option is an instance of `Some`, `false` otherwise\n *\n * @example\n * import { some, none, isSome } from 'fp-ts/Option'\n *\n * assert.strictEqual(isSome(some(1)), true)\n * assert.strictEqual(isSome(none), false)\n *\n * @category guards\n * @since 2.0.0\n */\nexport var isSome = function (fa) { return fa._tag === 'Some'; };\n/**\n * Returns `true` if the option is `None`, `false` otherwise\n *\n * @example\n * import { some, none, isNone } from 'fp-ts/Option'\n *\n * assert.strictEqual(isNone(some(1)), false)\n * assert.strictEqual(isNone(none), true)\n *\n * @category guards\n * @since 2.0.0\n */\nexport var isNone = function (fa) { return fa._tag === 'None'; };\n// -------------------------------------------------------------------------------------\n// constructors\n// -------------------------------------------------------------------------------------\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var none = { _tag: 'None' };\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var some = function (a) { return ({ _tag: 'Some', value: a }); };\n/**\n * Constructs a new `Option` from a nullable type. If the value is `null` or `undefined`, returns `None`, otherwise\n * returns the value wrapped in a `Some`\n *\n * @example\n * import { none, some, fromNullable } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(fromNullable(undefined), none)\n * assert.deepStrictEqual(fromNullable(null), none)\n * assert.deepStrictEqual(fromNullable(1), some(1))\n *\n * @category constructors\n * @since 2.0.0\n */\nexport function fromNullable(a) {\n    return a == null ? none : some(a);\n}\nexport function fromPredicate(predicate) {\n    return function (a) { return (predicate(a) ? some(a) : none); };\n}\n/**\n * Transforms an exception into an `Option`. If `f` throws, returns `None`, otherwise returns the output wrapped in\n * `Some`\n *\n * @example\n * import { none, some, tryCatch } from 'fp-ts/Option'\n *\n * assert.deepStrictEqual(\n *   tryCatch(() => {\n *     throw new Error()\n *   }),\n *   none\n * )\n * assert.deepStrictEqual(tryCatch(() => 1), some(1))\n *\n * @category constructors\n * @since 2.0.0\n */\nexport function tryCatch(f) {\n    try {\n        return some(f());\n    }\n    catch (e) {\n        return none;\n    }\n}\n/**\n * Returns an `E` value if possible\n *\n * @category constructors\n * @since 2.0.0\n */\nexport function getLeft(ma) {\n    return ma._tag === 'Right' ? none : some(ma.left);\n}\n/**\n * Returns an `A` value if possible\n *\n * @category constructors\n * @since 2.0.0\n */\nexport function getRight(ma) {\n    return ma._tag === 'Left' ? none : some(ma.right);\n}\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport var fromEither = function (ma) { return (ma._tag === 'Left' ? none : some(ma.right)); };\n// -------------------------------------------------------------------------------------\n// destructors\n// -------------------------------------------------------------------------------------\n/**\n * Takes a default value, a function, and an `Option` value, if the `Option` value is `None` the default value is\n * returned, otherwise the function is applied to the value inside the `Some` and the result is returned.\n *\n * @example\n * import { some, none, fold } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     fold(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a some containing 1'\n * )\n *\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     fold(() => 'a none', a => `a some containing ${a}`)\n *   ),\n *   'a none'\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport function fold(onNone, onSome) {\n    return function (ma) { return (isNone(ma) ? onNone() : onSome(ma.value)); };\n}\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `null`.\n *\n * @example\n * import { some, none, toNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toNullable\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toNullable\n *   ),\n *   null\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport function toNullable(ma) {\n    return isNone(ma) ? null : ma.value;\n}\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns `undefined`.\n *\n * @example\n * import { some, none, toUndefined } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     toUndefined\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     toUndefined\n *   ),\n *   undefined\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport function toUndefined(ma) {\n    return isNone(ma) ? undefined : ma.value;\n}\n/**\n * Less strict version of [`getOrElse`](#getOrElse).\n *\n * @category destructors\n * @since 2.6.0\n */\nexport var getOrElseW = function (onNone) { return function (ma) { return (isNone(ma) ? onNone() : ma.value); }; };\n/**\n * Extracts the value out of the structure, if it exists. Otherwise returns the given default value\n *\n * @example\n * import { some, none, getOrElse } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     getOrElse(() => 0)\n *   ),\n *   1\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     getOrElse(() => 0)\n *   ),\n *   0\n * )\n *\n * @category destructors\n * @since 2.0.0\n */\nexport var getOrElse = getOrElseW;\n// -------------------------------------------------------------------------------------\n// combinators\n// -------------------------------------------------------------------------------------\n/**\n * This is `chain` + `fromNullable`, useful when working with optional values\n *\n * @example\n * import { some, none, fromNullable, mapNullable } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * interface Employee {\n *   company?: {\n *     address?: {\n *       street?: {\n *         name?: string\n *       }\n *     }\n *   }\n * }\n *\n * const employee1: Employee = { company: { address: { street: { name: 'high street' } } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee1.company),\n *     mapNullable(company => company.address),\n *     mapNullable(address => address.street),\n *     mapNullable(street => street.name)\n *   ),\n *   some('high street')\n * )\n *\n * const employee2: Employee = { company: { address: { street: {} } } }\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     fromNullable(employee2.company),\n *     mapNullable(company => company.address),\n *     mapNullable(address => address.street),\n *     mapNullable(street => street.name)\n *   ),\n *   none\n * )\n *\n * @category combinators\n * @since 2.0.0\n */\nexport function mapNullable(f) {\n    return function (ma) { return (isNone(ma) ? none : fromNullable(f(ma.value))); };\n}\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\nvar map_ = function (fa, f) { return (isNone(fa) ? none : some(f(fa.value))); };\nvar ap_ = function (fab, fa) { return (isNone(fab) ? none : isNone(fa) ? none : some(fab.value(fa.value))); };\nvar chain_ = function (ma, f) { return (isNone(ma) ? none : f(ma.value)); };\nvar reduce_ = function (fa, b, f) { return (isNone(fa) ? b : f(b, fa.value)); };\nvar foldMap_ = function (M) { return function (fa, f) { return (isNone(fa) ? M.empty : f(fa.value)); }; };\nvar reduceRight_ = function (fa, b, f) { return (isNone(fa) ? b : f(fa.value, b)); };\nvar traverse_ = function (F) { return function (ta, f) {\n    return isNone(ta) ? F.of(none) : F.map(f(ta.value), some);\n}; };\nvar alt_ = function (fa, that) { return (isNone(fa) ? that() : fa); };\nvar filter_ = function (fa, predicate) {\n    return isNone(fa) ? none : predicate(fa.value) ? fa : none;\n};\nvar filterMap_ = function (ma, f) { return (isNone(ma) ? none : f(ma.value)); };\nvar extend_ = function (wa, f) { return (isNone(wa) ? none : some(f(wa))); };\nvar partition_ = function (fa, predicate) {\n    return {\n        left: filter_(fa, function (a) { return !predicate(a); }),\n        right: filter_(fa, predicate)\n    };\n};\nvar partitionMap_ = function (fa, f) { return separate(map_(fa, f)); };\nvar wither_ = function (F) { return function (fa, f) {\n    return isNone(fa) ? F.of(none) : f(fa.value);\n}; };\nvar wilt_ = function (F) { return function (fa, f) {\n    var o = map_(fa, function (a) {\n        return F.map(f(a), function (e) { return ({\n            left: getLeft(e),\n            right: getRight(e)\n        }); });\n    });\n    return isNone(o)\n        ? F.of({\n            left: none,\n            right: none\n        })\n        : o.value;\n}; };\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * @category Functor\n * @since 2.0.0\n */\nexport var map = function (f) { return function (fa) { return map_(fa, f); }; };\n/**\n * Apply a function to an argument under a type constructor.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var ap = function (fa) { return function (fab) { return ap_(fab, fa); }; };\n/**\n * Combine two effectful actions, keeping only the result of the first.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var apFirst = function (fb) {\n    return flow(map(function (a) { return function () { return a; }; }), ap(fb));\n};\n/**\n * Combine two effectful actions, keeping only the result of the second.\n *\n * @category Apply\n * @since 2.0.0\n */\nexport var apSecond = function (fb) {\n    return flow(map(function () { return function (b) { return b; }; }), ap(fb));\n};\n/**\n * @category Applicative\n * @since 2.7.0\n */\nexport var of = some;\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation.\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chain = function (f) { return function (ma) { return chain_(ma, f); }; };\n/**\n * Composes computations in sequence, using the return value of one computation to determine the next computation and\n * keeping only the result of the first.\n *\n * @category Monad\n * @since 2.0.0\n */\nexport var chainFirst = function (f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function () { return a; }));\n    });\n};\n/**\n * @category Monad\n * @since 2.0.0\n */\nexport var flatten = \n/*#__PURE__*/\nchain(identity);\n/**\n * Identifies an associative operation on a type constructor. It is similar to `Semigroup`, except that it applies to\n * types of kind `* -> *`.\n *\n * In case of `Option` returns the left-most non-`None` value.\n *\n * @example\n * import * as O from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.deepStrictEqual(\n *   pipe(\n *     O.some('a'),\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('a')\n * )\n * assert.deepStrictEqual(\n *   pipe(\n *     O.none,\n *     O.alt(() => O.some('b'))\n *   ),\n *   O.some('b')\n * )\n *\n * @category Alt\n * @since 2.0.0\n */\nexport var alt = function (that) { return function (fa) { return alt_(fa, that); }; };\n/**\n * @category Alternative\n * @since 2.7.0\n */\nexport var zero = function () { return none; };\n/**\n * @category MonadThrow\n * @since 2.7.0\n */\nexport var throwError = function () { return none; };\n/**\n * @category Extend\n * @since 2.0.0\n */\nexport var extend = function (f) { return function (ma) { return extend_(ma, f); }; };\n/**\n * @category Extend\n * @since 2.0.0\n */\nexport var duplicate = \n/*#__PURE__*/\nextend(identity);\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduce = function (b, f) { return function (fa) { return reduce_(fa, b, f); }; };\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var foldMap = function (M) {\n    var foldMapM = foldMap_(M);\n    return function (f) { return function (fa) { return foldMapM(fa, f); }; };\n};\n/**\n * @category Foldable\n * @since 2.0.0\n */\nexport var reduceRight = function (b, f) { return function (fa) {\n    return reduceRight_(fa, b, f);\n}; };\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexport var compact = flatten;\nvar defaultSeparate = { left: none, right: none };\n/**\n * @category Compactable\n * @since 2.0.0\n */\nexport var separate = function (ma) {\n    var o = map_(ma, function (e) { return ({\n        left: getLeft(e),\n        right: getRight(e)\n    }); });\n    return isNone(o) ? defaultSeparate : o.value;\n};\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var filter = function (predicate) { return function (fa) { return filter_(fa, predicate); }; };\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var filterMap = function (f) { return function (fa) {\n    return filterMap_(fa, f);\n}; };\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var partition = function (predicate) { return function (fa) { return partition_(fa, predicate); }; };\n/**\n * @category Filterable\n * @since 2.0.0\n */\nexport var partitionMap = function (f) { return function (fa) { return partitionMap_(fa, f); }; };\n/**\n * @category Traversable\n * @since 2.6.3\n */\nexport var traverse = function (F) {\n    var traverseF = traverse_(F);\n    return function (f) { return function (ta) { return traverseF(ta, f); }; };\n};\n/**\n * @category Traversable\n * @since 2.6.3\n */\nexport var sequence = function (F) { return function (ta) {\n    return isNone(ta) ? F.of(none) : F.map(ta.value, some);\n}; };\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wither = function (F) {\n    var witherF = wither_(F);\n    return function (f) { return function (ta) { return witherF(ta, f); }; };\n};\n/**\n * @category Witherable\n * @since 2.6.5\n */\nexport var wilt = function (F) {\n    var wiltF = wilt_(F);\n    return function (f) { return function (ta) { return wiltF(ta, f); }; };\n};\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Option';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport function getShow(S) {\n    return {\n        show: function (ma) { return (isNone(ma) ? 'none' : \"some(\" + S.show(ma.value) + \")\"); }\n    };\n}\n/**\n * @example\n * import { none, some, getEq } from 'fp-ts/Option'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * const E = getEq(eqNumber)\n * assert.strictEqual(E.equals(none, none), true)\n * assert.strictEqual(E.equals(none, some(1)), false)\n * assert.strictEqual(E.equals(some(1), none), false)\n * assert.strictEqual(E.equals(some(1), some(2)), false)\n * assert.strictEqual(E.equals(some(1), some(1)), true)\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getEq(E) {\n    return {\n        equals: function (x, y) { return x === y || (isNone(x) ? isNone(y) : isNone(y) ? false : E.equals(x.value, y.value)); }\n    };\n}\n/**\n * The `Ord` instance allows `Option` values to be compared with\n * `compare`, whenever there is an `Ord` instance for\n * the type the `Option` contains.\n *\n * `None` is considered to be less than any `Some` value.\n *\n *\n * @example\n * import { none, some, getOrd } from 'fp-ts/Option'\n * import { ordNumber } from 'fp-ts/Ord'\n *\n * const O = getOrd(ordNumber)\n * assert.strictEqual(O.compare(none, none), 0)\n * assert.strictEqual(O.compare(none, some(1)), -1)\n * assert.strictEqual(O.compare(some(1), none), 1)\n * assert.strictEqual(O.compare(some(1), some(2)), -1)\n * assert.strictEqual(O.compare(some(1), some(1)), 0)\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getOrd(O) {\n    return {\n        equals: getEq(O).equals,\n        compare: function (x, y) { return (x === y ? 0 : isSome(x) ? (isSome(y) ? O.compare(x.value, y.value) : 1) : -1); }\n    };\n}\n/**\n * `Apply` semigroup\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | none               |\n * | none    | some(a) | none               |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getApplySemigroup, some, none } from 'fp-ts/Option'\n * import { semigroupSum } from 'fp-ts/Semigroup'\n *\n * const S = getApplySemigroup(semigroupSum)\n * assert.deepStrictEqual(S.concat(none, none), none)\n * assert.deepStrictEqual(S.concat(some(1), none), none)\n * assert.deepStrictEqual(S.concat(none, some(1)), none)\n * assert.deepStrictEqual(S.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getApplySemigroup(S) {\n    return {\n        concat: function (x, y) { return (isSome(x) && isSome(y) ? some(S.concat(x.value, y.value)) : none); }\n    };\n}\n/**\n * @category instances\n * @since 2.0.0\n */\nexport function getApplyMonoid(M) {\n    return {\n        concat: getApplySemigroup(M).concat,\n        empty: some(M.empty)\n    };\n}\n/**\n * Monoid returning the left-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(a) | some(a)      |\n * | some(a) | some(b) | some(a)      |\n *\n * @example\n * import { getFirstMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getFirstMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(1))\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getFirstMonoid() {\n    return {\n        concat: function (x, y) { return (isNone(x) ? y : x); },\n        empty: none\n    };\n}\n/**\n * Monoid returning the right-most non-`None` value\n *\n * | x       | y       | concat(x, y) |\n * | ------- | ------- | ------------ |\n * | none    | none    | none         |\n * | some(a) | none    | some(a)      |\n * | none    | some(a) | some(a)      |\n * | some(a) | some(b) | some(b)      |\n *\n * @example\n * import { getLastMonoid, some, none } from 'fp-ts/Option'\n *\n * const M = getLastMonoid<number>()\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(2))\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getLastMonoid() {\n    return {\n        concat: function (x, y) { return (isNone(y) ? x : y); },\n        empty: none\n    };\n}\n/**\n * Monoid returning the left-most non-`None` value. If both operands are `Some`s then the inner values are\n * concatenated using the provided `Semigroup`\n *\n * | x       | y       | concat(x, y)       |\n * | ------- | ------- | ------------------ |\n * | none    | none    | none               |\n * | some(a) | none    | some(a)            |\n * | none    | some(a) | some(a)            |\n * | some(a) | some(b) | some(concat(a, b)) |\n *\n * @example\n * import { getMonoid, some, none } from 'fp-ts/Option'\n * import { semigroupSum } from 'fp-ts/Semigroup'\n *\n * const M = getMonoid(semigroupSum)\n * assert.deepStrictEqual(M.concat(none, none), none)\n * assert.deepStrictEqual(M.concat(some(1), none), some(1))\n * assert.deepStrictEqual(M.concat(none, some(1)), some(1))\n * assert.deepStrictEqual(M.concat(some(1), some(2)), some(3))\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getMonoid(S) {\n    return {\n        concat: function (x, y) { return (isNone(x) ? y : isNone(y) ? x : some(S.concat(x.value, y.value))); },\n        empty: none\n    };\n}\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Functor = {\n    URI: URI,\n    map: map_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Applicative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Monad = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Foldable = {\n    URI: URI,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alt = {\n    URI: URI,\n    map: map_,\n    alt: alt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Alternative = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    alt: alt_,\n    zero: zero\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Extend = {\n    URI: URI,\n    map: map_,\n    extend: extend_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Compactable = {\n    URI: URI,\n    compact: compact,\n    separate: separate\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Filterable = {\n    URI: URI,\n    map: map_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Traversable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Witherable = {\n    URI: URI,\n    map: map_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    wither: wither_,\n    wilt: wilt_\n};\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var MonadThrow = {\n    URI: URI,\n    map: map_,\n    ap: ap_,\n    of: of,\n    chain: chain_,\n    throwError: throwError\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var option = {\n    URI: URI,\n    map: map_,\n    of: of,\n    ap: ap_,\n    chain: chain_,\n    reduce: reduce_,\n    foldMap: foldMap_,\n    reduceRight: reduceRight_,\n    traverse: traverse_,\n    sequence: sequence,\n    zero: zero,\n    alt: alt_,\n    extend: extend_,\n    compact: compact,\n    separate: separate,\n    filter: filter_,\n    filterMap: filterMap_,\n    partition: partition_,\n    partitionMap: partitionMap_,\n    wither: wither_,\n    wilt: wilt_,\n    throwError: throwError\n};\n// -------------------------------------------------------------------------------------\n// utils\n// -------------------------------------------------------------------------------------\n/**\n * Returns `true` if `ma` contains `a`\n *\n * @example\n * import { some, none, elem } from 'fp-ts/Option'\n * import { eqNumber } from 'fp-ts/Eq'\n *\n * assert.strictEqual(elem(eqNumber)(1, some(1)), true)\n * assert.strictEqual(elem(eqNumber)(2, some(1)), false)\n * assert.strictEqual(elem(eqNumber)(1, none), false)\n *\n * @since 2.0.0\n */\nexport function elem(E) {\n    return function (a, ma) { return (isNone(ma) ? false : E.equals(a, ma.value)); };\n}\n/**\n * Returns `true` if the predicate is satisfied by the wrapped value\n *\n * @example\n * import { some, none, exists } from 'fp-ts/Option'\n * import { pipe } from 'fp-ts/function'\n *\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 0)\n *   ),\n *   true\n * )\n * assert.strictEqual(\n *   pipe(\n *     some(1),\n *     exists(n => n > 1)\n *   ),\n *   false\n * )\n * assert.strictEqual(\n *   pipe(\n *     none,\n *     exists(n => n > 0)\n *   ),\n *   false\n * )\n *\n * @since 2.0.0\n */\nexport function exists(predicate) {\n    return function (ma) { return (isNone(ma) ? false : predicate(ma.value)); };\n}\n/**\n * Returns a `Refinement` (i.e. a custom type guard) from a `Option` returning function.\n * This function ensures that a custom type guard definition is type-safe.\n *\n * ```ts\n * import { some, none, getRefinement } from 'fp-ts/Option'\n *\n * type A = { type: 'A' }\n * type B = { type: 'B' }\n * type C = A | B\n *\n * const isA = (c: C): c is A => c.type === 'B' // <= typo but typescript doesn't complain\n * const isA = getRefinement<C, A>(c => (c.type === 'B' ? some(c) : none)) // static error: Type '\"B\"' is not assignable to type '\"A\"'\n * ```\n *\n * @since 2.0.0\n */\nexport function getRefinement(getOption) {\n    return function (a) { return isSome(getOption(a)); };\n}\n// -------------------------------------------------------------------------------------\n// do notation\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var bindTo = function (name) { return map(bindTo_(name)); };\n/**\n * @since 2.8.0\n */\nexport var bind = function (name, f) {\n    return chain(function (a) {\n        return pipe(f(a), map(function (b) { return bind_(a, name, b); }));\n    });\n};\n// -------------------------------------------------------------------------------------\n// pipeable sequence S\n// -------------------------------------------------------------------------------------\n/**\n * @since 2.8.0\n */\nexport var apS = function (name, fb) {\n    return flow(map(function (a) { return function (b) { return bind_(a, name, b); }; }), ap(fb));\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.github.io/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n","/**\n * @since 2.0.0\n */\nexport function sign(n) {\n    return n <= -1 ? -1 : n >= 1 ? 1 : 0;\n}\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var eqOrdering = {\n    equals: function (x, y) { return x === y; }\n};\n/**\n * Use `monoidOrdering` instead\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport var semigroupOrdering = {\n    concat: function (x, y) { return (x !== 0 ? x : y); }\n};\n/**\n * @category instances\n * @since 2.4.0\n */\nexport var monoidOrdering = {\n    // tslint:disable-next-line: deprecation\n    concat: semigroupOrdering.concat,\n    empty: 0\n};\n/**\n * @since 2.0.0\n */\nexport function invert(O) {\n    switch (O) {\n        case -1:\n            return 1;\n        case 1:\n            return -1;\n        default:\n            return 0;\n    }\n}\n","import { monoidOrdering } from './Ordering';\nimport { pipe } from './function';\n// default compare for primitive types\nfunction compare(x, y) {\n    return x < y ? -1 : x > y ? 1 : 0;\n}\nfunction strictEqual(a, b) {\n    return a === b;\n}\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var ordString = {\n    equals: strictEqual,\n    compare: compare\n};\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var ordNumber = {\n    equals: strictEqual,\n    compare: compare\n};\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var ordBoolean = {\n    equals: strictEqual,\n    compare: compare\n};\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly less than_ another\n *\n * @since 2.0.0\n */\nexport function lt(O) {\n    return function (x, y) { return O.compare(x, y) === -1; };\n}\n// TODO: curry in v3\n/**\n * Test whether one value is _strictly greater than_ another\n *\n * @since 2.0.0\n */\nexport function gt(O) {\n    return function (x, y) { return O.compare(x, y) === 1; };\n}\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly less than_ another\n *\n * @since 2.0.0\n */\nexport function leq(O) {\n    return function (x, y) { return O.compare(x, y) !== 1; };\n}\n// TODO: curry in v3\n/**\n * Test whether one value is _non-strictly greater than_ another\n *\n * @since 2.0.0\n */\nexport function geq(O) {\n    return function (x, y) { return O.compare(x, y) !== -1; };\n}\n// TODO: curry in v3\n/**\n * Take the minimum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nexport function min(O) {\n    return function (x, y) { return (O.compare(x, y) === 1 ? y : x); };\n}\n// TODO: curry in v3\n/**\n * Take the maximum of two values. If they are considered equal, the first argument is chosen\n *\n * @since 2.0.0\n */\nexport function max(O) {\n    return function (x, y) { return (O.compare(x, y) === -1 ? y : x); };\n}\n/**\n * Clamp a value between a minimum and a maximum\n *\n * @since 2.0.0\n */\nexport function clamp(O) {\n    var minO = min(O);\n    var maxO = max(O);\n    return function (low, hi) { return function (x) { return maxO(minO(x, hi), low); }; };\n}\n/**\n * Test whether a value is between a minimum and a maximum (inclusive)\n *\n * @since 2.0.0\n */\nexport function between(O) {\n    var lessThanO = lt(O);\n    var greaterThanO = gt(O);\n    return function (low, hi) { return function (x) { return (lessThanO(x, low) || greaterThanO(x, hi) ? false : true); }; };\n}\n/**\n * @category constructors\n * @since 2.0.0\n */\nexport function fromCompare(compare) {\n    var optimizedCompare = function (x, y) { return (x === y ? 0 : compare(x, y)); };\n    return {\n        equals: function (x, y) { return optimizedCompare(x, y) === 0; },\n        compare: optimizedCompare\n    };\n}\n/**\n * Use `getMonoid` instead\n *\n * @category instances\n * @since 2.0.0\n * @deprecated\n */\nexport function getSemigroup() {\n    return {\n        concat: function (x, y) { return fromCompare(function (a, b) { return monoidOrdering.concat(x.compare(a, b), y.compare(a, b)); }); }\n    };\n}\n/**\n * Returns a `Monoid` such that:\n *\n * - its `concat(ord1, ord2)` operation will order first by `ord1`, and then by `ord2`\n * - its `empty` value is an `Ord` that always considers compared elements equal\n *\n * @example\n * import { sort } from 'fp-ts/Array'\n * import { contramap, getDualOrd, getMonoid, ordBoolean, ordNumber, ordString } from 'fp-ts/Ord'\n * import { pipe } from 'fp-ts/function'\n * import { fold } from 'fp-ts/Monoid'\n *\n * interface User {\n *   id: number\n *   name: string\n *   age: number\n *   rememberMe: boolean\n * }\n *\n * const byName = pipe(\n *   ordString,\n *   contramap((p: User) => p.name)\n * )\n *\n * const byAge = pipe(\n *   ordNumber,\n *   contramap((p: User) => p.age)\n * )\n *\n * const byRememberMe = pipe(\n *   ordBoolean,\n *   contramap((p: User) => p.rememberMe)\n * )\n *\n * const M = getMonoid<User>()\n *\n * const users: Array<User> = [\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true }\n * ]\n *\n * // sort by name, then by age, then by `rememberMe`\n * const O1 = fold(M)([byName, byAge, byRememberMe])\n * assert.deepStrictEqual(sort(O1)(users), [\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * // now `rememberMe = true` first, then by name, then by age\n * const O2 = fold(M)([getDualOrd(byRememberMe), byName, byAge])\n * assert.deepStrictEqual(sort(O2)(users), [\n *   { id: 4, name: 'Giulio', age: 44, rememberMe: true },\n *   { id: 2, name: 'Guido', age: 46, rememberMe: true },\n *   { id: 3, name: 'Giulio', age: 44, rememberMe: false },\n *   { id: 1, name: 'Guido', age: 47, rememberMe: false }\n * ])\n *\n * @category instances\n * @since 2.4.0\n */\nexport function getMonoid() {\n    return {\n        // tslint:disable-next-line: deprecation\n        concat: getSemigroup().concat,\n        empty: fromCompare(function () { return 0; })\n    };\n}\n/**\n * Given a tuple of `Ord`s returns an `Ord` for the tuple\n *\n * @example\n * import { getTupleOrd, ordString, ordNumber, ordBoolean } from 'fp-ts/Ord'\n *\n * const O = getTupleOrd(ordString, ordNumber, ordBoolean)\n * assert.strictEqual(O.compare(['a', 1, true], ['b', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 2, true]), -1)\n * assert.strictEqual(O.compare(['a', 1, true], ['a', 1, false]), 1)\n *\n * @category instances\n * @since 2.0.0\n */\nexport function getTupleOrd() {\n    var ords = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        ords[_i] = arguments[_i];\n    }\n    var len = ords.length;\n    return fromCompare(function (x, y) {\n        var i = 0;\n        for (; i < len - 1; i++) {\n            var r = ords[i].compare(x[i], y[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return ords[i].compare(x[i], y[i]);\n    });\n}\n/**\n * @category combinators\n * @since 2.0.0\n */\nexport function getDualOrd(O) {\n    return fromCompare(function (x, y) { return O.compare(y, x); });\n}\n// -------------------------------------------------------------------------------------\n// non-pipeables\n// -------------------------------------------------------------------------------------\n/* istanbul ignore next */\nvar contramap_ = function (fa, f) { return pipe(fa, contramap(f)); };\n// -------------------------------------------------------------------------------------\n// pipeables\n// -------------------------------------------------------------------------------------\n/**\n * @category Contravariant\n * @since 2.0.0\n */\nexport var contramap = function (f) { return function (fa) {\n    return fromCompare(function (x, y) { return fa.compare(f(x), f(y)); });\n}; };\n// -------------------------------------------------------------------------------------\n// instances\n// -------------------------------------------------------------------------------------\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var URI = 'Ord';\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var ordDate = \n/*#__PURE__*/\npipe(ordNumber, contramap(function (date) { return date.valueOf(); }));\n/**\n * @category instances\n * @since 2.7.0\n */\nexport var Contravariant = {\n    URI: URI,\n    contramap: contramap_\n};\n// TODO: remove in v3\n/**\n * @category instances\n * @since 2.0.0\n */\nexport var ord = Contravariant;\n","'use strict';\nvar $ = require('../internals/export');\nvar $findIndex = require('../internals/array-iteration').findIndex;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND_INDEX);\n\n// Shouldn't skip holes\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.findIndex` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.findindex\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND_INDEX);\n","import { FunctionN } from 'fp-ts/lib/function';\nimport { IO } from 'fp-ts/lib/IO';\nimport { watch, computed, Ref, PropType, shallowRef, toRef } from 'vue';\nimport { isEnterEvent } from '../../utils/eventHelpers';\n\nexport function getUseTogglePropsDefinition<K extends string>(\n  statusName: K,\n  defaultStatus = false\n): UseTogglePropsDefinition<K> {\n  return {\n    [statusName]: {\n      type: Boolean,\n      default: defaultStatus\n    },\n    [`onUpdate:${statusName}`]: {\n      type: Function as PropType<FunctionN<[boolean], void>>,\n      required: false\n    },\n    hasPopup: {\n      type: Boolean,\n      default: false\n    },\n    onToggle: {\n      type: Function as PropType<FunctionN<[boolean], void>>,\n      required: false\n    },\n    onSetOn: {\n      type: Function as PropType<IO<void>>,\n      required: false\n    },\n    onSetOff: {\n      type: Function as PropType<IO<void>>,\n      required: false\n    }\n  } as UseTogglePropsDefinition<K>;\n}\n\nexport type UseTogglePropsDefinition<K extends string> = {\n  onToggle: {\n    type: PropType<FunctionN<[boolean], void>>;\n    required: false;\n  };\n  onSetOn: {\n    type: PropType<IO<void>>;\n    required: false;\n  };\n  onSetOff: {\n    type: PropType<IO<void>>;\n    required: false;\n  };\n} & Record<\n  K,\n  {\n    type: PropType<boolean>;\n    default: boolean;\n  }\n> &\n  Record<\n    'hasPopup',\n    {\n      type: PropType<boolean>;\n      default: boolean;\n    }\n  >;\n\nexport type UseToggleProps<K extends string> = Record<K, boolean> & Record<'hasPopup', boolean>;\n\nexport function getToggleAttrs(status: Ref<boolean>, hasPopup: Ref<boolean>) {\n  return computed(() => ({\n    tabindex: 0,\n    role: 'button',\n    type: 'button',\n    'aria-pressed': status.value,\n    'aria-expanded': status.value,\n    ...(hasPopup.value ? { 'aria-haspopup': true } : {})\n  }));\n}\n\nexport type ToggleAttrs = ReturnType<typeof getToggleAttrs> extends Ref<infer A> ? A : never;\n\nfunction getListeners(toggle: IO<void>) {\n  return {\n    onClick: toggle,\n    onKeydown: (e: KeyboardEvent) => {\n      if (isEnterEvent(e)) {\n        e.preventDefault();\n        toggle();\n      }\n    }\n  };\n}\n\nexport type ToggleListeners = ReturnType<typeof getListeners>;\n\nexport function useToggle<K extends string>(\n  props: { onToggle?: FunctionN<[boolean], void>; onSetOn?: IO<void>; onSetOff?: IO<void> } & Record<K, boolean> & {\n      hasPopup: boolean;\n    },\n  statusName: K\n) {\n  const internalStatus = shallowRef(props[statusName] as boolean);\n  const value = computed({\n    get() {\n      return internalStatus.value;\n    },\n    set(val: boolean) {\n      const cValue = internalStatus.value;\n      if (cValue !== val && props.onToggle) {\n        props.onToggle(val);\n      }\n      if (val && props.onSetOn) {\n        props.onSetOn();\n      }\n      if (!val && props.onSetOff) {\n        props.onSetOff();\n      }\n      internalStatus.value = val;\n      const updateModel = (props as any)[`onUpdate:${statusName}`]; //eslint-disable-line\n      if (updateModel) {\n        updateModel(val);\n      }\n    }\n  });\n  watch(\n    () => props[statusName],\n    status => {\n      internalStatus.value = status;\n    }\n  );\n\n  function setOn(e?: Event) {\n    e && e?.stopPropagation();\n    value.value = true;\n  }\n  function setOff(e?: Event) {\n    e && e?.stopPropagation();\n    value.value = false;\n  }\n  function toggle(e?: Event) {\n    e && e?.stopPropagation();\n    value.value = !value.value;\n  }\n\n  const attrs = getToggleAttrs(value, toRef(props, 'hasPopup'));\n  const listeners = getListeners(toggle);\n  return {\n    isOn: value,\n    isOff: computed(() => internalStatus.value === false),\n    attrs,\n    listeners,\n    props: computed(() => ({ ...attrs.value, ...listeners })),\n    setOn,\n    setOff,\n    toggle\n  };\n}\n\nexport type Toggle = ReturnType<typeof useToggle>;\n","var classof = require('./classof-raw');\nvar regexpExec = require('./regexp-exec');\n\n// `RegExpExec` abstract operation\n// https://tc39.github.io/ecma262/#sec-regexpexec\nmodule.exports = function (R, S) {\n  var exec = R.exec;\n  if (typeof exec === 'function') {\n    var result = exec.call(R, S);\n    if (typeof result !== 'object') {\n      throw TypeError('RegExp exec method returned something other than an Object or null');\n    }\n    return result;\n  }\n\n  if (classof(R) !== 'RegExp') {\n    throw TypeError('RegExp#exec called on incompatible receiver');\n  }\n\n  return regexpExec.call(R, S);\n};\n\n","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\n\n// `AdvanceStringIndex` abstract operation\n// https://tc39.github.io/ecma262/#sec-advancestringindex\nmodule.exports = function (S, index, unicode) {\n  return index + (unicode ? charAt(S, index).length : 1);\n};\n","import { VNode, Fragment } from 'vue';\nimport { snoc, unsafeDeleteAt } from 'fp-ts/lib/Array';\nimport { Eq } from 'fp-ts/lib/Eq';\nimport { constant, not } from 'fp-ts/lib/function';\nimport { none } from 'fp-ts/lib/Option';\n\n/**\n * Mobile detection\n * https://www.abeautifulsite.net/detecting-mobile-devices-with-javascript\n */\n\nexport const isMobile = {\n  Android: function() {\n    return typeof window !== 'undefined' && window.navigator.userAgent.match(/Android/i);\n  },\n  BlackBerry: function() {\n    return typeof window !== 'undefined' && window.navigator.userAgent.match(/BlackBerry/i);\n  },\n  iOS: function() {\n    return typeof window !== 'undefined' && window.navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  Opera: function() {\n    return typeof window !== 'undefined' && window.navigator.userAgent.match(/Opera Mini/i);\n  },\n  Windows: function() {\n    return typeof window !== 'undefined' && window.navigator.userAgent.match(/IEMobile/i);\n  },\n  any: function() {\n    return isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows();\n  }\n};\n\nexport function capitalizeFirstLetter(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function keys<O>(o: O): Array<keyof O> {\n  return Object.keys(o) as (keyof O)[];\n}\n\n// eslint-disable-next-line\nexport function deepEqual(a: any, b: any): boolean {\n  if (a === b) return true;\n\n  if (a instanceof Date && b instanceof Date) {\n    // If the values are Date, they were convert to timestamp with getTime and compare it\n    if (a.getTime() !== b.getTime()) return false;\n  }\n\n  if (a !== Object(a) || b !== Object(b)) {\n    // If the values aren't objects, they were already checked for equality\n    return false;\n  }\n\n  const props = Object.keys(a);\n\n  if (props.length !== Object.keys(b).length) {\n    // Different number of props, don't bother to check\n    return false;\n  }\n\n  return props.every(p => deepEqual(a[p], b[p]));\n}\n\n// eslint-disable-next-line\nexport function getNestedValue(obj: any, path: (string | number)[], fallback?: any): any {\n  const last = path.length - 1;\n\n  if (last < 0) return obj === undefined ? fallback : obj;\n\n  for (let i = 0; i < last; i++) {\n    if (obj == null) {\n      return fallback;\n    }\n    obj = obj[path[i]];\n  }\n\n  if (obj == null) return fallback;\n\n  return obj[path[last]] === undefined ? fallback : obj[path[last]];\n}\n\n// eslint-disable-next-line\nexport function getObjectValueByPath(obj: any, path: string, fallback?: any): any {\n  // credit: http://stackoverflow.com/questions/6491463/accessing-nested-javascript-objects-with-string-key#comment55278413_6491621\n  if (obj == null || !path || typeof path !== 'string') return fallback;\n  if (obj[path] !== undefined) return obj[path];\n  path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties\n  path = path.replace(/^\\./, ''); // strip a leading dot\n  return getNestedValue(obj, path.split('.'), fallback);\n}\n\n// eslint-disable-next-line\nexport function isBoolean(val: any): val is boolean {\n  return typeof val === 'boolean';\n}\n\n// eslint-disable-next-line\nexport function isObject(obj: any): obj is object {\n  return obj !== null && typeof obj === 'object';\n}\n\n// eslint-disable-next-line\nexport function isFunction(obj: any): obj is Function {\n  return typeof obj === 'function';\n}\n\n// eslint-disable-next-line\nexport function isPrimitive(val: any): val is number | string | boolean {\n  return typeof val === 'number' || typeof val === 'string' || typeof val === 'boolean';\n}\n\n// eslint-disable-next-line\nexport function isNil(arg: any): boolean {\n  return arg === null || arg === undefined;\n}\n\nexport const exists = not(isNil);\n\n// eslint-disable-next-line\nexport function isString(arg: any): arg is string {\n  return typeof arg === 'string';\n}\n\n// eslint-disable-next-line\nexport function isNumber(arg: any): arg is number {\n  return typeof arg === 'number';\n}\n\n// eslint-disable-next-line\nexport function isHTMLElement(obj: any): obj is HTMLElement {\n  return typeof HTMLElement === 'object'\n    ? obj instanceof HTMLElement //DOM2\n    : obj && typeof isObject(obj) && obj.nodeType === 1 && typeof obj.nodeName === 'string';\n}\n\nexport const constEmptyArray = constant([]);\n\nexport const constNone = constant(none);\n\nexport const constZero = constant(0);\n\nexport const constEmptyString = constant('');\n\nexport function removeListItem<A>(E: Eq<A>) {\n  return (a: A, as: A[]) => {\n    const index = as.findIndex(i => E.equals(a, i));\n    return index > -1 ? unsafeDeleteAt(index, as) : as;\n  };\n}\n\nexport function toggleListItem<A>(E: Eq<A>) {\n  return (a: A, as: A[]) => {\n    const index = as.findIndex(i => E.equals(a, i));\n    return index > -1 ? unsafeDeleteAt(index, as) : snoc(as, a);\n  };\n}\n\nexport function isFragment(node: VNode): boolean {\n  return node.type === Fragment;\n}\n\nexport function isEmptyString(str: string): boolean {\n  return str === '';\n}\n\n// eslint-disable-next-line\nexport type Result<T, P> = P extends keyof T ? T[P] : P extends (item: T) => any ? ReturnType<P> : T;\n// eslint-disable-next-line\nexport type Extractor<T> = string | ((item: T) => any);\n\nfunction prop<T extends object, K extends keyof T>(key: K, obj: T): T[K] {\n  return obj[key];\n}\n\n// eslint-disable-next-line\nexport function extractProp<T, P extends (item: T) => any | keyof T>(extractor: Extractor<T>, item: T): Result<T, P> {\n  if (isFunction(extractor)) {\n    return extractor(item);\n  } else if (isObject(item) && isString(extractor) && Object.hasOwnProperty.call(item, extractor)) {\n    // eslint-disable-next-line\n    return prop(extractor as any, item);\n  } else {\n    return item as Result<T, P>;\n  }\n}\n\nconst camelizeRE = /-(\\w)/g;\nexport function camelize(str: string): string {\n  return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\n}\n","// a string of all valid unicode whitespaces\n// eslint-disable-next-line max-len\nmodule.exports = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n"],"sourceRoot":""}