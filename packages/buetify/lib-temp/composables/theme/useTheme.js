import { isSome } from 'fp-ts/lib/Option';
import { inject, computed } from 'vue';
import { constant } from 'fp-ts/lib/function';
import { DEFAULT_THEME_INJECTION, THEME_INJECTION_SYMBOL } from './provideTheme';
export const DEFAULT_THEME_COLOR_MAP = {
    dark: 'is-black-ter',
    light: ''
};
export function useThemePropsDefinition(themeMap, defaultIsThemeable = true) {
    return {
        themeMap: {
            type: Object,
            required: false,
            default: constant(themeMap)
        },
        isThemeable: {
            type: Boolean,
            required: false,
            default: defaultIsThemeable
        }
    };
}
export const DefaultThemePropsDefinition = useThemePropsDefinition(DEFAULT_THEME_COLOR_MAP, true);
export function getThemeClasses(themeMap, themeInjection) {
    if (themeInjection.isThemeable.value && isSome(themeInjection.currentTheme.value)) {
        const classes = themeMap[themeInjection.currentTheme.value.value];
        return Array.isArray(classes) ? classes : [classes];
    }
    else {
        return [];
    }
}
export function useTheme(props) {
    const themeInjection = inject(THEME_INJECTION_SYMBOL, DEFAULT_THEME_INJECTION);
    const themeClasses = computed(() => (props ? getThemeClasses(props.themeMap, themeInjection) : []));
    return {
        currentTheme: themeInjection.currentTheme,
        setTheme: themeInjection.setTheme,
        toggleTheme: () => {
            if (isSome(themeInjection.currentTheme.value)) {
                if (themeInjection.currentTheme.value.value === 'light') {
                    themeInjection.setTheme('dark');
                }
                else {
                    themeInjection.setTheme('light');
                }
            }
        },
        themeClasses
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlVGhlbWUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9zYWJsZXMvdGhlbWUvdXNlVGhlbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzFDLE9BQU8sRUFBWSxNQUFNLEVBQW9CLFFBQVEsRUFBRSxNQUFNLEtBQUssQ0FBQztBQUNuRSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFFOUMsT0FBTyxFQUFFLHVCQUF1QixFQUFFLHNCQUFzQixFQUFrQixNQUFNLGdCQUFnQixDQUFDO0FBRWpHLE1BQU0sQ0FBQyxNQUFNLHVCQUF1QixHQUFrQjtJQUNwRCxJQUFJLEVBQUUsY0FBYztJQUNwQixLQUFLLEVBQUUsRUFBRTtDQUNWLENBQUM7QUFFRixNQUFNLFVBQVUsdUJBQXVCLENBQUMsUUFBdUIsRUFBRSxrQkFBa0IsR0FBRyxJQUFJO0lBQ3hGLE9BQU87UUFDTCxRQUFRLEVBQUU7WUFDUixJQUFJLEVBQUUsTUFBaUM7WUFDdkMsUUFBUSxFQUFFLEtBQUs7WUFDZixPQUFPLEVBQUUsUUFBUSxDQUFDLFFBQVEsQ0FBQztTQUM1QjtRQUNELFdBQVcsRUFBRTtZQUNYLElBQUksRUFBRSxPQUE0QjtZQUNsQyxRQUFRLEVBQUUsS0FBSztZQUNmLE9BQU8sRUFBRSxrQkFBa0I7U0FDNUI7S0FDRixDQUFDO0FBQ0osQ0FBQztBQU1ELE1BQU0sQ0FBQyxNQUFNLDJCQUEyQixHQUFHLHVCQUF1QixDQUFDLHVCQUF1QixFQUFFLElBQUksQ0FBQyxDQUFDO0FBRWxHLE1BQU0sVUFBVSxlQUFlLENBQUMsUUFBdUIsRUFBRSxjQUE4QjtJQUNyRixJQUFJLGNBQWMsQ0FBQyxXQUFXLENBQUMsS0FBSyxJQUFJLE1BQU0sQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ2pGLE1BQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsRSxPQUFPLEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQztLQUNyRDtTQUFNO1FBQ0wsT0FBTyxFQUFFLENBQUM7S0FDWDtBQUNILENBQUM7QUFFRCxNQUFNLFVBQVUsUUFBUSxDQUFDLEtBQWtCO0lBQ3pDLE1BQU0sY0FBYyxHQUFHLE1BQU0sQ0FBQyxzQkFBc0IsRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO0lBQy9FLE1BQU0sWUFBWSxHQUFHLFFBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsZUFBZSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFFcEcsT0FBTztRQUNMLFlBQVksRUFBRSxjQUFjLENBQUMsWUFBWTtRQUN6QyxRQUFRLEVBQUUsY0FBYyxDQUFDLFFBQVE7UUFDakMsV0FBVyxFQUFFLEdBQUcsRUFBRTtZQUNoQixJQUFJLE1BQU0sQ0FBQyxjQUFjLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxFQUFFO2dCQUM3QyxJQUFJLGNBQWMsQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFDLEtBQUssS0FBSyxPQUFPLEVBQUU7b0JBQ3ZELGNBQWMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUM7aUJBQ2pDO3FCQUFNO29CQUNMLGNBQWMsQ0FBQyxRQUFRLENBQUMsT0FBTyxDQUFDLENBQUM7aUJBQ2xDO2FBQ0Y7UUFDSCxDQUFDO1FBQ0QsWUFBWTtLQUNiLENBQUM7QUFDSixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNTb21lIH0gZnJvbSAnZnAtdHMvbGliL09wdGlvbic7XG5pbXBvcnQgeyBQcm9wVHlwZSwgaW5qZWN0LCBFeHRyYWN0UHJvcFR5cGVzLCBjb21wdXRlZCB9IGZyb20gJ3Z1ZSc7XG5pbXBvcnQgeyBjb25zdGFudCB9IGZyb20gJ2ZwLXRzL2xpYi9mdW5jdGlvbic7XG5pbXBvcnQgeyBUaGVtZUNvbG9yTWFwIH0gZnJvbSAnLi4vLi4vdHlwZXMvVGhlbWVDb2xvck1hcCc7XG5pbXBvcnQgeyBERUZBVUxUX1RIRU1FX0lOSkVDVElPTiwgVEhFTUVfSU5KRUNUSU9OX1NZTUJPTCwgVGhlbWVJbmplY3Rpb24gfSBmcm9tICcuL3Byb3ZpZGVUaGVtZSc7XG5cbmV4cG9ydCBjb25zdCBERUZBVUxUX1RIRU1FX0NPTE9SX01BUDogVGhlbWVDb2xvck1hcCA9IHtcbiAgZGFyazogJ2lzLWJsYWNrLXRlcicsXG4gIGxpZ2h0OiAnJ1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIHVzZVRoZW1lUHJvcHNEZWZpbml0aW9uKHRoZW1lTWFwOiBUaGVtZUNvbG9yTWFwLCBkZWZhdWx0SXNUaGVtZWFibGUgPSB0cnVlKSB7XG4gIHJldHVybiB7XG4gICAgdGhlbWVNYXA6IHtcbiAgICAgIHR5cGU6IE9iamVjdCBhcyBQcm9wVHlwZTxUaGVtZUNvbG9yTWFwPixcbiAgICAgIHJlcXVpcmVkOiBmYWxzZSxcbiAgICAgIGRlZmF1bHQ6IGNvbnN0YW50KHRoZW1lTWFwKVxuICAgIH0sXG4gICAgaXNUaGVtZWFibGU6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4gYXMgUHJvcFR5cGU8Ym9vbGVhbj4sXG4gICAgICByZXF1aXJlZDogZmFsc2UsXG4gICAgICBkZWZhdWx0OiBkZWZhdWx0SXNUaGVtZWFibGVcbiAgICB9XG4gIH07XG59XG5cbmV4cG9ydCB0eXBlIFRoZW1lUHJvcHMgPSBFeHRyYWN0UHJvcFR5cGVzPFJldHVyblR5cGU8dHlwZW9mIHVzZVRoZW1lUHJvcHNEZWZpbml0aW9uPj47XG5cbmV4cG9ydCB0eXBlIEZ1bmN0aW9uYWxUaGVtZVByb3BzID0gUGFydGlhbDxUaGVtZVByb3BzPjtcblxuZXhwb3J0IGNvbnN0IERlZmF1bHRUaGVtZVByb3BzRGVmaW5pdGlvbiA9IHVzZVRoZW1lUHJvcHNEZWZpbml0aW9uKERFRkFVTFRfVEhFTUVfQ09MT1JfTUFQLCB0cnVlKTtcblxuZXhwb3J0IGZ1bmN0aW9uIGdldFRoZW1lQ2xhc3Nlcyh0aGVtZU1hcDogVGhlbWVDb2xvck1hcCwgdGhlbWVJbmplY3Rpb246IFRoZW1lSW5qZWN0aW9uKTogc3RyaW5nW10ge1xuICBpZiAodGhlbWVJbmplY3Rpb24uaXNUaGVtZWFibGUudmFsdWUgJiYgaXNTb21lKHRoZW1lSW5qZWN0aW9uLmN1cnJlbnRUaGVtZS52YWx1ZSkpIHtcbiAgICBjb25zdCBjbGFzc2VzID0gdGhlbWVNYXBbdGhlbWVJbmplY3Rpb24uY3VycmVudFRoZW1lLnZhbHVlLnZhbHVlXTtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShjbGFzc2VzKSA/IGNsYXNzZXMgOiBbY2xhc3Nlc107XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB1c2VUaGVtZShwcm9wcz86IFRoZW1lUHJvcHMpIHtcbiAgY29uc3QgdGhlbWVJbmplY3Rpb24gPSBpbmplY3QoVEhFTUVfSU5KRUNUSU9OX1NZTUJPTCwgREVGQVVMVF9USEVNRV9JTkpFQ1RJT04pO1xuICBjb25zdCB0aGVtZUNsYXNzZXMgPSBjb21wdXRlZCgoKSA9PiAocHJvcHMgPyBnZXRUaGVtZUNsYXNzZXMocHJvcHMudGhlbWVNYXAsIHRoZW1lSW5qZWN0aW9uKSA6IFtdKSk7XG5cbiAgcmV0dXJuIHtcbiAgICBjdXJyZW50VGhlbWU6IHRoZW1lSW5qZWN0aW9uLmN1cnJlbnRUaGVtZSxcbiAgICBzZXRUaGVtZTogdGhlbWVJbmplY3Rpb24uc2V0VGhlbWUsXG4gICAgdG9nZ2xlVGhlbWU6ICgpID0+IHtcbiAgICAgIGlmIChpc1NvbWUodGhlbWVJbmplY3Rpb24uY3VycmVudFRoZW1lLnZhbHVlKSkge1xuICAgICAgICBpZiAodGhlbWVJbmplY3Rpb24uY3VycmVudFRoZW1lLnZhbHVlLnZhbHVlID09PSAnbGlnaHQnKSB7XG4gICAgICAgICAgdGhlbWVJbmplY3Rpb24uc2V0VGhlbWUoJ2RhcmsnKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0aGVtZUluamVjdGlvbi5zZXRUaGVtZSgnbGlnaHQnKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG4gICAgdGhlbWVDbGFzc2VzXG4gIH07XG59XG4iXX0=