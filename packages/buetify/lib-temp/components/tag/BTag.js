import './tag.sass';
import { h, defineComponent } from 'vue';
export default defineComponent({
    name: 'b-tag',
    props: {
        tag: {
            type: String,
            default: 'span'
        },
        isAttached: {
            type: Boolean,
            default: false
        },
        isClosable: {
            type: Boolean,
            default: false
        },
        variant: {
            type: String,
            default: 'is-primary'
        },
        size: {
            type: String,
            default: ''
        },
        isRounded: {
            type: Boolean,
            default: false
        },
        isDisabled: {
            type: Boolean,
            default: false
        },
        hasEllipsis: {
            type: Boolean,
            default: false
        },
        isTabable: {
            type: Boolean,
            default: false
        },
        onClose: {
            type: Function,
            required: false
        }
    },
    setup(props, { slots }) {
        return () => {
            if (props.isClosable) {
                return h(props.tag, {
                    class: 'tags has-addons'
                }, [
                    h('span', {
                        class: ['tag', props.variant, props.size, { 'is-rounded': props.isRounded }]
                    }, [h('span', { class: { 'has-ellipsis': props.hasEllipsis } }, slots.default && slots.default())]),
                    h('button', {
                        class: ['tag is-delete has-cursor-pointer', props.size, { 'is-rounded': props.isRounded }],
                        tabindex: props.isTabable ? 0 : null,
                        disabled: props.isDisabled,
                        onClick: props.isDisabled ? undefined : props.onClose
                    })
                ]);
            }
            else {
                return h(props.tag, {
                    class: ['tag', props.variant, props.size, { 'is-rounded': props.isRounded }]
                }, h('span', { class: { 'has-ellipsis': props.hasEllipsis } }, slots.default && slots.default()));
            }
        };
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQlRhZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3RhZy9CVGFnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sWUFBWSxDQUFDO0FBSXBCLE9BQU8sRUFBRSxDQUFDLEVBQVksZUFBZSxFQUFFLE1BQU0sS0FBSyxDQUFDO0FBRW5ELGVBQWUsZUFBZSxDQUFDO0lBQzdCLElBQUksRUFBRSxPQUFPO0lBQ2IsS0FBSyxFQUFFO1FBQ0wsR0FBRyxFQUFFO1lBQ0gsSUFBSSxFQUFFLE1BQU07WUFDWixPQUFPLEVBQUUsTUFBTTtTQUNoQjtRQUNELFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxPQUFPO1lBQ2IsT0FBTyxFQUFFLEtBQUs7U0FDZjtRQUNELFVBQVUsRUFBRTtZQUNWLElBQUksRUFBRSxPQUFPO1lBQ2IsT0FBTyxFQUFFLEtBQUs7U0FDZjtRQUNELE9BQU8sRUFBRTtZQUNQLElBQUksRUFBRSxNQUFnQztZQUN0QyxPQUFPLEVBQUUsWUFBcUI7U0FDL0I7UUFDRCxJQUFJLEVBQUU7WUFDSixJQUFJLEVBQUUsTUFBK0I7WUFDckMsT0FBTyxFQUFFLEVBQVc7U0FDckI7UUFDRCxTQUFTLEVBQUU7WUFDVCxJQUFJLEVBQUUsT0FBTztZQUNiLE9BQU8sRUFBRSxLQUFLO1NBQ2Y7UUFDRCxVQUFVLEVBQUU7WUFDVixJQUFJLEVBQUUsT0FBTztZQUNiLE9BQU8sRUFBRSxLQUFLO1NBQ2Y7UUFDRCxXQUFXLEVBQUU7WUFDWCxJQUFJLEVBQUUsT0FBTztZQUNiLE9BQU8sRUFBRSxLQUFLO1NBQ2Y7UUFDRCxTQUFTLEVBQUU7WUFDVCxJQUFJLEVBQUUsT0FBTztZQUNiLE9BQU8sRUFBRSxLQUFLO1NBQ2Y7UUFDRCxPQUFPLEVBQUU7WUFDUCxJQUFJLEVBQUUsUUFBbUQ7WUFDekQsUUFBUSxFQUFFLEtBQUs7U0FDaEI7S0FDRjtJQUNELEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUU7UUFDcEIsT0FBTyxHQUFHLEVBQUU7WUFDVixJQUFJLEtBQUssQ0FBQyxVQUFVLEVBQUU7Z0JBQ3BCLE9BQU8sQ0FBQyxDQUNOLEtBQUssQ0FBQyxHQUFHLEVBQ1Q7b0JBQ0UsS0FBSyxFQUFFLGlCQUFpQjtpQkFDekIsRUFDRDtvQkFDRSxDQUFDLENBQ0MsTUFBTSxFQUNOO3dCQUNFLEtBQUssRUFBRSxDQUFDLEtBQUssRUFBRSxLQUFLLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxJQUFJLEVBQUUsRUFBRSxZQUFZLEVBQUUsS0FBSyxDQUFDLFNBQVMsRUFBRSxDQUFDO3FCQUM3RSxFQUNELENBQUMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLGNBQWMsRUFBRSxLQUFLLENBQUMsV0FBVyxFQUFFLEVBQUUsRUFBRSxLQUFLLENBQUMsT0FBTyxJQUFJLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQ2hHO29CQUNELENBQUMsQ0FBQyxRQUFRLEVBQUU7d0JBQ1YsS0FBSyxFQUFFLENBQUMsa0NBQWtDLEVBQUUsS0FBSyxDQUFDLElBQUksRUFBRSxFQUFFLFlBQVksRUFBRSxLQUFLLENBQUMsU0FBUyxFQUFFLENBQUM7d0JBQzFGLFFBQVEsRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUk7d0JBQ3BDLFFBQVEsRUFBRSxLQUFLLENBQUMsVUFBVTt3QkFDMUIsT0FBTyxFQUFFLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLE9BQU87cUJBQ3RELENBQUM7aUJBQ0gsQ0FDRixDQUFDO2FBQ0g7aUJBQU07Z0JBQ0wsT0FBTyxDQUFDLENBQ04sS0FBSyxDQUFDLEdBQUcsRUFDVDtvQkFDRSxLQUFLLEVBQUUsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDLE9BQU8sRUFBRSxLQUFLLENBQUMsSUFBSSxFQUFFLEVBQUUsWUFBWSxFQUFFLEtBQUssQ0FBQyxTQUFTLEVBQUUsQ0FBQztpQkFDN0UsRUFDRCxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsY0FBYyxFQUFFLEtBQUssQ0FBQyxXQUFXLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxPQUFPLElBQUksS0FBSyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQzlGLENBQUM7YUFDSDtRQUNILENBQUMsQ0FBQztJQUNKLENBQUM7Q0FDRixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJy4vdGFnLnNhc3MnO1xuaW1wb3J0IHsgRnVuY3Rpb25OIH0gZnJvbSAnZnAtdHMvbGliL2Z1bmN0aW9uJztcbmltcG9ydCB7IENvbG9yVmFyaWFudCB9IGZyb20gJy4uLy4uL3R5cGVzL0NvbG9yVmFyaWFudHMnO1xuaW1wb3J0IHsgU2l6ZVZhcmlhbnQgfSBmcm9tICcuLi8uLi90eXBlcy9TaXplVmFyaWFudHMnO1xuaW1wb3J0IHsgaCwgUHJvcFR5cGUsIGRlZmluZUNvbXBvbmVudCB9IGZyb20gJ3Z1ZSc7XG5cbmV4cG9ydCBkZWZhdWx0IGRlZmluZUNvbXBvbmVudCh7XG4gIG5hbWU6ICdiLXRhZycsXG4gIHByb3BzOiB7XG4gICAgdGFnOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICBkZWZhdWx0OiAnc3BhbidcbiAgICB9LFxuICAgIGlzQXR0YWNoZWQ6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiBmYWxzZVxuICAgIH0sXG4gICAgaXNDbG9zYWJsZToge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IGZhbHNlXG4gICAgfSxcbiAgICB2YXJpYW50OiB7XG4gICAgICB0eXBlOiBTdHJpbmcgYXMgUHJvcFR5cGU8Q29sb3JWYXJpYW50PixcbiAgICAgIGRlZmF1bHQ6ICdpcy1wcmltYXJ5JyBhcyBjb25zdFxuICAgIH0sXG4gICAgc2l6ZToge1xuICAgICAgdHlwZTogU3RyaW5nIGFzIFByb3BUeXBlPFNpemVWYXJpYW50PixcbiAgICAgIGRlZmF1bHQ6ICcnIGFzIGNvbnN0XG4gICAgfSxcbiAgICBpc1JvdW5kZWQ6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiBmYWxzZVxuICAgIH0sXG4gICAgaXNEaXNhYmxlZDoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IGZhbHNlXG4gICAgfSxcbiAgICBoYXNFbGxpcHNpczoge1xuICAgICAgdHlwZTogQm9vbGVhbixcbiAgICAgIGRlZmF1bHQ6IGZhbHNlXG4gICAgfSxcbiAgICBpc1RhYmFibGU6IHtcbiAgICAgIHR5cGU6IEJvb2xlYW4sXG4gICAgICBkZWZhdWx0OiBmYWxzZVxuICAgIH0sXG4gICAgb25DbG9zZToge1xuICAgICAgdHlwZTogRnVuY3Rpb24gYXMgUHJvcFR5cGU8RnVuY3Rpb25OPFtNb3VzZUV2ZW50XSwgdm9pZD4+LFxuICAgICAgcmVxdWlyZWQ6IGZhbHNlXG4gICAgfVxuICB9LFxuICBzZXR1cChwcm9wcywgeyBzbG90cyB9KSB7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIGlmIChwcm9wcy5pc0Nsb3NhYmxlKSB7XG4gICAgICAgIHJldHVybiBoKFxuICAgICAgICAgIHByb3BzLnRhZyxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBjbGFzczogJ3RhZ3MgaGFzLWFkZG9ucydcbiAgICAgICAgICB9LFxuICAgICAgICAgIFtcbiAgICAgICAgICAgIGgoXG4gICAgICAgICAgICAgICdzcGFuJyxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNsYXNzOiBbJ3RhZycsIHByb3BzLnZhcmlhbnQsIHByb3BzLnNpemUsIHsgJ2lzLXJvdW5kZWQnOiBwcm9wcy5pc1JvdW5kZWQgfV1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgW2goJ3NwYW4nLCB7IGNsYXNzOiB7ICdoYXMtZWxsaXBzaXMnOiBwcm9wcy5oYXNFbGxpcHNpcyB9IH0sIHNsb3RzLmRlZmF1bHQgJiYgc2xvdHMuZGVmYXVsdCgpKV1cbiAgICAgICAgICAgICksXG4gICAgICAgICAgICBoKCdidXR0b24nLCB7XG4gICAgICAgICAgICAgIGNsYXNzOiBbJ3RhZyBpcy1kZWxldGUgaGFzLWN1cnNvci1wb2ludGVyJywgcHJvcHMuc2l6ZSwgeyAnaXMtcm91bmRlZCc6IHByb3BzLmlzUm91bmRlZCB9XSxcbiAgICAgICAgICAgICAgdGFiaW5kZXg6IHByb3BzLmlzVGFiYWJsZSA/IDAgOiBudWxsLFxuICAgICAgICAgICAgICBkaXNhYmxlZDogcHJvcHMuaXNEaXNhYmxlZCxcbiAgICAgICAgICAgICAgb25DbGljazogcHJvcHMuaXNEaXNhYmxlZCA/IHVuZGVmaW5lZCA6IHByb3BzLm9uQ2xvc2VcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgXVxuICAgICAgICApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGgoXG4gICAgICAgICAgcHJvcHMudGFnLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIGNsYXNzOiBbJ3RhZycsIHByb3BzLnZhcmlhbnQsIHByb3BzLnNpemUsIHsgJ2lzLXJvdW5kZWQnOiBwcm9wcy5pc1JvdW5kZWQgfV1cbiAgICAgICAgICB9LFxuICAgICAgICAgIGgoJ3NwYW4nLCB7IGNsYXNzOiB7ICdoYXMtZWxsaXBzaXMnOiBwcm9wcy5oYXNFbGxpcHNpcyB9IH0sIHNsb3RzLmRlZmF1bHQgJiYgc2xvdHMuZGVmYXVsdCgpKVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH07XG4gIH1cbn0pO1xuIl19