import './app.sass';
import { isSome } from 'fp-ts/lib/Option';
import { defineComponent, shallowRef, h, vShow, withDirectives } from 'vue';
import { provideNavigationDrawerController, ProvideNavigationDrawerControllerPropsDefinition } from '../../composables/navigationDrawerController';
import { provideNoticeController } from '../../composables/noticeController';
import { providePopupController } from '../../composables/popupController';
import { provideTheme, ProvideThemePropDefinitions } from '../../composables/theme';
import { formatTransition } from '../../composables/transition';
import { provideWindowSize, ProvideWindowSizePropsDefinition } from '../../composables/windowSize';
import BNavigationDrawer from '../navigationDrawer/BNavigationDrawer';
import BNoticeContainer from '../notices/noticeContainer/BNoticeContainer';
import BPopupContainer from '../popupContainer/BPopupContainer';
const DEFAULT_TRANSITION = { name: 'fade' };
function generateNoticeContainer(placement, ref) {
    return h(BNoticeContainer, { ref, class: placement === 'top' ? 'notices-is-top' : 'notices-is-bottom' });
}
function generatePopupContainer(ref) {
    return h(BPopupContainer, { ref });
}
function generateNavigationSlot(slots) {
    return h(BNavigationDrawer, {
        isFullheight: true
    }, slots['navigation-drawer']);
}
function generateMainContent(slots) {
    return h('div', { class: 'b-app-content' }, slots.default());
}
function generateBodyContent(slots, hasNavigationDrawer, displayNavigationDrawer) {
    const nodes = [];
    if (slots.header) {
        const header = slots.header();
        if (header)
            nodes.push(...header);
    }
    nodes.push(h('div', { class: 'b-app-body-content' }, hasNavigationDrawer
        ? [
            withDirectives(generateNavigationSlot(slots), [[vShow, displayNavigationDrawer]]),
            generateMainContent(slots)
        ]
        : [generateMainContent(slots)]));
    return nodes;
}
export default defineComponent({
    name: 'b-app',
    props: {
        ...ProvideThemePropDefinitions,
        ...ProvideWindowSizePropsDefinition,
        ...ProvideNavigationDrawerControllerPropsDefinition
    },
    setup(props, { slots }) {
        const popup = shallowRef(null);
        const top = shallowRef(null);
        const bottom = shallowRef(null);
        function showNotice(params) {
            const options = {
                ...params,
                transition: params.transition ? formatTransition(params.transition) : DEFAULT_TRANSITION
            };
            return params.placement === 'top' ? top.value.showNotice(options) : bottom.value.showNotice(options);
        }
        function showPopup(params) {
            return popup.value.showPopup({
                render: params.render,
                transition: params.transition ? formatTransition(params.transition) : DEFAULT_TRANSITION
            });
        }
        provideTheme(props);
        provideNoticeController(showNotice);
        providePopupController(showPopup);
        provideWindowSize(props);
        const { isVisible } = provideNavigationDrawerController(props);
        return () => {
            const hasNavigationDrawer = !!slots['navigation-drawer'];
            const displayNavigationDrawer = isSome(isVisible.value) && isVisible.value.value;
            const nodes = [
                generateNoticeContainer('top', top),
                generateNoticeContainer('bottom', bottom),
                generatePopupContainer(popup)
            ];
            nodes.push(h('div', { style: { 'z-index': 0 } }, generateBodyContent(slots, hasNavigationDrawer, displayNavigationDrawer)));
            return h('div', {
                class: [
                    'b-app',
                    { 'has-navigation-drawer': hasNavigationDrawer && displayNavigationDrawer, 'has-header': !!slots.header }
                ]
            }, nodes);
        };
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQkFwcC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2FwcC9CQXBwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sWUFBWSxDQUFDO0FBQ3BCLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUMxQyxPQUFPLEVBQUUsZUFBZSxFQUFFLFVBQVUsRUFBRSxDQUFDLEVBQWMsS0FBSyxFQUFFLGNBQWMsRUFBUyxNQUFNLEtBQUssQ0FBQztBQUMvRixPQUFPLEVBQ0wsaUNBQWlDLEVBQ2pDLGdEQUFnRCxFQUNqRCxNQUFNLDhDQUE4QyxDQUFDO0FBQ3RELE9BQU8sRUFBRSx1QkFBdUIsRUFBcUIsTUFBTSxvQ0FBb0MsQ0FBQztBQUNoRyxPQUFPLEVBQUUsc0JBQXNCLEVBQW9CLE1BQU0sbUNBQW1DLENBQUM7QUFDN0YsT0FBTyxFQUFFLFlBQVksRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3BGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ2hFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxnQ0FBZ0MsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBRW5HLE9BQU8saUJBQWlCLE1BQU0sdUNBQXVDLENBQUM7QUFDdEUsT0FBTyxnQkFBb0QsTUFBTSw2Q0FBNkMsQ0FBQztBQUMvRyxPQUFPLGVBQW1DLE1BQU0sbUNBQW1DLENBQUM7QUFFcEYsTUFBTSxrQkFBa0IsR0FBc0IsRUFBRSxJQUFJLEVBQUUsTUFBTSxFQUFFLENBQUM7QUFFL0QsU0FBUyx1QkFBdUIsQ0FBQyxTQUEyQixFQUFFLEdBQXlCO0lBQ3JGLE9BQU8sQ0FBQyxDQUFDLGdCQUFnQixFQUFFLEVBQUUsR0FBRyxFQUFFLEtBQUssRUFBRSxTQUFTLEtBQUssS0FBSyxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsbUJBQW1CLEVBQUUsQ0FBQyxDQUFD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J2ZwLXRzL2xpYi9PcHRpb24nO1xuaW1wb3J0IHsgZGVmaW5lQ29tcG9uZW50LCBzaGFsbG93UmVmLCBoLCBTbG90cywgUmVmLCB2U2hvdywgd2l0aERpcmVjdGl2ZXMsIFZOb2RlIH0gZnJvbSAndnVlJztcbmltcG9ydCB7XG4gIHByb3ZpZGVOYXZpZ2F0aW9uRHJhd2VyQ29udHJvbGxlcixcbiAgUHJvdmlkZU5hdmlnYXRpb25EcmF3ZXJDb250cm9sbGVyUHJvcHNEZWZpbml0aW9uXG59IGZyb20gJy4uLy4uL2NvbXBvc2FibGVzL25hdmlnYXRpb25EcmF3ZXJDb250cm9sbGVyJztcbmltcG9ydCB7IHByb3ZpZGVOb3RpY2VDb250cm9sbGVyLCBTaG93Tm90aWNlT3B0aW9ucyB9IGZyb20gJy4uLy4uL2NvbXBvc2FibGVzL25vdGljZUNvbnRyb2xsZXInO1xuaW1wb3J0IHsgcHJvdmlkZVBvcHVwQ29udHJvbGxlciwgU2hvd1BvcHVwT3B0aW9ucyB9IGZyb20gJy4uLy4uL2NvbXBvc2FibGVzL3BvcHVwQ29udHJvbGxlcic7XG5pbXBvcnQgeyBwcm92aWRlVGhlbWUsIFByb3ZpZGVUaGVtZVByb3BEZWZpbml0aW9ucyB9IGZyb20gJy4uLy4uL2NvbXBvc2FibGVzL3RoZW1lJztcbmltcG9ydCB7IGZvcm1hdFRyYW5zaXRpb24gfSBmcm9tICcuLi8uLi9jb21wb3NhYmxlcy90cmFuc2l0aW9uJztcbmltcG9ydCB7IHByb3ZpZGVXaW5kb3dTaXplLCBQcm92aWRlV2luZG93U2l6ZVByb3BzRGVmaW5pdGlvbiB9IGZyb20gJy4uLy4uL2NvbXBvc2FibGVzL3dpbmRvd1NpemUnO1xuaW1wb3J0IHsgVHJhbnNpdGlvbkNsYXNzZXMgfSBmcm9tICcuLi8uLi90eXBlcy9UcmFuc2l0aW9uJztcbmltcG9ydCBCTmF2aWdhdGlvbkRyYXdlciBmcm9tICcuLi9uYXZpZ2F0aW9uRHJhd2VyL0JOYXZpZ2F0aW9uRHJhd2VyJztcbmltcG9ydCBCTm90aWNlQ29udGFpbmVyLCB7IE5vdGljZUNvbnRhaW5lciwgTm90aWNlT3B0aW9ucyB9IGZyb20gJy4uL25vdGljZXMvbm90aWNlQ29udGFpbmVyL0JOb3RpY2VDb250YWluZXInO1xuaW1wb3J0IEJQb3B1cENvbnRhaW5lciwgeyBQb3B1cENvbnRhaW5lciB9IGZyb20gJy4uL3BvcHVwQ29udGFpbmVyL0JQb3B1cENvbnRhaW5lcic7XG5cbmNvbnN0IERFRkFVTFRfVFJBTlNJVElPTjogVHJhbnNpdGlvbkNsYXNzZXMgPSB7IG5hbWU6ICdmYWRlJyB9O1xuXG5mdW5jdGlvbiBnZW5lcmF0ZU5vdGljZUNvbnRhaW5lcihwbGFjZW1lbnQ6ICd0b3AnIHwgJ2JvdHRvbScsIHJlZjogUmVmPE5vdGljZUNvbnRhaW5lcj4pIHtcbiAgcmV0dXJuIGgoQk5vdGljZUNvbnRhaW5lciwgeyByZWYsIGNsYXNzOiBwbGFjZW1lbnQgPT09ICd0b3AnID8gJ25vdGljZXMtaXMtdG9wJyA6ICdub3RpY2VzLWlzLWJvdHRvbScgfSk7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlUG9wdXBDb250YWluZXIocmVmOiBSZWY8UG9wdXBDb250YWluZXI+KSB7XG4gIHJldHVybiBoKEJQb3B1cENvbnRhaW5lciwgeyByZWYgfSk7XG59XG5cbmZ1bmN0aW9uIGdlbmVyYXRlTmF2aWdhdGlvblNsb3Qoc2xvdHM6IFNsb3RzKSB7XG4gIHJldHVybiBoKFxuICAgIEJOYXZpZ2F0aW9uRHJhd2VyLFxuICAgIHtcbiAgICAgIGlzRnVsbGhlaWdodDogdHJ1ZVxuICAgIH0sXG4gICAgc2xvdHNbJ25hdmlnYXRpb24tZHJhd2VyJ11cbiAgKTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVNYWluQ29udGVudChzbG90czogU2xvdHMpIHtcbiAgcmV0dXJuIGgoJ2RpdicsIHsgY2xhc3M6ICdiLWFwcC1jb250ZW50JyB9LCBzbG90cy5kZWZhdWx0ISgpKTtcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVCb2R5Q29udGVudChzbG90czogU2xvdHMsIGhhc05hdmlnYXRpb25EcmF3ZXI6IGJvb2xlYW4sIGRpc3BsYXlOYXZpZ2F0aW9uRHJhd2VyOiBib29sZWFuKSB7XG4gIGNvbnN0IG5vZGVzOiBWTm9kZVtdID0gW107XG4gIGlmIChzbG90cy5oZWFkZXIpIHtcbiAgICBjb25zdCBoZWFkZXIgPSBzbG90cy5oZWFkZXIoKTtcbiAgICBpZiAoaGVhZGVyKSBub2Rlcy5wdXNoKC4uLmhlYWRlcik7XG4gIH1cbiAgbm9kZXMucHVzaChcbiAgICBoKFxuICAgICAgJ2RpdicsXG4gICAgICB7IGNsYXNzOiAnYi1hcHAtYm9keS1jb250ZW50JyB9LFxuICAgICAgaGFzTmF2aWdhdGlvbkRyYXdlclxuICAgICAgICA/IFtcbiAgICAgICAgICAgIHdpdGhEaXJlY3RpdmVzKGdlbmVyYXRlTmF2aWdhdGlvblNsb3Qoc2xvdHMpLCBbW3ZTaG93LCBkaXNwbGF5TmF2aWdhdGlvbkRyYXdlcl1dKSxcbiAgICAgICAgICAgIGdlbmVyYXRlTWFpbkNvbnRlbnQoc2xvdHMpXG4gICAgICAgICAgXVxuICAgICAgICA6IFtnZW5lcmF0ZU1haW5Db250ZW50KHNsb3RzKV1cbiAgICApXG4gICk7XG4gIHJldHVybiBub2Rlcztcbn1cblxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29tcG9uZW50KHtcbiAgbmFtZTogJ2ItYXBwJyxcbiAgcHJvcHM6IHtcbiAgICAuLi5Qcm92aWRlVGhlbWVQcm9wRGVmaW5pdGlvbnMsXG4gICAgLi4uUHJvdmlkZVdpbmRvd1NpemVQcm9wc0RlZmluaXRpb24sXG4gICAgLi4uUHJvdmlkZU5hdmlnYXRpb25EcmF3ZXJDb250cm9sbGVyUHJvcHNEZWZpbml0aW9uXG4gIH0sXG4gIHNldHVwKHByb3BzLCB7IHNsb3RzIH0pIHtcbiAgICBjb25zdCBwb3B1cCA9IHNoYWxsb3dSZWYoKG51bGwgYXMgdW5rbm93bikgYXMgUG9wdXBDb250YWluZXIpO1xuICAgIGNvbnN0IHRvcCA9IHNoYWxsb3dSZWYoKG51bGwgYXMgdW5rbm93bikgYXMgTm90aWNlQ29udGFpbmVyKTtcbiAgICBjb25zdCBib3R0b20gPSBzaGFsbG93UmVmKChudWxsIGFzIHVua25vd24pIGFzIE5vdGljZUNvbnRhaW5lcik7XG5cbiAgICBmdW5jdGlvbiBzaG93Tm90aWNlKHBhcmFtczogU2hvd05vdGljZU9wdGlvbnMpIHtcbiAgICAgIGNvbnN0IG9wdGlvbnM6IE5vdGljZU9wdGlvbnMgPSB7XG4gICAgICAgIC4uLnBhcmFtcyxcbiAgICAgICAgdHJhbnNpdGlvbjogcGFyYW1zLnRyYW5zaXRpb24gPyBmb3JtYXRUcmFuc2l0aW9uKHBhcmFtcy50cmFuc2l0aW9uKSA6IERFRkFVTFRfVFJBTlNJVElPTlxuICAgICAgfTtcbiAgICAgIHJldHVybiBwYXJhbXMucGxhY2VtZW50ID09PSAndG9wJyA/IHRvcC52YWx1ZS5zaG93Tm90aWNlKG9wdGlvbnMpIDogYm90dG9tLnZhbHVlLnNob3dOb3RpY2Uob3B0aW9ucyk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2hvd1BvcHVwKHBhcmFtczogU2hvd1BvcHVwT3B0aW9ucykge1xuICAgICAgcmV0dXJuIHBvcHVwLnZhbHVlLnNob3dQb3B1cCh7XG4gICAgICAgIHJlbmRlcjogcGFyYW1zLnJlbmRlcixcbiAgICAgICAgdHJhbnNpdGlvbjogcGFyYW1zLnRyYW5zaXRpb24gPyBmb3JtYXRUcmFuc2l0aW9uKHBhcmFtcy50cmFuc2l0aW9uKSA6IERFRkFVTFRfVFJBTlNJVElPTlxuICAgICAgfSk7XG4gICAgfVxuICAgIHByb3ZpZGVUaGVtZShwcm9wcyk7XG4gICAgcHJvdmlkZU5vdGljZUNvbnRyb2xsZXIoc2hvd05vdGljZSk7XG4gICAgcHJvdmlkZVBvcHVwQ29udHJvbGxlcihzaG93UG9wdXApO1xuICAgIHByb3ZpZGVXaW5kb3dTaXplKHByb3BzKTtcbiAgICBjb25zdCB7IGlzVmlzaWJsZSB9ID0gcHJvdmlkZU5hdmlnYXRpb25EcmF3ZXJDb250cm9sbGVyKHByb3BzKTtcblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjb25zdCBoYXNOYXZpZ2F0aW9uRHJhd2VyID0gISFzbG90c1snbmF2aWdhdGlvbi1kcmF3ZXInXTtcbiAgICAgIGNvbnN0IGRpc3BsYXlOYXZpZ2F0aW9uRHJhd2VyID0gaXNTb21lKGlzVmlzaWJsZS52YWx1ZSkgJiYgaXNWaXNpYmxlLnZhbHVlLnZhbHVlO1xuICAgICAgY29uc3Qgbm9kZXMgPSBbXG4gICAgICAgIGdlbmVyYXRlTm90aWNlQ29udGFpbmVyKCd0b3AnLCB0b3ApLFxuICAgICAgICBnZW5lcmF0ZU5vdGljZUNvbnRhaW5lcignYm90dG9tJywgYm90dG9tKSxcbiAgICAgICAgZ2VuZXJhdGVQb3B1cENvbnRhaW5lcihwb3B1cClcbiAgICAgIF07XG5cbiAgICAgIG5vZGVzLnB1c2goaCgnZGl2JywgeyBzdHlsZTogeyAnei1pbmRleCc6IDAgfSB9LCBnZW5lcmF0ZUJvZHlDb250ZW50KHNsb3RzLCBoYXNOYXZpZ2F0aW9uRHJhd2VyLCBkaXNwbGF5TmF2aWdhdGlvbkRyYXdlcikpKTtcblxuICAgICAgcmV0dXJuIGgoXG4gICAgICAgICdkaXYnLFxuICAgICAgICB7XG4gICAgICAgICAgY2xhc3M6IFtcbiAgICAgICAgICAgICdiLWFwcCcsXG4gICAgICAgICAgICB7ICdoYXMtbmF2aWdhdGlvbi1kcmF3ZXInOiBoYXNOYXZpZ2F0aW9uRHJhd2VyICYmIGRpc3BsYXlOYXZpZ2F0aW9uRHJhd2VyLCAnaGFzLWhlYWRlcic6ICEhc2xvdHMuaGVhZGVyIH1cbiAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIG5vZGVzXG4gICAgICApO1xuICAgIH07XG4gIH1cbn0pO1xuIl19