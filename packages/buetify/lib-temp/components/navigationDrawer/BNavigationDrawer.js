import './navigation-drawer.sass';
import { identity, pipe } from 'fp-ts/lib/function';
import { exists } from 'fp-ts/lib/Option';
import { useNavigationDrawerController } from '../../composables/navigationDrawerController';
import { useThemePropsDefinition, useTheme } from '../../composables/theme';
import { useWindowSize } from '../../composables/windowSize';
import { SlideRightTransition } from '../../transitions/slideRightTransition';
import { defineComponent, h, computed, watchEffect, watch, toRef, withDirectives, vShow } from 'vue';
import BOverlay from '../overlay/BOverlay';
import { NavigationDrawerThemeMap } from './theme';
export const BNavigationDrawerPropsDefinition = {
    ...useThemePropsDefinition(NavigationDrawerThemeMap),
    tag: {
        type: String,
        default: 'nav'
    },
    isFullheight: {
        type: Boolean,
        default: true
    },
    currentRoute: {
        type: Object,
        required: false
    }
};
function generateDrawer(props, controller, themeClasses, context) {
    return h(props.tag, {
        class: ['b-navigation-drawer', { 'is-fullheight': props.isFullheight }, ...themeClasses]
    }, context.slots.default &&
        context.slots.default({
            showNavigationDrawer: controller.show,
            hideNavigationDrawer: controller.hide,
            navigationDrawerIsVisible: controller.isVisible.value,
            toggleNavigationDrawer: controller.toggle
        }));
}
function generateMobileDrawer(props, controller, themeClasses, context) {
    return h(SlideRightTransition, undefined, () => withDirectives(h(BOverlay, {
        class: 'is-left',
        isActive: pipe(controller.isVisible.value, exists(identity)),
        onClick: controller.hide
    }, () => generateDrawer(props, controller, themeClasses, context)), [[vShow, controller.isVisible.value]]));
}
export default defineComponent({
    name: 'b-navigation-drawer',
    props: BNavigationDrawerPropsDefinition,
    setup(props, context) {
        const controller = useNavigationDrawerController();
        const windowSize = useWindowSize();
        const { themeClasses } = useTheme(props);
        const useSideDrawer = computed(() => {
            return windowSize.value.isTouch || windowSize.value.isDesktop;
        });
        watchEffect(() => {
            useSideDrawer.value ? controller.hide() : controller.show();
        });
        watch(toRef(props, 'currentRoute'), newVal => {
            if (useSideDrawer.value) {
                controller.hide();
            }
        });
        return () => {
            if (useSideDrawer.value) {
                return generateMobileDrawer(props, controller, themeClasses.value, context);
            }
            else {
                return generateDrawer(props, controller, themeClasses.value, context);
            }
        };
    }
});
//# sourceMappingURL=data:application/json;base64,