import { getUseTogglePropsDefinition, useToggle } from '../../../composables/toggle';
import { defineComponent } from 'vue';
export function defineToggle(statusName) {
    return defineComponent({
        name: 'toggle',
        props: getUseTogglePropsDefinition(statusName),
        setup(props, { slots }) {
            const toggle = useToggle(props, statusName);
            return () => slots.default &&
                slots.default({
                    attrs: toggle.attrs.value,
                    listeners: toggle.listeners,
                    isOn: toggle.isOn.value,
                    isOff: toggle.isOff.value,
                    setOn: toggle.setOn,
                    setOff: toggle.setOff,
                    toggle: toggle.toggle
                });
        }
    });
}
export const DefaultToggle = defineToggle('status');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGVmYXVsdFRvZ2dsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3JlbmRlcmxlc3MvdG9nZ2xlL0RlZmF1bHRUb2dnbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLDJCQUEyQixFQUFFLFNBQVMsRUFBa0IsTUFBTSw2QkFBNkIsQ0FBQztBQUNyRyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sS0FBSyxDQUFDO0FBRXRDLE1BQU0sVUFBVSxZQUFZLENBQW1CLFVBQWE7SUFDMUQsT0FBTyxlQUFlLENBQUM7UUFDckIsSUFBSSxFQUFFLFFBQVE7UUFDZCxLQUFLLEVBQUUsMkJBQTJCLENBQUksVUFBVSxDQUFDO1FBQ2pELEtBQUssQ0FBQyxLQUFLLEVBQUUsRUFBRSxLQUFLLEVBQUU7WUFDcEIsTUFBTSxNQUFNLEdBQUcsU0FBUyxDQUFFLEtBQXNDLEVBQUUsVUFBVSxDQUFDLENBQUM7WUFDOUUsT0FBTyxHQUFHLEVBQUUsQ0FDVixLQUFLLENBQUMsT0FBTztnQkFDYixLQUFLLENBQUMsT0FBTyxDQUFDO29CQUNaLEtBQUssRUFBRSxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUs7b0JBQ3pCLFNBQVMsRUFBRSxNQUFNLENBQUMsU0FBUztvQkFDM0IsSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSztvQkFDdkIsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSztvQkFDekIsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLO29CQUNuQixNQUFNLEVBQUUsTUFBTSxDQUFDLE1BQU07b0JBQ3JCLE1BQU0sRUFBRSxNQUFNLENBQUMsTUFBTTtpQkFDdEIsQ0FBQyxDQUFDO1FBQ1AsQ0FBQztLQUNGLENBQUMsQ0FBQztBQUNMLENBQUM7QUFFRCxNQUFNLENBQUMsTUFBTSxhQUFhLEdBQUcsWUFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0VXNlVG9nZ2xlUHJvcHNEZWZpbml0aW9uLCB1c2VUb2dnbGUsIFVzZVRvZ2dsZVByb3BzIH0gZnJvbSAnLi4vLi4vLi4vY29tcG9zYWJsZXMvdG9nZ2xlJztcbmltcG9ydCB7IGRlZmluZUNvbXBvbmVudCB9IGZyb20gJ3Z1ZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWZpbmVUb2dnbGU8SyBleHRlbmRzIHN0cmluZz4oc3RhdHVzTmFtZTogSykge1xuICByZXR1cm4gZGVmaW5lQ29tcG9uZW50KHtcbiAgICBuYW1lOiAndG9nZ2xlJyxcbiAgICBwcm9wczogZ2V0VXNlVG9nZ2xlUHJvcHNEZWZpbml0aW9uPEs+KHN0YXR1c05hbWUpLFxuICAgIHNldHVwKHByb3BzLCB7IHNsb3RzIH0pIHtcbiAgICAgIGNvbnN0IHRvZ2dsZSA9IHVzZVRvZ2dsZSgocHJvcHMgYXMgdW5rbm93bikgYXMgVXNlVG9nZ2xlUHJvcHM8Sz4sIHN0YXR1c05hbWUpO1xuICAgICAgcmV0dXJuICgpID0+XG4gICAgICAgIHNsb3RzLmRlZmF1bHQgJiZcbiAgICAgICAgc2xvdHMuZGVmYXVsdCh7XG4gICAgICAgICAgYXR0cnM6IHRvZ2dsZS5hdHRycy52YWx1ZSxcbiAgICAgICAgICBsaXN0ZW5lcnM6IHRvZ2dsZS5saXN0ZW5lcnMsXG4gICAgICAgICAgaXNPbjogdG9nZ2xlLmlzT24udmFsdWUsXG4gICAgICAgICAgaXNPZmY6IHRvZ2dsZS5pc09mZi52YWx1ZSxcbiAgICAgICAgICBzZXRPbjogdG9nZ2xlLnNldE9uLFxuICAgICAgICAgIHNldE9mZjogdG9nZ2xlLnNldE9mZixcbiAgICAgICAgICB0b2dnbGU6IHRvZ2dsZS50b2dnbGVcbiAgICAgICAgfSk7XG4gICAgfVxuICB9KTtcbn1cblxuZXhwb3J0IGNvbnN0IERlZmF1bHRUb2dnbGUgPSBkZWZpbmVUb2dnbGUoJ3N0YXR1cycpO1xuIl19