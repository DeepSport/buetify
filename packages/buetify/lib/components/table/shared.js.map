{"version":3,"sources":["../../../src/components/table/shared.ts"],"names":[],"mappings":"AACA,SAAS,SAAT,EAAwB,QAAxB,EAAkC,QAAlC,QAAkD,cAAlD;AAEA,SAAS,cAAT,QAA+B,qBAA/B;AAmCA,OAAO,MAAM,eAAe,GAAkB,SAAS,CAAqB,GAAG,IAAI,GAAG,CAAC,EAAhC,CAAT,CAA6C,QAA7C,CAAvC;AAEP,OAAO,MAAM,cAAc,GAAqB,SAAS,CAAuB,MAAM,IAAI,MAAM,CAAC,KAAxC,CAAT,CAAwD,QAAxD,CAAzC;AAEP,OAAO,MAAM,eAAe,GAAG,cAAc,CAAC,eAAD,CAAtC;AAEP,OAAO,MAAM,kBAAkB,GAAG,cAAc,CAAC,cAAD,CAAzC","sourcesContent":["import { FunctionN } from 'fp-ts/function';\nimport { contramap, Eq, eqStrict, eqString } from 'fp-ts/lib/Eq';\nimport { Ord } from 'fp-ts/lib/Ord';\nimport { toggleListItem } from '../../utils/helpers';\nimport { Classes } from '../../utils/mergeClasses';\n\nexport interface BTableRow {\n  id: unknown;\n  isDroppable?: boolean;\n  isDraggable?: boolean;\n  isSelectable?: boolean;\n  isCheckable?: boolean;\n  classes?: Classes;\n}\n\nexport type SortType = 'Ascending' | 'Descending';\n\nexport type BTableColumnPosition = 'is-left' | 'is-centered' | 'is-right';\n\nexport interface BTableColumnSort<T = BTableRow> {\n  ord: Ord<T>;\n  sortType?: SortType;\n}\nexport interface BTableColumn<T = BTableRow> {\n  label: string;\n  detail?: string;\n  slotName?: string;\n  value?: keyof T | FunctionN<[T], unknown>;\n  asHtml?: boolean;\n  sort?: boolean | BTableColumnSort<T>;\n  meta?: unknown;\n  isVisible?: boolean;\n  position?: BTableColumnPosition;\n  width?: string | number;\n  classes?: Classes;\n  isSticky?: boolean;\n}\n\nexport const eqBTableRowData: Eq<BTableRow> = contramap<unknown, BTableRow>(row => row.id)(eqStrict);\n\nexport const eqBTableColumn: Eq<BTableColumn> = contramap<string, BTableColumn>(column => column.label)(eqString);\n\nexport const toggleBTableRow = toggleListItem(eqBTableRowData);\n\nexport const toggleBTableColumn = toggleListItem(eqBTableColumn);\n"],"sourceRoot":"","file":"shared.js"}