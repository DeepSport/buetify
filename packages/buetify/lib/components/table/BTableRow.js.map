{"version":3,"sources":["../../../src/components/table/BTableRow.ts"],"names":[],"mappings":"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","sourcesContent":["import { FunctionN } from 'fp-ts/lib/function';\nimport { exists } from 'fp-ts/Option';\nimport { pipe } from 'fp-ts/pipeable';\nimport { BCheckbox } from '../form/checkbox/BCheckbox';\nimport { isString } from '../../utils/helpers';\nimport { useInjectedVisibleColumns } from './composables/shared';\nimport { useInjectedCheckableTable } from './composables/useCheckableTable';\nimport { useInjectedDraggableTable } from './composables/useDraggableTable';\nimport { useInjectedSelectableTable } from './composables/useSelectableTable';\nimport { BTableColumn, BTableRow, eqBTableRowData } from './shared';\nimport { h, VNode, defineComponent, computed, PropType } from 'vue';\n\nexport default defineComponent({\n  name: 'b-table-row',\n  props: {\n    index: {\n      type: Number as PropType<number>,\n      required: true as const\n    },\n    row: {\n      type: Object as PropType<BTableRow>,\n      required: true as const\n    },\n    onRowClick: {\n      type: Function as PropType<FunctionN<[BTableRow, MouseEvent], void>>\n    }\n  },\n  setup(props, { slots }) {\n    const { checkedRowIds, variant, toggleRow, isCheckable } = useInjectedCheckableTable();\n    const { selectedRowIds, toggleRowSelection, isSelectable } = useInjectedSelectableTable();\n    const draggable = useInjectedDraggableTable();\n    const visibleColumns = useInjectedVisibleColumns();\n    const isChecked = computed(() => checkedRowIds.value.has(props.row.id));\n    const isSelected = computed(() => selectedRowIds.value.has(props.row.id));\n\n    const classes = computed(() => {\n      const isActive = draggable.isActive.value;\n      const isDroppable = props.row.isDroppable ?? !!props.row.isDraggable;\n      return [\n        {\n          'is-selected': isSelected.value,\n          'is-checked': isChecked.value,\n          'is-draggable': draggable.isDraggable.value && !!props.row.isDraggable,\n          'is-droppable': isActive && isDroppable,\n          'is-undroppable': isActive && !isDroppable,\n          'is-drop-target':\n            isActive &&\n            pipe(\n              draggable.target.value,\n              exists(t => eqBTableRowData.equals(t, props.row))\n            )\n        },\n        props.row.classes\n      ];\n    });\n\n    const dragListeners = computed(() => draggable.useRowDragListeners(props.row, props.index));\n\n    function toggleCheck() {\n      toggleRow(props.row);\n    }\n\n    function onClick(e: MouseEvent) {\n      if (props.onRowClick) {\n        props.onRowClick(props.row, e);\n      }\n      if (props.row.isSelectable ?? isSelectable.value) {\n        e.stopPropagation();\n        toggleRowSelection(props.row);\n      }\n    }\n\n    return () => {\n      const columns: VNode[] = visibleColumns.value.map((column: BTableColumn) => {\n        const children: Array<VNode | VNode[] | string> = [];\n        const value = column.value\n          ? isString(column.value)\n            ? props.row[column.value]\n            : column.value(props.row)\n          : undefined;\n\n        const columnSlot = slots[column.slotName || column.label];\n\n        if (columnSlot) {\n          children.push(columnSlot({ row: props.row, column, value }));\n        } else if (value !== null) {\n          children.push(String(value));\n        }\n\n        const textClass =\n          column.position === undefined\n            ? 'has-text-left'\n            : column.position === 'is-left'\n            ? 'has-text-left'\n            : column.position === 'is-centered'\n            ? 'has-text-centered'\n            : 'has-text-right';\n\n        return h(\n          'td',\n          {\n            class: [textClass, { 'is-sticky-left': column.isSticky }],\n            'data-label': column.label\n          },\n          children\n        );\n      });\n\n      if (isCheckable.value) {\n        columns.unshift(\n          h('td', { class: 'checkbox-cell' }, [\n            h(BCheckbox, {\n              modelValue: isChecked.value,\n              variant: variant.value,\n              isDisabled: props.row.isCheckable === false,\n              'onUpdate:modelValue': toggleCheck\n            })\n          ])\n        );\n      }\n\n      return h(\n        'tr',\n        {\n          class: classes.value,\n          onClick,\n          draggable: draggable.isDraggable.value && !!props.row.isDraggable,\n          ...dragListeners.value\n        },\n        columns\n      );\n    };\n  }\n});\n"],"sourceRoot":"","file":"BTableRow.js"}