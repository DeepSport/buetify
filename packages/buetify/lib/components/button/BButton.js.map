{"version":3,"sources":["../../../src/components/button/BButton.ts"],"names":[],"mappings":"AAAA,OAAO,iCAAP;AACA,SAAS,CAAT,EAAsB,eAAtB,QAA6C,KAA7C;;AAqBA,SAAS,gBAAT,CAA0B,KAA1B,EAA4C;AAC1C,SAAO,CACL,QADK,EAEL,KAAK,CAAC,OAFD,EAGL,KAAK,CAAC,IAHD,EAIL;AACE,kBAAc,KAAK,CAAC,SADtB;AAEE,kBAAc,KAAK,CAAC,SAFtB;AAGE,mBAAe,KAAK,CAAC,UAHvB;AAIE,mBAAe,KAAK,CAAC,UAJvB;AAKE,kBAAc,KAAK,CAAC,SALtB;AAME,iBAAa,KAAK,CAAC,QANrB;AAOE,mBAAe,KAAK,CAAC,UAPvB;AAQE,kBAAc,KAAK,CAAC,SARtB;AASE,mBAAe,KAAK,CAAC,UATvB;AAUE,oBAAgB,KAAK,CAAC;AAVxB,GAJK,CAAP;AAiBD;;AAED,eAAe,eAAe,CAAC;AAC7B,EAAA,IAAI,EAAE,UADuB;AAE7B,EAAA,KAAK,EAAE;AACL,IAAA,GAAG,EAAE;AACH,MAAA,IAAI,EAAE,MADH;AAEH,MAAA,OAAO,EAAE,QAFN;AAGH,MAAA,SAAS,EAAG,GAAD,IAAiB,CAAC,QAAD,EAAW,GAAX,EAAgB,OAAhB,EAAyB,QAAzB,CAAkC,GAAlC;AAHzB,KADA;AAML,IAAA,IAAI,EAAE;AACJ,MAAA,IAAI,EAAE,MADF;AAEJ,MAAA,OAAO,EAAE;AAFL,KAND;AAUL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,MADC;AAEP,MAAA,OAAO,EAAE;AAFF,KAVJ;AAcL,IAAA,SAAS,EAAE;AACT,MAAA,IAAI,EAAE,OADG;AAET,MAAA,OAAO,EAAE;AAFA,KAdN;AAkBL,IAAA,SAAS,EAAE;AACT,MAAA,IAAI,EAAE,OADG;AAET,MAAA,OAAO,EAAE;AAFA,KAlBN;AAsBL,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,OADI;AAEV,MAAA,OAAO,EAAE;AAFC,KAtBP;AA0BL,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,OADI;AAEV,MAAA,OAAO,EAAE;AAFC,KA1BP;AA8BL,IAAA,SAAS,EAAE;AACT,MAAA,IAAI,EAAE,OADG;AAET,MAAA,OAAO,EAAE;AAFA,KA9BN;AAkCL,IAAA,QAAQ,EAAE;AACR,MAAA,IAAI,EAAE,OADE;AAER,MAAA,OAAO,EAAE;AAFD,KAlCL;AAsCL,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,OADI;AAEV,MAAA,OAAO,EAAE;AAFC,KAtCP;AA0CL,IAAA,SAAS,EAAE;AACT,MAAA,IAAI,EAAE,OADG;AAET,MAAA,OAAO,EAAE;AAFA,KA1CN;AA8CL,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,OADI;AAEV,MAAA,OAAO,EAAE;AAFC,KA9CP;AAkDL,IAAA,WAAW,EAAE;AACX,MAAA,IAAI,EAAE,OADK;AAEX,MAAA,OAAO,EAAE;AAFE;AAlDR,GAFsB;;AAyD7B,EAAA,KAAK,CAAC,KAAD,EAAQ;AAAE,IAAA;AAAF,GAAR,EAAiB;AACpB,WAAO,MACL,CAAC,CACC,KAAK,CAAC,GADP,EAEC;AACE,MAAA,KAAK,EAAE,gBAAgB,CAAC,KAAD,CADzB;AAEE,MAAA,QAAQ,EAAE,KAAK,CAAC,UAAN,GAAmB,IAAnB,GAA0B;AAFtC,KAFD,EAMC,KAAK,CAAC,OAAN,IAAiB,KAAK,CAAC,OAAN,EANlB,CADH;AASD;;AAnE4B,CAAD,CAA9B","sourcesContent":["import 'bulma/sass/elements/button.sass';\nimport { h, PropType, defineComponent } from 'vue';\nimport { ColorVariant } from '../../types/ColorVariants';\nimport { SizeVariant } from '../../types/SizeVariants';\nimport { Classes } from '../../utils/mergeClasses';\n\nexport interface ButtonProps {\n  variant: ColorVariant;\n  isRounded: boolean;\n  isLoading: boolean;\n  isOutlined: boolean;\n  isInverted: boolean;\n  isFocused: boolean;\n  isActive: boolean;\n  isDisabled: boolean;\n  isHovered: boolean;\n  isSelected: boolean;\n  isFullwidth: boolean;\n  size: SizeVariant;\n  tag: 'button' | 'a' | 'input';\n}\n\nfunction useButtonClasses(props: ButtonProps): Classes {\n  return [\n    'button',\n    props.variant,\n    props.size,\n    {\n      'is-rounded': props.isRounded,\n      'is-loading': props.isLoading,\n      'is-outlined': props.isOutlined,\n      'is-inverted': props.isInverted,\n      'is-focused': props.isFocused,\n      'is-active': props.isActive,\n      'is-disabled': props.isDisabled,\n      'is-hovered': props.isHovered,\n      'is-selected': props.isSelected,\n      'is-fullwidth': props.isFullwidth\n    }\n  ];\n}\n\nexport default defineComponent({\n  name: 'b-button',\n  props: {\n    tag: {\n      type: String as PropType<'button' | 'a' | 'input'>,\n      default: 'button' as const,\n      validator: (val: string) => ['button', 'a', 'input'].includes(val)\n    },\n    size: {\n      type: String as PropType<SizeVariant>,\n      default: '' as SizeVariant\n    },\n    variant: {\n      type: String as PropType<ColorVariant>,\n      default: '' as ColorVariant\n    },\n    isRounded: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    },\n    isLoading: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    },\n    isOutlined: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    },\n    isInverted: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    },\n    isFocused: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    },\n    isActive: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    },\n    isDisabled: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    },\n    isHovered: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    },\n    isSelected: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    },\n    isFullwidth: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    }\n  },\n  setup(props, { slots }) {\n    return () =>\n      h(\n        props.tag,\n        {\n          class: useButtonClasses(props),\n          disabled: props.isDisabled ? true : null\n        },\n        slots.default && slots.default()\n      );\n  }\n});\n"],"sourceRoot":"","file":"BButton.js"}