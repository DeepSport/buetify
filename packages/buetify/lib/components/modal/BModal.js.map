{"version":3,"sources":["../../../src/components/modal/BModal.ts"],"names":[],"mappings":"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","sourcesContent":["import 'bulma/sass/components/card.sass';\nimport 'bulma/sass/components/modal.sass';\nimport '../../sass/helpers/animations.sass';\nimport './modal.sass';\nimport { IO } from 'fp-ts/lib/IO';\nimport { usePopupController, UsePopupControllerPropsDefinition } from '../../composables/popupController';\nimport { constEmptyArray } from '../../utils/helpers';\nimport { VNode, defineComponent, PropType, shallowRef, h, ExtractPropTypes, watchEffect, onUnmounted } from 'vue';\nimport BSheet from '../sheet/BSheet';\n\nconst BModalPropsDefinition = {\n  ...UsePopupControllerPropsDefinition,\n  showExit: {\n    type: Boolean as PropType<boolean>,\n    default: true\n  },\n  isFullscreen: {\n    type: Boolean as PropType<boolean>,\n    default: false\n  }\n};\n\nexport type BModalProps = ExtractPropTypes<typeof BModalPropsDefinition>;\n\nexport default defineComponent({\n  name: 'b-modal',\n  props: BModalPropsDefinition,\n  setup(props, { attrs, slots }) {\n    const generateModal = shallowRef(constEmptyArray as IO<VNode[]>);\n    const popup = usePopupController(props, generateModal);\n    generateModal.value = () => {\n      if (!props.isFullscreen) {\n        const nodes = [\n          h('div', { onClick: popup.close, class: 'modal-background' }),\n          h('div', { class: 'modal-content' }, slots.default && slots.default(popup))\n        ];\n        if (props.showExit) {\n          nodes.push(h('button', { class: 'modal-close is-large', onClick: popup.close }));\n        }\n        return [\n          h(\n            'div',\n            {\n              ...attrs,\n              class: 'modal is-active'\n            },\n            nodes\n          )\n        ];\n      } else {\n        return [\n          h(\n            'div',\n            {\n              ...attrs,\n              class: 'modal is-active is-fullscreen'\n            },\n            [h(BSheet, () => slots.default && slots.default(popup))]\n          )\n        ];\n      }\n    };\n\n    watchEffect(() => {\n      if (window === undefined) {\n        return;\n      }\n      if (popup.isOpen.value && props.isFullscreen) {\n        window.document.documentElement.classList.add('is-clipped');\n      } else {\n        window.document.documentElement.classList.remove('is-clipped');\n      }\n    });\n\n    onUnmounted(() => {\n      window && window.document.documentElement.classList.remove('is-clipped');\n    });\n    return { popup };\n  },\n  render() {\n    return this.$slots.trigger && this.$slots.trigger(this.popup);\n  }\n});\n"],"sourceRoot":"","file":"BModal.js"}