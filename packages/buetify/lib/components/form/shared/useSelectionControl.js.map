{"version":3,"sources":["../../../../src/components/form/shared/useSelectionControl.ts"],"names":[],"mappings":"AAAA,SACE,+BADF,EAIE,mBAAmB,IAAI,UAJzB,QAKO,2DALP;AAOA,SAAS,eAAT,EAA0B,UAA1B,EAA6C,CAA7C,QAAsD,KAAtD;;AAEA,SAAS,aAAT,CAAuB,OAAvB,EAA4C;AAC1C,SAAO,CAAC,CAAC,MAAD,EAAS;AAAE,IAAA,KAAK,EAAE,CAAC,OAAD,EAAU,OAAV;AAAT,GAAT,CAAR;AACD;;AAED,SAAS,aAAT,CAAuB,gBAAvB,EAAyD;AACvD,SAAO,CAAC,CAAC,OAAD,EAAU;AAChB,IAAA,QAAQ,EAAE,gBAAgB,CAAC,QADX;AAEhB,IAAA,MAAM,EAAE,gBAAgB,CAAC,MAFT;AAGhB,IAAA,OAAO,EAAE,gBAAgB,CAAC,OAHV;AAIhB,OAAG,gBAAgB,CAAC,KAAjB,CAAuB;AAJV,GAAV,CAAR;AAMD;;AAED,SAAS,iBAAT,CAA2B,gBAA3B,EAA+D,KAA/D,EAA2E;AACzE,SAAO,CAAC,CACN,MADM,EAEN;AACE,IAAA,KAAK,EAAE;AADT,GAFM,EAKN,KAAK,CAAC,OAAN,IAAiB,KAAK,CAAC,OAAN,EALX,CAAR;AAOD;;AAED,OAAM,SAAU,mBAAV,CAA8B,IAA9B,EAA4C,IAA5C,EAA0D,IAA1D,EAAwE,WAAxE,EAA2F;AAC/F,SAAO,MACL,eAAe,CAAC;AACd,IAAA,IADc;AAEd,IAAA,KAAK,EAAE,+BAA+B,EAFxB;;AAGd,IAAA,KAAK,CAAC,KAAD,EAAQ;AAAE,MAAA;AAAF,KAAR,EAAiB;AACpB,YAAM,KAAK,GAAG,UAAU,CAAE,IAAF,CAAxB;AACA,YAAM,SAAS,GAAG,UAAU,CAAC,KAAD,EAAiC,KAAjC,EAAwC,IAAxC,EAA8C,IAA9C,CAA5B;AACA,aAAO,MAAK;AACV,eAAO,CAAC,CACN,OADM,EAEN;AACE,UAAA,KAAK,EAAE,CAAC,WAAD,EAAc,KAAK,CAAC,IAApB,EAA0B;AAAE,2BAAe,SAAS,CAAC,UAAV,CAAqB;AAAtC,WAA1B,CADT;AAEE,UAAA,GAAG,EAAE,KAFP;AAGE,UAAA,EAAE,EAAE,SAAS,CAAC,KAAV,CAAgB,OAAhB,CAAwB,KAH9B;AAIE,UAAA,GAAG,EAAE,SAAS,CAAC,KAAV,CAAgB,EAAhB,CAAmB,KAJ1B;AAKE,UAAA,QAAQ,EAAE,SAAS,CAAC,UAAV,CAAqB,KAArB,IAA8B,IAL1C;AAME,UAAA,QAAQ,EAAE,SAAS,CAAC,UAAV,CAAqB,KAArB,GAA6B,CAAC,CAA9B,GAAkC,CAN9C;AAOE,UAAA,SAAS,EAAE,SAAS,CAAC,SAPvB;AAQE,UAAA,MAAM,EAAE,SAAS,CAAC,MARpB;AASE,UAAA,OAAO,EAAE,SAAS,CAAC;AATrB,SAFM,EAaN,CAAC,aAAa,CAAC,SAAD,CAAd,EAA2B,aAAa,CAAC,KAAK,CAAC,OAAP,CAAxC,EAAyD,iBAAiB,CAAC,SAAD,EAAY,KAAZ,CAA1E,CAbM,CAAR;AAeD,OAhBD;AAiBD;;AAvBa,GAAD,CADjB;AA0BD","sourcesContent":["import {\n  getUseSelectablePropsDefinition,\n  SelectionControl,\n  UseSelectableProps,\n  useSelectionControl as useControl\n} from '../../../composables/selectionControl/useSelectionControl';\nimport { ColorVariant } from '../../../types/ColorVariants';\nimport { defineComponent, shallowRef, Slots, h } from 'vue';\n\nfunction generateCheck(variant: ColorVariant) {\n  return h('span', { class: [variant, 'check'] });\n}\n\nfunction generateInput(selectionControl: SelectionControl) {\n  return h('input', {\n    onChange: selectionControl.onChange,\n    onBlur: selectionControl.onBlur,\n    onFocus: selectionControl.onFocus,\n    ...selectionControl.attrs.value\n  });\n}\n\nfunction generateLabelText(selectionControl: SelectionControl, slots: Slots) {\n  return h(\n    'span',\n    {\n      class: 'control-label'\n    },\n    slots.default && slots.default()\n  );\n}\n\nexport function useSelectionControl(role: string, type: string, name: string, staticClass: string) {\n  return <T>() =>\n    defineComponent({\n      name,\n      props: getUseSelectablePropsDefinition<T>(),\n      setup(props, { slots }) {\n        const label = shallowRef((null as unknown) as HTMLElement);\n        const selection = useControl(props as UseSelectableProps<T>, label, role, type);\n        return () => {\n          return h(\n            'label',\n            {\n              class: [staticClass, props.size, { 'is-disabled': selection.isDisabled.value }],\n              ref: label,\n              id: selection.label.labelId.value,\n              for: selection.label.id.value,\n              disabled: selection.isDisabled.value || null,\n              tabindex: selection.isDisabled.value ? -1 : 0,\n              onKeydown: selection.onKeydown,\n              onBlur: selection.onBlur,\n              onClick: selection.onClick\n            },\n            [generateInput(selection), generateCheck(props.variant), generateLabelText(selection, slots)]\n          );\n        };\n      }\n    });\n}\n"],"sourceRoot":"","file":"useSelectionControl.js"}