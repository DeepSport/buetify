{"version":3,"sources":["../../../../src/components/form/datepicker/BDatepickerTableRow.ts"],"names":[],"mappings":"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","sourcesContent":["import './datepicker.sass';\nimport BDatepickerTableCell from './BDatepickerTableCell';\nimport { DateCell, DateEvent, DetailedDateEvent } from './shared';\nimport { elemSerialDate, isDate, isOnOrAfterDate, isOnOrBeforeDate, isSameDay } from './utils';\nimport { constEmptyArray, constNone } from '../../../utils/helpers';\nimport { isNonEmpty } from 'fp-ts/lib/Array';\nimport { constTrue, FunctionN, identity } from 'fp-ts/lib/function';\nimport { fold, Option } from 'fp-ts/lib/Option';\nimport { pipe } from 'fp-ts/lib/pipeable';\nimport { defineComponent, PropType, VNode, computed, Ref, ExtractPropTypes, h } from 'vue';\n\nexport const BDatepickerTableRowPropsDefinition = {\n  modelValue: {\n    type: [Date, Array] as PropType<Date | Date[]>\n  },\n  'onUpdate:modelValue': {\n    type: Function as PropType<FunctionN<[Date | Date[]], void>>,\n    required: true as const\n  },\n  focusedDate: {\n    type: Object as PropType<Option<Date>>,\n    required: true as const\n  },\n  'onUpdate:focusedDate': {\n    type: Function as PropType<FunctionN<[Option<Date>], any>>,\n    required: true as const\n  },\n  showWeekNumber: {\n    type: Boolean as PropType<boolean>,\n    default: false as const\n  },\n  weekNumber: {\n    type: Number as PropType<number>,\n    required: true as const\n  },\n  week: {\n    type: Array as PropType<Date[]>,\n    required: true as const\n  },\n  month: {\n    type: Number as PropType<number>,\n    required: true as const\n  },\n  minDate: {\n    type: Object as PropType<Option<Date>>,\n    required: true as const\n  },\n  maxDate: {\n    type: Object as PropType<Option<Date>>,\n    required: true as const\n  },\n  isDisabled: {\n    type: Boolean as PropType<boolean>,\n    default: false as const\n  },\n  unselectableDates: {\n    type: Array as PropType<Date[]>,\n    default: constEmptyArray\n  },\n  unselectableDaysOfWeek: {\n    type: Array as PropType<number[]>,\n    default: constEmptyArray\n  },\n  selectableDates: {\n    type: Object as PropType<Option<Date[]>>,\n    default: constNone\n  },\n  events: {\n    type: Array as PropType<DateEvent[]>,\n    default: constEmptyArray\n  },\n  indicators: {\n    type: String as PropType<'dots' | 'bars'>,\n    required: true as const\n  }\n};\n\nexport type BDatePickerTableRowProps = ExtractPropTypes<typeof BDatepickerTableRowPropsDefinition>;\n\nfunction getIsAfterMinDate(props: BDatePickerTableRowProps) {\n  return function isAfterMinDate(date: Date): boolean {\n    return pipe(\n      props.minDate,\n      fold(constTrue, d => isOnOrAfterDate(date, d))\n    );\n  };\n}\n\nfunction getIsBeforeMaxDate(props: BDatePickerTableRowProps) {\n  return function isBeforeMaxDate(date: Date): boolean {\n    return pipe(\n      props.maxDate,\n      fold(constTrue, d => isOnOrBeforeDate(date, d))\n    );\n  };\n}\n\nfunction getIsWithinMonth(props: BDatePickerTableRowProps) {\n  return function isWithinMonth(date: Date): boolean {\n    return date.getMonth() === props.month;\n  };\n}\n\nfunction getIsEnabled(props: BDatePickerTableRowProps) {\n  return function isEnabled(date: Date): boolean {\n    return (\n      !elemSerialDate(date, props.unselectableDates) &&\n      pipe(\n        props.selectableDates,\n        fold(constTrue, dates => elemSerialDate(date, dates))\n      )\n    );\n  };\n}\n\nfunction getIsOnSelectableDayOfWeek(props: BDatePickerTableRowProps) {\n  return function isOnSelectableDayOfWeek(date: Date): boolean {\n    return !props.unselectableDaysOfWeek.includes(date.getDay());\n  };\n}\n\nfunction getDatePredicates(props: BDatePickerTableRowProps) {\n  const isAfterMinDate = getIsAfterMinDate(props);\n  const isBeforeMaxDate = getIsBeforeMaxDate(props);\n  const isWithinMonth = getIsWithinMonth(props);\n  const isEnabled = getIsEnabled(props);\n  const isOnSelectableDayOfWeek = getIsOnSelectableDayOfWeek(props);\n  function isSelectedDate(date: Date): boolean {\n    return Array.isArray(props.modelValue)\n      ? props.modelValue.some(d => isSameDay(d, date))\n      : props.modelValue\n      ? isSameDay(props.modelValue, date)\n      : false;\n  }\n  function isSelectableDate(date: Date): boolean {\n    return [\n      isAfterMinDate(date),\n      isBeforeMaxDate(date),\n      isWithinMonth(date),\n      isEnabled(date),\n      isOnSelectableDayOfWeek(date)\n    ].every(identity);\n  }\n  return {\n    isAfterMinDate,\n    isBeforeMaxDate,\n    isWithinMonth,\n    isEnabled,\n    isOnSelectableDayOfWeek,\n    isSelectableDate,\n    isSelectedDate\n  };\n}\n\ntype DatePredicates = ReturnType<typeof getDatePredicates>;\n\nfunction getDateClassesGenerator(props: BDatePickerTableRowProps, predicates: DatePredicates) {\n  const today = new Date();\n  return function getDateClasses(date: Date | undefined | null, hasEvents = false) {\n    if (isDate(date)) {\n      const isSelectable = predicates.isSelectableDate(date);\n      return {\n        'is-selected': predicates.isSelectedDate(date),\n        'is-today': isSameDay(date, today),\n        'is-selectable': isSelectable && !props.isDisabled,\n        'is-unselectable': !isSelectable || props.isDisabled,\n        'has-event': hasEvents\n      };\n    } else {\n      return {};\n    }\n  };\n}\n\nfunction generateWeekNumber(weekNumber: number): VNode {\n  return h('td', [`${weekNumber}`]);\n}\n\nfunction getGenerateCell(props: BDatePickerTableRowProps) {\n  return function generateCell(cell: DateCell): VNode {\n    return h(BDatepickerTableCell, {\n      key: cell.date.toLocaleDateString(),\n      cell,\n      modelValue: props.modelValue,\n      'onUpdate:modelValue': props['onUpdate:modelValue'],\n      focusedDate: props.focusedDate,\n      'onUpdate:focusedDate': props['onUpdate:focusedDate'],\n      indicators: props.indicators\n    });\n  };\n}\n\nexport default defineComponent({\n  name: 'b-datepicker-table-row',\n  props: BDatepickerTableRowPropsDefinition,\n  setup(props) {\n    const formattedEvents: Ref<DetailedDateEvent[]> = computed(() =>\n      props.events.map(event => (isDate(event) ? { date: event, variant: 'is-primary' } : event))\n    );\n    const predicates = getDatePredicates(props);\n    const getDateClasses = getDateClassesGenerator(props, predicates);\n    const cells = computed(() =>\n      props.week.map(date => {\n        const events = formattedEvents.value.filter(event => isSameDay(date, event.date));\n        const hasEvents = isNonEmpty(events);\n        return {\n          date,\n          events,\n          hasEvents,\n          isSelected: predicates.isSelectedDate(date),\n          isDisabled: props.isDisabled || !predicates.isSelectableDate(date),\n          number: date.getDate(),\n          ariaLabel: date.toLocaleDateString(),\n          classes: getDateClasses(date, hasEvents)\n        };\n      })\n    );\n    const generateCell = getGenerateCell(props);\n    return () => {\n      return h(\n        'tr',\n        { class: 'datepicker-row' },\n        props.showWeekNumber\n          ? [generateWeekNumber(props.weekNumber), ...cells.value.map(generateCell)]\n          : cells.value.map(generateCell)\n      );\n    };\n  }\n});\n"],"sourceRoot":"","file":"BDatepickerTableRow.js"}