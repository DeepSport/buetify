{"version":3,"sources":["../../../src/components/tabs/BTabItem.ts"],"names":[],"mappings":"AAAA,SAAS,WAAT,QAA4B,kBAA5B;AACA,SAAS,eAAT,EAA0B,CAA1B,EAA6B,MAA7B,EAAqC,cAArC,EAAqD,KAArD,EAA4D,QAA5D,QAA4E,KAA5E;AACA,SAAS,uBAAT,EAAkC,qBAAlC,EAAyD,aAAzD,EAAwE,WAAxE,QAA2F,UAA3F;AAEA,eAAe,eAAe,CAAC;AAC7B,EAAA,IAAI,EAAE,aADuB;AAE7B,EAAA,KAAK,EAAE,uBAFsB;;AAG7B,EAAA,KAAK,CAAC,KAAD,EAAQ;AAAE,IAAA;AAAF,GAAR,EAAiB;AACpB,UAAM,SAAS,GAAG,MAAM,CAAC,WAAD,EAAc,qBAAd,CAAxB;AAEA,UAAM,KAAK,GAAG,SAAS,CAAC,IAAV,CAAe,SAAf,CAAyB,CAAC,IAAI,CAAC,CAAC,KAAF,KAAY,KAAK,CAAC,KAAhD,CAAd;;AAEA,QAAI,KAAK,GAAG,CAAC,CAAb,EAAgB;AACd,MAAA,SAAS,CAAC,IAAV,CAAe,MAAf,CAAsB,KAAtB,EAA6B,CAA7B,EAAgC,KAAhC;AACD,KAFD,MAEO;AACL,MAAA,SAAS,CAAC,IAAV,CAAe,IAAf,CAAoB,KAApB;AACD;;AAED,UAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,WAAW,CAAC,SAAS,CAAC,WAAV,CAAsB,KAAvB,CAAX,KAA6C,KAAK,CAAC,KAA1D,CAAzB;AAEA,WAAO,MAAK;AACV,aAAO,cAAc,CACnB,CAAC,CACC,SADD,EAEC;AACE,QAAA,KAAK,EAAE,UADT;AAEE,sBAAc,KAAK,CAAC;AAFtB,OAFD,EAMC,KAAK,CAAC,OAAN,IAAiB,KAAK,CAAC,OAAN,CAAc;AAAE,QAAA,QAAQ,EAAE,WAAW,CAAC,SAAS,CAAC,WAAV,CAAsB,KAAvB,CAAX,KAA6C,KAAK,CAAC;AAA/D,OAAd,CANlB,CADkB,EASnB,CAAC,CAAC,KAAD,EAAQ,QAAQ,CAAC,KAAjB,CAAD,CATmB,CAArB;AAWD,KAZD;AAaD;;AA7B4B,CAAD,CAA9B","sourcesContent":["import { toUndefined } from 'fp-ts/lib/Option';\nimport { defineComponent, h, inject, withDirectives, vShow, computed } from 'vue';\nimport { BTabItemPropsDefinition, DEFAULT_TAB_INJECTION, TAB_ITEM_NAME, TABS_SYMBOL } from './shared';\n\nexport default defineComponent({\n  name: TAB_ITEM_NAME,\n  props: BTabItemPropsDefinition,\n  setup(props, { slots }) {\n    const injection = inject(TABS_SYMBOL, DEFAULT_TAB_INJECTION);\n\n    const index = injection.tabs.findIndex(p => p.label === props.label);\n\n    if (index > -1) {\n      injection.tabs.splice(index, 1, props);\n    } else {\n      injection.tabs.push(props);\n    }\n\n    const isActive = computed(() => toUndefined(injection.activeLabel.value) === props.label);\n\n    return () => {\n      return withDirectives(\n        h(\n          'section',\n          {\n            class: 'tab-item',\n            'aria-label': props.label\n          },\n          slots.default && slots.default({ isActive: toUndefined(injection.activeLabel.value) === props.label })\n        ),\n        [[vShow, isActive.value]]\n      );\n    };\n  }\n});\n"],"sourceRoot":"","file":"BTabItem.js"}