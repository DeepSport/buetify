{"version":3,"sources":["../../../../src/components/icons/utils/useMaterialDesignIconComponent.ts"],"names":[],"mappings":"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","sourcesContent":["import { FunctionN } from 'fp-ts/lib/function';\r\nimport { IO } from 'fp-ts/lib/IO';\r\nimport { defineComponent, shallowRef, PropType, h, watchEffect } from 'vue';\r\nimport { isString } from '../../../utils/helpers';\r\n\r\nconst SVG_STORE = new Map<string, Promise<string>>();\r\n\r\nfunction isSVG(mimetype: unknown): boolean {\r\n  return isString(mimetype) ? mimetype.includes('svg') : false;\r\n}\r\n\r\nfunction load(src: string): Promise<string> {\r\n  let r = SVG_STORE.get(src);\r\n  if (!r) {\r\n    return new Promise((resolve, reject) => {\r\n      const request = new window.XMLHttpRequest();\r\n      request.open('GET', src, true);\r\n      request.onload = () => {\r\n        const mimetype = request.getResponseHeader('content-type');\r\n        if (request.status === 200) {\r\n          if (isSVG(mimetype)) {\r\n            r = Promise.resolve(request.response);\r\n            SVG_STORE.set(src, r);\r\n            resolve(request.response);\r\n          } else {\r\n            reject(`The file ${src} is not a valid SVG.`);\r\n          }\r\n        } else if (request.status >= 400 && request.status < 500) {\r\n          reject(`The file ${src} do not exists.`);\r\n        } else {\r\n          reject(`Something bad happened trying to fetch ${src}.`);\r\n        }\r\n      };\r\n      request.onerror = reject;\r\n      request.onabort = reject;\r\n      request.send();\r\n    });\r\n  } else {\r\n    return r;\r\n  }\r\n}\r\n\r\nexport const SvgLoader = defineComponent({\r\n  name: 'svg-loader',\r\n  props: {\r\n    src: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    onLoad: {\r\n      type: Function as PropType<IO<void>>,\r\n      required: false\r\n    },\r\n    onError: {\r\n      type: Function as PropType<FunctionN<[Error], void>>,\r\n      required: false\r\n    }\r\n  },\r\n  setup(props) {\r\n    const html = shallowRef(null as null | string);\r\n\r\n    watchEffect(() => {\r\n      html.value = null;\r\n      load(props.src)\r\n        .then(svg => {\r\n          html.value = svg;\r\n          if (props.onLoad) {\r\n            props.onLoad();\r\n          }\r\n        })\r\n        .catch((e: Error) => {\r\n          if (props.onError) {\r\n            props.onError(e);\r\n          }\r\n        });\r\n    });\r\n\r\n    return () =>\r\n      h('i', {\r\n        class: 'is-block is-fullwidth',\r\n        innerHtml: html.value\r\n      });\r\n  }\r\n});\r\n"],"sourceRoot":"","file":"useMaterialDesignIconComponent.js"}