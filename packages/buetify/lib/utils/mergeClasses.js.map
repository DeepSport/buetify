{"version":3,"sources":["../../src/utils/mergeClasses.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,QAAyB,oBAAzB;AACA,SAAS,QAAT,EAAmB,QAAnB,QAAmC,WAAnC;AAIA,OAAM,SAAU,YAAV,CAAuB,eAAvB,EAAkD,UAAlD,EAAsE;AAC1E,MAAI,KAAK,CAAC,OAAN,CAAc,eAAd,CAAJ,EAAoC;AAClC,WAAO,CACL,GAAG,eAAe,CAAC,MAAhB,CAAuB,QAAvB,CADE,EAEL,IAAI,KAAK,CAAC,OAAN,CAAc,UAAd,IAA4B,UAAU,CAAC,MAAX,CAAkB,QAAlB,CAA5B,GAA0D,CAAC,UAAD,CAA9D,CAFK,CAAP;AAID,GALD,MAKO,IAAI,QAAQ,CAAC,eAAD,CAAR,IAA6B,QAAQ,CAAC,eAAD,CAAzC,EAA4D;AACjE,WAAO,CAAC,eAAD,EAAkB,IAAI,KAAK,CAAC,OAAN,CAAc,UAAd,IAA4B,UAAU,CAAC,MAAX,CAAkB,QAAlB,CAA5B,GAA0D,CAAC,UAAD,CAA9D,CAAlB,CAAP;AACD,GAFM,MAEA;AACL,WAAO,UAAP;AACD;AACF","sourcesContent":["import { identity } from 'fp-ts/lib/function';\nimport { isObject, isString } from './helpers';\n\nexport type Classes = string | { [K: string]: boolean } | null | undefined | Classes[];\n\nexport function mergeClasses(existingClasses?: Classes, newClasses?: Classes): Classes {\n  if (Array.isArray(existingClasses)) {\n    return [\n      ...existingClasses.filter(identity),\n      ...(Array.isArray(newClasses) ? newClasses.filter(identity) : [newClasses])\n    ];\n  } else if (isObject(existingClasses) || isString(existingClasses)) {\n    return [existingClasses, ...(Array.isArray(newClasses) ? newClasses.filter(identity) : [newClasses])];\n  } else {\n    return newClasses;\n  }\n}\n"],"sourceRoot":"","file":"mergeClasses.js"}