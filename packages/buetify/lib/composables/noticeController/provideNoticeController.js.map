{"version":3,"sources":["../../../src/composables/noticeController/provideNoticeController.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,EAAmB,SAAnB,QAAoC,oBAApC;AAEA,SAAS,OAAT,QAA+B,KAA/B;AAKA,OAAO,MAAM,wBAAwB,GAAG,MAAM,CAAC,mBAAD,CAAvC;AAcP,OAAO,MAAM,mCAAmC,GAA8B;AAC5E,EAAA,UAAU,EAAE,QAAQ,CAAC,SAAD;AADwD,CAAvE;AAIP,OAAM,SAAU,uBAAV,CAAkC,UAAlC,EAAoF;AACxF,QAAM,SAAS,GAA8B;AAC3C,IAAA;AAD2C,GAA7C;AAIA,EAAA,OAAO,CAAC,wBAAD,EAA2B,SAA3B,CAAP;AACA,SAAO,SAAP;AACD","sourcesContent":["import { constant, constVoid } from 'fp-ts/lib/function';\nimport { IO } from 'fp-ts/lib/IO';\nimport { provide, VNode } from 'vue';\nimport { NoticePlacement } from '../../types/NoticePlacement';\nimport { Transition } from '../../types/Transition';\nimport { Remove } from '../shared';\n\nexport const NOTICE_CONTROLLER_SYMBOL = Symbol('notice-controller');\n\nexport interface ShowNoticeOptions {\n  render: IO<VNode[]>;\n  placement: NoticePlacement;\n  duration: number;\n  shouldQueue: boolean;\n  transition?: Transition;\n}\n\nexport interface NoticeControllerInjection {\n  showNotice: (options: ShowNoticeOptions) => Remove;\n}\n\nexport const DEFAULT_NOTICE_CONTROLLER_INJECTION: NoticeControllerInjection = {\n  showNotice: constant(constVoid)\n};\n\nexport function provideNoticeController(showNotice: (options: ShowNoticeOptions) => Remove) {\n  const injection: NoticeControllerInjection = {\n    showNotice\n  };\n\n  provide(NOTICE_CONTROLLER_SYMBOL, injection);\n  return injection;\n}\n"],"sourceRoot":"","file":"provideNoticeController.js"}