{"version":3,"sources":["../../../src/composables/selectionControl/useSelectionControl.ts"],"names":[],"mappings":"AACA,SAAwB,QAAxB,EAAkC,KAAlC,QAA4D,KAA5D;AAGA,SAAS,YAAT,EAAuB,YAAvB,QAA2C,0BAA3C;AACA,SAAS,cAAT,QAA+B,qBAA/B;AACA,SAAS,UAAT,EAAsC,yBAAtC,QAAuE,YAAvE;AACA,SAAS,QAAT,EAAkC,uBAAlC,QAAiE,UAAjE;AACA,SAAS,UAAT,EAAsC,yBAAtC,QAAuE,YAAvE;AACA,SAAS,0BAAT,EAAqC,QAArC,QAAoE,UAApE;AACA,SAAkB,oBAAlB,QAA8C,WAA9C;AAEA,OAAM,SAAU,+BAAV,GAAyC;AAC7C,SAAO;AACL,IAAA,WAAW,EAAE;AACX,MAAA,IAAI,EAAG,IADI;AAEX,MAAA,QAAQ,EAAE,KAFC;AAGX,MAAA,OAAO,EAAE;AAHE,KADR;AAML,IAAA,SAAS,EAAE;AACT,MAAA,IAAI,EAAG,IADE;AAET,MAAA,OAAO,EAAG;AAFD,KANN;AAUL,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAG,IADG;AAEV,MAAA,OAAO,EAAG;AAFA,KAVP;AAcL,IAAA,eAAe,EAAE;AACf,MAAA,IAAI,EAAE,OADS;AAEf,MAAA,OAAO,EAAE;AAFM,KAdZ;AAkBL,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,OADI;AAEV,MAAA,OAAO,EAAE;AAFC,KAlBP;AAsBL,IAAA,OAAO,EAAE;AACP,MAAA,IAAI,EAAE,MADC;AAEP,MAAA,OAAO,EAAE;AAFF,KAtBJ;AA0BL,IAAA,IAAI,EAAE;AACJ,MAAA,IAAI,EAAE,MADF;AAEJ,MAAA,OAAO,EAAE;AAFL,KA1BD;AA8BL,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,OADI;AAEV,MAAA,OAAO,EAAE;AAFC,KA9BP;AAkCL,IAAA,IAAI,EAAE;AACJ,MAAA,IAAI,EAAE,MADF;AAEJ,MAAA,QAAQ,EAAE;AAFN,KAlCD;AAsCL,OAAG,oBAAoB,EAtClB;AAuCL,OAAG,0BAA0B,EAvCxB;AAwCL,OAAG,yBAxCE;AAyCL,OAAG,yBAzCE;AA0CL,OAAG;AA1CE,GAAP;AA4CD;;AAkBD,SAAS,WAAT,CAAwB,KAAxB,EAAoD,SAApD,EAA8E,UAA9E,EAAmG,EAAnG,EAA4G;AAC1G,MAAI,UAAJ,EAAgB;AACd,QAAI,CAAC,KAAK,CAAC,OAAN,CAAc,KAAd,CAAL,EAA2B,OAAO,KAAP;AAC3B,WAAO,SAAS,KAAK,SAAd,IAA2B,KAAK,CAAC,IAAN,CAAW,IAAI,IAAI,EAAE,CAAC,MAAH,CAAU,IAAV,EAAgB,SAAhB,CAAnB,CAAlC;AACD;;AACD,MAAI,CAAC,KAAK,CAAC,OAAN,CAAc,KAAd,CAAD,IAAyB,SAAS,KAAK,SAA3C,EAAsD;AACpD,WAAO,KAAK,KAAK,SAAV,IAAuB,EAAE,CAAC,MAAH,CAAU,KAAV,EAAiB,SAAjB,CAA9B;AACD;;AACD,SAAO,KAAP;AACD;;AAED,SAAS,WAAT,CACE,KADF,EAEE,SAFF,EAGE,UAHF,EAIE,UAJF,EAKE,UALF,EAME,EANF,EAMgB;AAEd,SAAO,SAAS,QAAT,CAAkB,CAAlB,EAA2B;AAChC,QAAI,UAAU,CAAC,KAAf,EAAsB;AACtB,QAAI,SAAS,CAAC,KAAV,KAAoB,SAAxB,EAAmC;AACnC,UAAM,YAAY,GAAG,KAAK,CAAC,KAA3B;AACA,UAAM,MAAM,GAAG,SAAS,CAAC,KAAzB;AACA,UAAM,MAAM,GAAG,UAAU,CAAC,KAA1B;;AACA,QAAI,UAAU,CAAC,KAAf,EAAsB;AACpB,UAAI,CAAC,KAAK,CAAC,OAAN,CAAc,YAAd,CAAL,EAAkC;AAChC,QAAA,KAAK,CAAC,KAAN,GAAc,EAAd;AACD,OAFD,MAEO;AACL,QAAA,KAAK,CAAC,KAAN,GAAc,cAAc,CAAC,EAAE,CAAC,KAAJ,CAAd,CAAyB,MAAzB,EAAiC,YAAjC,CAAd;AACD;AACF,KAND,MAMO,IAAI,CAAC,KAAK,CAAC,OAAN,CAAc,YAAd,CAAL,EAAkC;AACvC,UAAI,YAAY,KAAK,SAAjB,IAA+B,YAAY,KAAK,SAAjB,IAA8B,CAAC,EAAE,CAAC,KAAH,CAAS,MAAT,CAAgB,YAAhB,EAA8B,MAA9B,CAAlE,EAA0G;AACxG,QAAA,KAAK,CAAC,KAAN,GAAc,MAAd;AACD,OAFD,MAEO;AACL,QAAA,KAAK,CAAC,KAAN,GAAc,MAAd;AACD;AACF;AACF,GAnBD;AAoBD;;AAED,SAAS,aAAT,CACE,IADF,EAEE,IAFF,EAGE,EAHF,EAIE,OAJF,EAKE,QALF,EAME,UANF,EAOE,UAPF,EAQE,UARF,EASE,SATF,EAUE,UAVF,EAWE,WAXF,EAYE,eAZF,EAaE,IAbF,EAae;AAEb,SAAO;AACL,IAAA,IADK;AAEL,IAAA,IAFK;AAGL,IAAA,EAHK;AAIL,IAAA,IAJK;AAKL,IAAA,OAAO,EAAE,QALJ;AAML,oBAAgB,QANX;AAOL,qBAAiB,UAPZ;AAQL,uBAAmB,OARd;AASL,IAAA,QAAQ,EAAE,CAAC,CATN;AAUL,IAAA,QAAQ,EAAE,UAVL;AAWL,IAAA,QAAQ,EAAE,UAXL;AAYL,IAAA,QAAQ,EAAE,UAZL;AAaL,IAAA,aAAa,EAAE,eAbV;AAcL,IAAA,KAAK,EAAE,IAAI,CAAC,SAAL,CAAe,WAAf,CAdF;AAeL,kBAAc,IAAI,CAAC,SAAL,CAAe,SAAf,CAfT;AAgBL,mBAAe,IAAI,CAAC,SAAL,CAAe,UAAf;AAhBV,GAAP;AAkBD;;AAED,OAAM,SAAU,mBAAV,CACJ,KADI,EAEJ,GAFI,EAGJ,IAHI,EAIJ,IAJI,EAIQ;AAEZ,QAAM;AAAE,IAAA;AAAF,MAAiB,QAAQ,CAAI,KAAJ,CAA/B;AACA,QAAM,KAAK,GAAG,QAAQ,CAAE,KAAF,EAAsC,GAAtC,CAAtB;AACA,QAAM,SAAS,GAAG,QAAQ,CAAC,MAAO,KAAK,CAAC,WAAN,IAAqB,KAAK,CAAC,SAAnC,CAA1B;AACA,QAAM,KAAK,GAAG,UAAU,CAAC,KAAD,EAAQ,IAAR,CAAxB;AACA,QAAM,UAAU,GAAG,QAAQ,CAAC,MAAM,KAAK,CAAC,UAAN,IAAoB,KAAK,CAAC,OAAN,CAAc,UAAU,CAAC,KAAzB,CAA3B,CAA3B;AACA,QAAM,QAAQ,GAAG,QAAQ,CAAC,MAAM,WAAW,CAAC,UAAU,CAAC,KAAZ,EAAmB,SAAS,CAAC,KAA7B,EAAoC,UAAU,CAAC,KAA/C,EAAsD,KAAK,CAAC,EAA5D,CAAlB,CAAzB;AACA,QAAM,UAAU,GAAG,UAAU,CAAC,KAAD,CAA7B;AAEA,QAAM,QAAQ,GAAG,WAAW,CAC1B,UAD0B,EAE1B,SAF0B,EAG1B,KAAK,CAAC,KAAD,EAAQ,YAAR,CAHqB,EAI1B,UAJ0B,EAK1B,UAL0B,EAM1B,KAAK,CAAC,KAAD,EAAQ,IAAR,CANqB,CAA5B;AASA,QAAM,KAAK,GAAG,QAAQ,CAAC,MACrB,aAAa,CACX,IADW,EAEX,IAFW,EAGX,KAAK,CAAC,EAAN,CAAS,KAHE,EAIX,KAAK,CAAC,OAAN,CAAc,KAJH,EAKX,QAAQ,CAAC,KALE,EAMX,UAAU,CAAC,KANA,EAOX,KAAK,CAAC,UAPK,EAQX,KAAK,CAAC,UARK,EASX,KAAK,CAAC,SATK,EAUX,KAAK,CAAC,UAVK,EAWX,KAAK,CAAC,WAXK,EAYX,KAAK,CAAC,eAZK,EAaX,KAAK,CAAC,IAbK,CADO,CAAtB;;AAkBA,WAAS,SAAT,CAAmB,CAAnB,EAAmC;AACjC,QAAI,YAAY,CAAC,CAAD,CAAZ,IAAmB,YAAY,CAAC,CAAD,CAAnC,EAAwC;AACtC,MAAA,GAAG,CAAC,KAAJ,EAAW,KAAX;AACD;AACF;;AAED,WAAS,OAAT,CAAiB,CAAjB,EAA8B;AAC5B,IAAA,KAAK,CAAC,KAAN;AACD;;AAED,SAAO;AACL,IAAA,UADK;AAEL,OAAG,KAFE;AAGL,IAAA,UAHK;AAIL,IAAA,UAJK;AAKL,IAAA,QALK;AAML,IAAA,KANK;AAOL,IAAA,QAPK;AAQL,IAAA,SARK;AASL,IAAA,OATK;AAUL,IAAA;AAVK,GAAP;AAYD","sourcesContent":["import { Eq } from 'fp-ts/lib/Eq';\nimport { PropType, Ref, computed, toRef, ComputedRef } from 'vue';\nimport { ColorVariant } from '../../types/ColorVariants';\nimport { SizeVariant } from '../../types/SizeVariants';\nimport { isEnterEvent, isSpaceEvent } from '../../utils/eventHelpers';\nimport { toggleListItem } from '../../utils/helpers';\nimport { useDisable, UseDisableProps, UseDisablePropsDefinition } from '../disable';\nimport { useFocus, UseFocusProps, UseFocusPropsDefinition } from '../focus';\nimport { useLabelId, UseLabelIdProps, UseLabelIdPropsDefinition } from '../labelId';\nimport { getUseModelPropsDefinition, useModel, UseModelProps } from '../model';\nimport { EqProps, getEqPropsDefinition } from '../shared';\n\nexport function getUseSelectablePropsDefinition<T>() {\n  return {\n    nativeValue: {\n      type: (null as unknown) as PropType<unknown>,\n      required: false,\n      default: null\n    },\n    trueValue: {\n      type: (null as unknown) as PropType<T>,\n      default: (true as unknown) as T\n    },\n    falseValue: {\n      type: (null as unknown) as PropType<T>,\n      default: (false as unknown) as T\n    },\n    isIndeterminate: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    },\n    isMultiple: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    },\n    variant: {\n      type: String as PropType<ColorVariant>,\n      default: 'is-primary' as ColorVariant\n    },\n    size: {\n      type: String as PropType<SizeVariant>,\n      default: '' as SizeVariant\n    },\n    isRequired: {\n      type: Boolean as PropType<boolean>,\n      default: false\n    },\n    name: {\n      type: String as PropType<string>,\n      required: false\n    },\n    ...getEqPropsDefinition<T>(),\n    ...getUseModelPropsDefinition<T>(),\n    ...UseDisablePropsDefinition,\n    ...UseLabelIdPropsDefinition,\n    ...UseFocusPropsDefinition\n  };\n}\n\nexport type UseSelectableProps<T> = {\n  nativeValue: unknown;\n  trueValue: T;\n  falseValue: T;\n  indeterminateValue?: T;\n  isMultiple: boolean;\n  variant: ColorVariant;\n  size: SizeVariant;\n  isRequired: boolean;\n  isIndeterminate: boolean;\n  name?: string;\n} & EqProps<T> &\n  UseModelProps<T> &\n  UseDisableProps &\n  UseLabelIdProps;\n\nfunction getIsActive<T>(value: T | T[] | undefined, trueValue: T | undefined, isMultiple: boolean, eq: Eq<T>): boolean {\n  if (isMultiple) {\n    if (!Array.isArray(value)) return false;\n    return trueValue !== undefined && value.some(item => eq.equals(item, trueValue));\n  }\n  if (!Array.isArray(value) && trueValue !== undefined) {\n    return value !== undefined && eq.equals(value, trueValue);\n  }\n  return false;\n}\n\nfunction getOnChange<T>(\n  value: Ref<T | T[] | undefined>,\n  trueValue: ComputedRef<T | undefined>,\n  falseValue: Ref<T | undefined>,\n  isDisabled: Ref<boolean>,\n  isMultiple: Ref<boolean>,\n  eq: Ref<Eq<T>>\n) {\n  return function onChange(e?: Event) {\n    if (isDisabled.value) return;\n    if (trueValue.value === undefined) return;\n    const currentValue = value.value;\n    const tValue = trueValue.value;\n    const fValue = falseValue.value;\n    if (isMultiple.value) {\n      if (!Array.isArray(currentValue)) {\n        value.value = [];\n      } else {\n        value.value = toggleListItem(eq.value)(tValue, currentValue) as T[];\n      }\n    } else if (!Array.isArray(currentValue)) {\n      if (currentValue === undefined || (currentValue !== undefined && !eq.value.equals(currentValue, tValue))) {\n        value.value = tValue;\n      } else {\n        value.value = fValue;\n      }\n    }\n  };\n}\n\nfunction getInputAttrs<T>(\n  role: string,\n  type: string,\n  id: string,\n  labelId: string,\n  isActive: boolean,\n  isDisabled: boolean,\n  isReadonly: boolean,\n  isRequired: boolean,\n  trueValue: T,\n  falseValue: T,\n  nativeValue: unknown,\n  isIndeterminate?: boolean,\n  name?: string\n) {\n  return {\n    role,\n    type,\n    id,\n    name,\n    checked: isActive,\n    'aria-checked': isActive,\n    'aria-disabled': isDisabled,\n    'aria-labelledby': labelId,\n    tabindex: -1,\n    readonly: isReadonly,\n    disabled: isDisabled,\n    required: isRequired,\n    indeterminate: isIndeterminate,\n    value: JSON.stringify(nativeValue),\n    'true-value': JSON.stringify(trueValue),\n    'false-value': JSON.stringify(falseValue)\n  };\n}\n\nexport function useSelectionControl<T>(\n  props: UseSelectableProps<T>,\n  ref: Ref<HTMLElement>,\n  role: string,\n  type: string\n) {\n  const { modelValue } = useModel<T>(props);\n  const focus = useFocus((props as unknown) as UseFocusProps, ref);\n  const trueValue = computed(() => (props.nativeValue || props.trueValue) as T | undefined);\n  const label = useLabelId(props, role);\n  const isMultiple = computed(() => props.isMultiple || Array.isArray(modelValue.value));\n  const isActive = computed(() => getIsActive(modelValue.value, trueValue.value, isMultiple.value, props.eq));\n  const isDisabled = useDisable(props);\n\n  const onChange = getOnChange(\n    modelValue,\n    trueValue,\n    toRef(props, 'falseValue'),\n    isDisabled,\n    isMultiple,\n    toRef(props, 'eq')\n  );\n\n  const attrs = computed(() =>\n    getInputAttrs(\n      role,\n      type,\n      label.id.value,\n      label.labelId.value,\n      isActive.value,\n      isDisabled.value,\n      props.isReadonly,\n      props.isRequired,\n      props.trueValue,\n      props.falseValue,\n      props.nativeValue,\n      props.isIndeterminate,\n      props.name\n    )\n  );\n\n  function onKeydown(e: KeyboardEvent) {\n    if (isEnterEvent(e) || isSpaceEvent(e)) {\n      ref.value?.click();\n    }\n  }\n\n  function onClick(e: MouseEvent) {\n    focus.focus();\n  }\n\n  return {\n    modelValue,\n    ...focus,\n    isDisabled,\n    isMultiple,\n    isActive,\n    attrs,\n    onChange,\n    onKeydown,\n    onClick,\n    label\n  };\n}\n\nexport type SelectionControl = ReturnType<typeof useSelectionControl>;\n"],"sourceRoot":"","file":"useSelectionControl.js"}