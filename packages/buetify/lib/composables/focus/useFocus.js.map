{"version":3,"sources":["../../../src/composables/focus/useFocus.ts"],"names":[],"mappings":"AAAA,SAAqB,UAArB,EAA6D,SAA7D,EAAwE,WAAxE,QAA2F,KAA3F;AACA,SAAS,aAAT,QAA8B,qBAA9B;AAEA,OAAO,MAAM,uBAAuB,GAAG;AACrC,EAAA,SAAS,EAAE;AACT,IAAA,IAAI,EAAE,OADG;AAET,IAAA,OAAO,EAAE;AAFA,GAD0B;AAKrC,EAAA,OAAO,EAAE;AACP,IAAA,IAAI,EAAE,QADC;AAEP,IAAA,QAAQ,EAAE;AAFH,GAL4B;AASrC,EAAA,MAAM,EAAE;AACN,IAAA,IAAI,EAAE,QADA;AAEN,IAAA,QAAQ,EAAE;AAFJ,GAT6B;AAarC,EAAA,YAAY,EAAE;AACZ,IAAA,IAAI,EAAE,OADM;AAEZ,IAAA,OAAO,EAAE;AAFG;AAbuB,CAAhC;AAqBP,OAAM,SAAU,QAAV,CAAmB,KAAnB,EAAyC,GAAzC,EAAsE;AAC1E,QAAM,SAAS,GAAiB,UAAU,CAAC,KAAD,CAA1C;;AACA,WAAS,OAAT,CAAiB,CAAjB,EAA0B;AACxB,IAAA,SAAS,CAAC,KAAV,GAAkB,IAAlB;AACA,QAAI,KAAK,CAAC,OAAV,EAAmB,KAAK,CAAC,OAAN,CAAc,CAAd;AACpB;;AACD,WAAS,KAAT,CAAe,CAAf,EAAwB;AACtB,QAAI,SAAS,CAAC,KAAd,EAAqB;AACnB;AACD;;AACD,QAAI,aAAa,CAAC,GAAG,CAAC,KAAL,CAAjB,EAA8B;AAC5B,MAAA,GAAG,CAAC,KAAJ,CAAU,KAAV;AACA,MAAA,SAAS,CAAC,KAAV,GAAkB,IAAlB;AACA,UAAI,KAAK,CAAC,OAAV,EAAmB,KAAK,CAAC,OAAN,CAAc,CAAd;AACpB,KAJD,MAIO;AACL,UAAI,GAAG,CAAC,KAAJ,IAAa,aAAa,CAAC,GAAG,CAAC,KAAJ,CAAU,EAAX,CAA9B,EAA8C;AAC5C,QAAA,GAAG,CAAC,KAAJ,CAAU,EAAV,CAAa,KAAb;AACA,QAAA,SAAS,CAAC,KAAV,GAAkB,IAAlB;AACA,YAAI,KAAK,CAAC,OAAV,EAAmB,KAAK,CAAC,OAAN,CAAc,CAAd;AACpB;AACF;AACF;;AACD,EAAA,WAAW,CAAC,MAAK;AACf,QAAI,KAAK,CAAC,SAAN,IAAmB,SAAS,CAAC,KAAV,KAAoB,KAA3C,EAAkD;AAChD,MAAA,KAAK;AACN;AACF,GAJU,CAAX;;AAMA,MAAI,KAAK,CAAC,YAAV,EAAwB;AACtB,IAAA,SAAS,CAAC,KAAD,CAAT;AACD;;AAED,WAAS,MAAT,CAAgB,CAAhB,EAAyB;AACvB,IAAA,SAAS,CAAC,KAAV,GAAkB,KAAlB;AACA,QAAI,KAAK,CAAC,MAAV,EAAkB,KAAK,CAAC,MAAN,CAAa,CAAb;AACnB;;AACD,SAAO;AACL,IAAA,SADK;AAEL,IAAA,KAFK;AAGL,IAAA,OAHK;AAIL,IAAA;AAJK,GAAP;AAMD","sourcesContent":["import { Ref, VNode, shallowRef, PropType, ExtractPropTypes, onMounted, watchEffect } from 'vue';\nimport { isHTMLElement } from '../../utils/helpers';\n\nexport const UseFocusPropsDefinition = {\n  isFocused: {\n    type: Boolean as PropType<boolean>,\n    default: false\n  },\n  onFocus: {\n    type: Function as PropType<(e?: Event) => void>,\n    required: false as const\n  },\n  onBlur: {\n    type: Function as PropType<(e?: Event) => void>,\n    required: false as const\n  },\n  focusOnMount: {\n    type: Boolean as PropType<boolean>,\n    default: false\n  }\n};\n\nexport type UseFocusProps = ExtractPropTypes<typeof UseFocusPropsDefinition>;\n\nexport function useFocus(props: UseFocusProps, ref: Ref<HTMLElement | VNode>) {\n  const isFocused: Ref<boolean> = shallowRef(false);\n  function onFocus(e?: Event) {\n    isFocused.value = true;\n    if (props.onFocus) props.onFocus(e);\n  }\n  function focus(e?: Event) {\n    if (isFocused.value) {\n      return;\n    }\n    if (isHTMLElement(ref.value)) {\n      ref.value.focus();\n      isFocused.value = true;\n      if (props.onFocus) props.onFocus(e);\n    } else {\n      if (ref.value && isHTMLElement(ref.value.el)) {\n        ref.value.el.focus();\n        isFocused.value = true;\n        if (props.onFocus) props.onFocus(e);\n      }\n    }\n  }\n  watchEffect(() => {\n    if (props.isFocused && isFocused.value === false) {\n      focus();\n    }\n  });\n\n  if (props.focusOnMount) {\n    onMounted(focus);\n  }\n\n  function onBlur(e?: Event) {\n    isFocused.value = false;\n    if (props.onBlur) props.onBlur(e);\n  }\n  return {\n    isFocused,\n    focus,\n    onFocus,\n    onBlur\n  };\n}\n"],"sourceRoot":"","file":"useFocus.js"}