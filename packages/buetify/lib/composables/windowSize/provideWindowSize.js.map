{"version":3,"sources":["../../../src/composables/windowSize/provideWindowSize.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,QAAyB,oBAAzB;AACA,SAAS,IAAT,EAAuB,IAAvB,QAAmC,kBAAnC;AACA,OAAO,QAAP,MAAqB,iBAArB;AACA,SACE,WADF,EAEE,OAFF,EAGE,UAHF,EAOE,QAPF,EAQE,SARF,EASE,WATF,QAUO,KAVP;AA0BA,OAAO,MAAM,6BAA6B,GAAwB;AAChE,EAAA,UAAU,EAAE,UAAU,CAAC,IAAD;AAD0C,CAA3D;AAIP,OAAO,MAAM,oBAAoB,GAAG,UAAU,CAAC;AAC7C,EAAA,MAAM,EAAE,GADqC;AAE7C,EAAA,MAAM,EAAE,IAFqC;AAG7C,EAAA,OAAO,EAAE,IAHoC;AAI7C,EAAA,UAAU,EAAE,IAJiC;AAK7C,EAAA,MAAM,EAAE;AALqC,CAAD,CAAvC;AAUP,OAAO,MAAM,kBAAkB,GAAG,MAAM,CAAC,aAAD,CAAjC;AAEP,OAAO,MAAM,gCAAgC,GAAG;AAC9C,EAAA,WAAW,EAAE;AACX,IAAA,IAAI,EAAE,MADK;AAEX,IAAA,QAAQ,EAAE,KAFC;AAGX,IAAA,OAAO,EAAE,QAAQ,CAAC,oBAAoB,CAAC,KAAtB;AAHN;AADiC,CAAzC;AAUP,OAAM,SAAU,aAAV,GAAuB;AAC3B,QAAM,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC,UAAR,CAA9B;AAEA,QAAM,aAAa,GAAG,QAAQ,CAAC,MAAK;AAClC,IAAA,WAAW,CAAC,KAAZ,GAAoB,MAAM,CAAC,UAA3B;AACD,GAF6B,EAE3B,GAF2B,CAA9B;AAIA,EAAA,SAAS,CAAC,MAAM,MAAM,CAAC,gBAAP,CAAwB,QAAxB,EAAkC,aAAlC,EAAiD;AAAE,IAAA,OAAO,EAAE;AAAX,GAAjD,CAAP,CAAT;AACA,EAAA,WAAW,CAAC,MAAM,MAAM,CAAC,mBAAP,CAA2B,QAA3B,EAAqC,aAArC,CAAP,CAAX;AAEA,SAAO,QAAQ,CAAC,MAAK;AACnB,UAAM,WAAW,GAAG,oBAAoB,CAAC,KAAzC;AACA,UAAM,UAAU,GAAG,WAAW,CAAC,KAA/B;AACA,UAAM,QAAQ,GAAG,UAAU,IAAI,WAAW,CAAC,MAA3C;AACA,UAAM,QAAQ,GAAG,UAAU,IAAI,WAAW,CAAC,MAA1B,IAAoC,UAAU,GAAG,WAAW,CAAC,MAA9E;AACA,WAAO;AACL,MAAA,WAAW,EAAE,UADR;AAEL,MAAA,QAFK;AAGL,MAAA,QAHK;AAIL,MAAA,OAAO,EAAE,QAAQ,IAAI,QAJhB;AAKL,MAAA,SAAS,EAAE,UAAU,IAAI,WAAW,CAAC,OAA1B,IAAqC,UAAU,GAAG,WAAW,CAAC,MALpE;AAML,MAAA,YAAY,EAAE,UAAU,IAAI,WAAW,CAAC,UAA1B,IAAwC,UAAU,GAAG,WAAW,CAAC,OAN1E;AAOL,MAAA,QAAQ,EAAE,UAAU,IAAI,WAAW,CAAC;AAP/B,KAAP;AASD,GAdc,CAAf;AAeD;AAED,OAAM,SAAU,iBAAV,CAA4B,KAA5B,EAAyD;AAC7D,EAAA,WAAW,CAAC,MAAK;AACf,IAAA,oBAAoB,CAAC,KAArB,GAA6B,KAAK,CAAC,WAAnC;AACD,GAFU,CAAX;AAGA,QAAM,UAAU,GAAG,aAAa,EAAhC;AAEA,QAAM,SAAS,GAAwB;AACrC,IAAA,UAAU,EAAE,QAAQ,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,KAAZ,CAAX;AADiB,GAAvC;AAIA,EAAA,OAAO,CAAC,kBAAD,EAAqB,SAArB,CAAP;AAEA,SAAO;AACL,IAAA;AADK,GAAP;AAGD","sourcesContent":["import { constant } from 'fp-ts/lib/function';\nimport { none, Option, some } from 'fp-ts/lib/Option';\nimport debounce from 'lodash.debounce';\nimport {\n  watchEffect,\n  provide,\n  shallowRef,\n  Ref,\n  PropType,\n  ExtractPropTypes,\n  computed,\n  onMounted,\n  onUnmounted\n} from 'vue';\n\nexport interface WindowSize {\n  windowWidth: number;\n  isMobile: boolean;\n  isTablet: boolean;\n  isTouch: boolean;\n  isDesktop: boolean;\n  isWidescreen: boolean;\n  isFullHD: boolean;\n}\n\nexport interface WindowSizeInjection {\n  windowSize: Ref<Option<WindowSize>>;\n}\n\nexport const DEFAULT_WINDOW_SIZE_INJECTION: WindowSizeInjection = {\n  windowSize: shallowRef(none)\n};\n\nexport const DEFAULT_BREAK_POINTS = shallowRef({\n  mobile: 768,\n  tablet: 1023,\n  desktop: 1215,\n  widescreen: 1407,\n  fullHD: 1408\n});\n\nexport type BreakPoints = typeof DEFAULT_BREAK_POINTS.value;\n\nexport const WINDOW_SIZE_SYMBOL = Symbol('window-size');\n\nexport const ProvideWindowSizePropsDefinition = {\n  breakPoints: {\n    type: Object as PropType<BreakPoints>,\n    required: false,\n    default: constant(DEFAULT_BREAK_POINTS.value)\n  }\n};\n\nexport type ProvideWindowSizeProps = ExtractPropTypes<typeof ProvideWindowSizePropsDefinition>;\n\nexport function getWindowSize(): Ref<WindowSize> {\n  const windowWidth = shallowRef(window.innerWidth);\n\n  const resizeHandler = debounce(() => {\n    windowWidth.value = window.innerWidth;\n  }, 250);\n\n  onMounted(() => window.addEventListener('resize', resizeHandler, { passive: true }));\n  onUnmounted(() => window.removeEventListener('resize', resizeHandler));\n\n  return computed(() => {\n    const breakPoints = DEFAULT_BREAK_POINTS.value;\n    const innerWidth = windowWidth.value;\n    const isMobile = innerWidth <= breakPoints.mobile;\n    const isTablet = innerWidth <= breakPoints.tablet && innerWidth > breakPoints.mobile;\n    return {\n      windowWidth: innerWidth,\n      isMobile,\n      isTablet,\n      isTouch: isMobile || isTablet,\n      isDesktop: innerWidth <= breakPoints.desktop && innerWidth > breakPoints.tablet,\n      isWidescreen: innerWidth <= breakPoints.widescreen && innerWidth > breakPoints.desktop,\n      isFullHD: innerWidth >= breakPoints.fullHD\n    };\n  });\n}\n\nexport function provideWindowSize(props: ProvideWindowSizeProps) {\n  watchEffect(() => {\n    DEFAULT_BREAK_POINTS.value = props.breakPoints;\n  });\n  const windowSize = getWindowSize();\n\n  const injection: WindowSizeInjection = {\n    windowSize: computed(() => some(windowSize.value))\n  };\n\n  provide(WINDOW_SIZE_SYMBOL, injection);\n\n  return {\n    windowSize\n  };\n}\n"],"sourceRoot":"","file":"provideWindowSize.js"}