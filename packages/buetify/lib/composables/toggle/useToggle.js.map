{"version":3,"sources":["../../../src/composables/toggle/useToggle.ts"],"names":[],"mappings":"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","sourcesContent":["import { FunctionN } from 'fp-ts/lib/function';\nimport { IO } from 'fp-ts/lib/IO';\nimport { watch, computed, Ref, PropType, shallowRef, toRef } from 'vue';\nimport { isEnterEvent } from '../../utils/eventHelpers';\n\nexport function getUseTogglePropsDefinition<K extends string>(\n  statusName: K,\n  defaultStatus = false\n): UseTogglePropsDefinition<K> {\n  return {\n    [statusName]: {\n      type: Boolean,\n      default: defaultStatus\n    },\n    [`onUpdate:${statusName}`]: {\n      type: Function as PropType<FunctionN<[boolean], void>>,\n      required: false\n    },\n    hasPopup: {\n      type: Boolean,\n      default: false\n    },\n    onToggle: {\n      type: Function as PropType<FunctionN<[boolean], void>>,\n      required: false\n    },\n    onSetOn: {\n      type: Function as PropType<IO<void>>,\n      required: false\n    },\n    onSetOff: {\n      type: Function as PropType<IO<void>>,\n      required: false\n    }\n  } as UseTogglePropsDefinition<K>;\n}\n\nexport type UseTogglePropsDefinition<K extends string> = {\n  onToggle: {\n    type: PropType<FunctionN<[boolean], void>>;\n    required: false;\n  };\n  onSetOn: {\n    type: PropType<IO<void>>;\n    required: false;\n  };\n  onSetOff: {\n    type: PropType<IO<void>>;\n    required: false;\n  };\n} & Record<\n  K,\n  {\n    type: PropType<boolean>;\n    default: boolean;\n  }\n> &\n  Record<\n    'hasPopup',\n    {\n      type: PropType<boolean>;\n      default: boolean;\n    }\n  >;\n\nexport type UseToggleProps<K extends string> = Record<K, boolean> & Record<'hasPopup', boolean>;\n\nexport function getToggleAttrs(status: Ref<boolean>, hasPopup: Ref<boolean>) {\n  return computed(() => ({\n    tabindex: 0,\n    role: 'button',\n    type: 'button',\n    'aria-pressed': status.value,\n    'aria-expanded': status.value,\n    ...(hasPopup.value ? { 'aria-haspopup': true } : {})\n  }));\n}\n\nexport type ToggleAttrs = ReturnType<typeof getToggleAttrs> extends Ref<infer A> ? A : never;\n\nfunction getListeners(toggle: IO<void>) {\n  return {\n    onClick: toggle,\n    onKeydown: (e: KeyboardEvent) => {\n      if (isEnterEvent(e)) {\n        e.preventDefault();\n        toggle();\n      }\n    }\n  };\n}\n\nexport type ToggleListeners = ReturnType<typeof getListeners>;\n\nexport function useToggle<K extends string>(\n  props: { onToggle?: FunctionN<[boolean], void>; onSetOn?: IO<void>; onSetOff?: IO<void> } & Record<K, boolean> & {\n      hasPopup: boolean;\n    },\n  statusName: K\n) {\n  const internalStatus = shallowRef(props[statusName] as boolean);\n  const value = computed({\n    get() {\n      return internalStatus.value;\n    },\n    set(val: boolean) {\n      const cValue = internalStatus.value;\n      if (cValue !== val && props.onToggle) {\n        props.onToggle(val);\n      }\n      if (val && props.onSetOn) {\n        props.onSetOn();\n      }\n      if (!val && props.onSetOff) {\n        props.onSetOff();\n      }\n      internalStatus.value = val;\n      const updateModel = (props as any)[`onUpdate:${statusName}`]; //eslint-disable-line\n      if (updateModel) {\n        updateModel(val);\n      }\n    }\n  });\n  watch(\n    () => props[statusName],\n    status => {\n      internalStatus.value = status;\n    }\n  );\n\n  function setOn(e?: Event) {\n    e && e?.stopPropagation();\n    value.value = true;\n  }\n  function setOff(e?: Event) {\n    e && e?.stopPropagation();\n    value.value = false;\n  }\n  function toggle(e?: Event) {\n    e && e?.stopPropagation();\n    value.value = !value.value;\n  }\n\n  const attrs = getToggleAttrs(value, toRef(props, 'hasPopup'));\n  const listeners = getListeners(toggle);\n  return {\n    isOn: value,\n    isOff: computed(() => internalStatus.value === false),\n    attrs,\n    listeners,\n    props: computed(() => ({ ...attrs.value, ...listeners })),\n    setOn,\n    setOff,\n    toggle\n  };\n}\n\nexport type Toggle = ReturnType<typeof useToggle>;\n"],"sourceRoot":"","file":"useToggle.js"}