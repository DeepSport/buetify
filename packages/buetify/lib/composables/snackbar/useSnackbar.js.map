{"version":3,"sources":["../../../src/composables/snackbar/useSnackbar.ts"],"names":[],"mappings":"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","sourcesContent":["import { constant, constVoid, FunctionN } from 'fp-ts/lib/function';\nimport { IO } from 'fp-ts/lib/IO';\nimport { ExtractPropTypes, h, PropType, shallowRef, VNode, Slots } from 'vue';\nimport { ColorVariant, PositionVariant } from '../../types';\nimport { constEmptyArray } from '../../utils/helpers';\nimport {\n  DEFAULT_USE_NOTICE_PROPS,\n  NoticeController,\n  OpenNoticeOptions,\n  RenderNoticeOptions,\n  useNoticeController,\n  UseNoticePropsDefinition\n} from '../noticeController';\n\nexport const SnackbarPropsDefinition = {\n  ...UseNoticePropsDefinition,\n  position: {\n    type: String as PropType<PositionVariant>,\n    default: 'is-bottom-right' as const\n  },\n  actionText: {\n    type: String as PropType<string>,\n    default: 'OK'\n  },\n  onAction: {\n    type: Function as PropType<IO<void>>,\n    default: constant(constVoid)\n  },\n  variant: {\n    type: String as PropType<ColorVariant>,\n    default: 'is-success' as const\n  }\n};\n\nexport interface SnackbarProps extends ExtractPropTypes<typeof SnackbarPropsDefinition> {}\n\nexport interface RenderSnackbarOptions extends RenderNoticeOptions, OpenNoticeOptions {\n  onAction?: IO<void>;\n  actionText?: string;\n}\n\nexport interface OpenSnackbarOptions extends RenderSnackbarOptions {}\n\nconst DEFAULT_SNACKBAR_PROPS: SnackbarProps = {\n  ...DEFAULT_USE_NOTICE_PROPS,\n  variant: SnackbarPropsDefinition.variant.default,\n  position: SnackbarPropsDefinition.position.default,\n  actionText: SnackbarPropsDefinition.actionText.default,\n  onAction: SnackbarPropsDefinition.onAction.default()\n};\n\nfunction generateMessage(slots: Slots, message?: string): VNode {\n  return message\n    ? h('p', { class: 'text', innerHTML: message })\n    : h('p', { class: 'text' }, slots.message && slots.message());\n}\n\nfunction generateAction(\n  props: SnackbarProps,\n  slots: Slots,\n  noticeController: NoticeController,\n  options: RenderSnackbarOptions\n): VNode {\n  return h(\n    'div',\n    {\n      class: ['action', options.variant ?? props.variant, options.position ?? props.position]\n    },\n    [\n      h(\n        'button',\n        {\n          class: 'button',\n          onClick: () => {\n            if (options.onAction) {\n              options.onAction();\n            } else {\n              props.onAction();\n            }\n            noticeController.close();\n          }\n        },\n        slots.action ? slots.action(noticeController) : options.actionText ?? props.actionText\n      )\n    ]\n  );\n}\n\nfunction getGenerateSnackbar(props: SnackbarProps, slots: Slots, noticeController: NoticeController) {\n  return (options: RenderSnackbarOptions) => () => {\n    return [\n      h(\n        'article',\n        {\n          class: ['snackbar', options.position || props.position],\n          role: 'alert'\n        },\n        [\n          generateMessage(slots, options.message ?? props.message),\n          generateAction(props, slots, noticeController, options)\n        ]\n      )\n    ];\n  };\n}\n\nexport interface SnackbarController extends NoticeController {\n  open: FunctionN<[OpenSnackbarOptions], void>;\n}\n\nexport function useSnackbar(props: SnackbarProps = DEFAULT_SNACKBAR_PROPS, slots: Slots = {}): SnackbarController {\n  const renderNotification = shallowRef(constant(constEmptyArray) as FunctionN<[RenderNoticeOptions], IO<VNode[]>>);\n  const controller = useNoticeController(props, renderNotification);\n  renderNotification.value = getGenerateSnackbar(props, slots, controller);\n  return controller;\n}\n"],"sourceRoot":"","file":"useSnackbar.js"}