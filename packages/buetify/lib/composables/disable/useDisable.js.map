{"version":3,"sources":["../../../src/composables/disable/useDisable.ts"],"names":[],"mappings":"AAAA,SAAc,QAAd,QAA0D,KAA1D;AAEA,OAAO,MAAM,yBAAyB,GAAG;AACvC,EAAA,UAAU,EAAE;AACV,IAAA,IAAI,EAAE,OADI;AAEV,IAAA,QAAQ,EAAE,KAFA;AAGV,IAAA,OAAO,EAAE;AAHC,GAD2B;AAMvC,EAAA,UAAU,EAAE;AACV,IAAA,IAAI,EAAE,OADI;AAEV,IAAA,QAAQ,EAAE,KAFA;AAGV,IAAA,OAAO,EAAE;AAHC,GAN2B;AAWvC,EAAA,iBAAiB,EAAE;AACjB,IAAA,IAAI,EAAE,OADW;AAEjB,IAAA,QAAQ,EAAE,KAFO;AAGjB,IAAA,OAAO,EAAE;AAHQ;AAXoB,CAAlC;AAoBP,OAAM,SAAU,UAAV,CAAqB,KAArB,EAA2C;AAC/C,SAAO,QAAQ,CAAC,MAAM,KAAK,CAAC,UAAN,IAAqB,KAAK,CAAC,UAAN,IAAoB,KAAK,CAAC,iBAAtD,CAAf;AACD","sourcesContent":["import { Ref, computed, PropType, ExtractPropTypes } from 'vue';\n\nexport const UseDisablePropsDefinition = {\n  isDisabled: {\n    type: Boolean as PropType<boolean>,\n    required: false,\n    default: false\n  },\n  isReadonly: {\n    type: Boolean as PropType<boolean>,\n    required: false,\n    default: false\n  },\n  disableIfReadonly: {\n    type: Boolean as PropType<boolean>,\n    required: false,\n    default: false\n  }\n};\n\nexport type UseDisableProps = ExtractPropTypes<typeof UseDisablePropsDefinition>;\n\nexport function useDisable(props: UseDisableProps): Ref<boolean> {\n  return computed(() => props.isDisabled || (props.isReadonly && props.disableIfReadonly));\n}\n"],"sourceRoot":"","file":"useDisable.js"}