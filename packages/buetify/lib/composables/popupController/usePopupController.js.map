{"version":3,"sources":["../../../src/composables/popupController/usePopupController.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,oBAA1B;AAEA,SACE,MADF,EAIE,UAJF,EAKE,SALF,EAME,QANF,EAOE,WAPF,EAQE,KARF,EASE,WATF,QAWO,KAXP;AAYA,SAAS,cAAT,EAAyB,2BAAzB,EAAsD,SAAtD,QAAuE,WAAvE;AACA,SAAS,6BAAT,QAA8C,eAA9C;AACA,SAAS,kCAAT,EAA6C,uBAA7C,QAA4E,0BAA5E;AAEA,OAAO,MAAM,iCAAiC,GAAG,EAC/C,GAAG,6BAD4C;AAE/C,KAAG,2BAA2B,CAAC,UAAD;AAFiB,CAA1C;AAOP,OAAM,SAAU,kBAAV,CAA6B,KAA7B,EAAmD,MAAnD,EAA2E;AAC/E,QAAM,UAAU,GAAG,UAAU,CAAC,KAAD,CAA7B;AACA,EAAA,SAAS,CAAC,MAAK;AACb,IAAA,UAAU,CAAC,KAAX,GAAmB,IAAnB;AACD,GAFQ,CAAT;AAGA,MAAI,MAAM,GAAG,SAAb;AACA,QAAM;AAAE,IAAA,IAAF;AAAQ,IAAA,KAAR;AAAe,IAAA,MAAf;AAAuB,IAAA,MAAvB;AAA+B,IAAA;AAA/B,MAA6C,SAAS,CAAC,KAAD,EAAQ,UAAR,CAA5D;AACA,QAAM;AAAE,IAAA;AAAF,MAAgB,MAAM,CAAC,uBAAD,EAA0B,kCAA1B,CAA5B;AACA,QAAM,MAAM,GAAG,QAAQ,CAAC,MAAK;AAC3B,WAAO,UAAU,CAAC,KAAX,IAAoB,IAAI,CAAC,KAAhC;AACD,GAFsB,CAAvB;AAGA,QAAM,KAAK,GAAG,cAAc,CAAC,MAAD,EAAS,KAAK,CAAC,KAAD,EAAQ,UAAR,CAAd,CAA5B;AACA,EAAA,WAAW,CACT,MAAK;AACH,QAAI,MAAM,CAAC,KAAX,EAAkB;AAChB,MAAA,MAAM;AACN,MAAA,MAAM,GAAG,SAAS,CAAC;AACjB,QAAA,MAAM,EAAE,MAAM,CAAC,KADE;AAEjB,QAAA,UAAU,EAAE,KAAK,CAAC;AAFD,OAAD,CAAlB;AAID,KAND,MAMO;AACL,MAAA,MAAM;AACN,MAAA,MAAM,GAAG,SAAT;AACD;AACF,GAZQ,EAaT;AACE,IAAA,KAAK,EAAE;AADT,GAbS,CAAX;AAkBA,EAAA,WAAW,CAAC,MAAK;AACf,IAAA,MAAM;AACP,GAFU,CAAX;AAIA,SAAO;AACL,IAAA,MADK;AAEL,IAAA,KAFK;AAGL,IAAA,SAHK;AAIL,IAAA,KAAK,EAAE,QAAQ,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC,KAAX;AAAkB,SAAG;AAArB,KAAP,CAAD,CAJV;AAKL,IAAA,IAAI,EAAE,KALD;AAML,IAAA,KAAK,EAAE,MANF;AAOL,IAAA,MAAM,EAAE;AAPH,GAAP;AASD","sourcesContent":["import { constVoid } from 'fp-ts/lib/function';\nimport { IO } from 'fp-ts/lib/IO';\nimport {\n  inject,\n  VNode,\n  ExtractPropTypes,\n  shallowRef,\n  onMounted,\n  computed,\n  watchEffect,\n  toRef,\n  onUnmounted,\n  Ref\n} from 'vue';\nimport { getToggleAttrs, getUseTogglePropsDefinition, useToggle } from '../toggle';\nimport { FadeTransitionPropsDefinition } from '../transition';\nimport { DEFAULT_POPUP_CONTROLLER_INJECTION, POPUP_CONTROLLER_SYMBOL } from './providePopupController';\n\nexport const UsePopupControllerPropsDefinition = {\n  ...FadeTransitionPropsDefinition,\n  ...getUseTogglePropsDefinition('isActive')\n};\n\nexport type UsePopupProps = ExtractPropTypes<typeof UsePopupControllerPropsDefinition>;\n\nexport function usePopupController(props: UsePopupProps, render: Ref<IO<VNode[]>>) {\n  const hasMounted = shallowRef(false);\n  onMounted(() => {\n    hasMounted.value = true;\n  });\n  let remove = constVoid;\n  const { isOn, setOn, setOff, toggle, listeners } = useToggle(props, 'isActive');\n  const { showPopup } = inject(POPUP_CONTROLLER_SYMBOL, DEFAULT_POPUP_CONTROLLER_INJECTION);\n  const isOpen = computed(() => {\n    return hasMounted.value && isOn.value;\n  });\n  const attrs = getToggleAttrs(isOpen, toRef(props, 'hasPopup'));\n  watchEffect(\n    () => {\n      if (isOpen.value) {\n        remove();\n        remove = showPopup({\n          render: render.value,\n          transition: props.transition\n        });\n      } else {\n        remove();\n        remove = constVoid;\n      }\n    },\n    {\n      flush: 'sync'\n    }\n  );\n\n  onUnmounted(() => {\n    remove();\n  });\n\n  return {\n    isOpen,\n    attrs,\n    listeners,\n    props: computed(() => ({ ...attrs.value, ...listeners })),\n    open: setOn,\n    close: setOff,\n    toggle: toggle\n  };\n}\n\nexport type PopupController = ReturnType<typeof usePopupController>;\n"],"sourceRoot":"","file":"usePopupController.js"}