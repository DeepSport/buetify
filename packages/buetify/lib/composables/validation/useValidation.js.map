{"version":3,"sources":["../../../src/composables/validation/useValidation.ts"],"names":[],"mappings":"AAAA,SAAS,QAAT,EAAmB,SAAnB,QAA+C,oBAA/C;AACA,SAAgC,UAAhC,EAAsD,KAAtD,QAAmE,KAAnE;AACA,SAAS,QAAT,QAAyB,qBAAzB;AACA,SAAS,UAAT,EAAqB,yBAArB,QAAsD,YAAtD;AACA,SAAS,YAAT,QAA6B,cAA7B;AAEA,OAAO,MAAM,4BAA4B,GAAG;AAC1C,EAAA,mBAAmB,EAAE;AACnB,IAAA,IAAI,EAAE,OADa;AAEnB,IAAA,OAAO,EAAE;AAFU,GADqB;AAK1C,EAAA,OAAO,EAAE;AACP,IAAA,IAAI,EAAE,OADC;AAEP,IAAA,OAAO,EAAE;AAFF,GALiC;AAS1C,sBAAoB;AAClB,IAAA,IAAI,EAAE,QADY;AAElB,IAAA,OAAO,EAAE,QAAQ,CAAC,SAAD;AAFC,GATsB;AAa1C,KAAG;AAbuC,CAArC;;AAkBP,SAAS,kBAAT,CAA4B,EAA5B,EAA2C;AACzC,QAAM,KAAK,GAAI,EAAf;AACA,SAAO,EAAE,IAAI,OAAO,KAAK,CAAC,aAAb,KAA+B,UAArC,IAAmD,QAAQ,CAAC,KAAK,CAAC,iBAAP,CAAlE;AACD;;AAED,OAAM,SAAU,aAAV,CAAwB,KAAxB,EAAmD,GAAnD,EAAwE;AAC5E,QAAM;AAAE,IAAA;AAAF,MAAc,YAAY,EAAhC;AACA,QAAM,UAAU,GAAG,UAAU,CAAC,KAAD,CAA7B;AACA,QAAM,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,OAAP,CAA1B;AACA,EAAA,KAAK,CAAC,OAAD,EAAU,QAAQ,IAAG;AACxB,IAAA,KAAK,CAAC,kBAAD,CAAL,CAA0B,QAA1B;AACD,GAFI,CAAL;;AAGA,WAAS,QAAT,GAAiB;AACf,QAAI,CAAC,UAAU,CAAC,KAAZ,IAAqB,KAAK,CAAC,mBAA/B,EAAoD;AAClD,UAAI,kBAAkB,CAAC,GAAG,CAAC,KAAL,CAAtB,EAAmC;AACjC,cAAM,EAAE,GAAG,GAAG,CAAC,KAAf;;AACA,YAAI,CAAC,EAAE,CAAC,aAAH,EAAL,EAAyB;AACvB,UAAA,OAAO,CAAC,YAAR,CAAqB,WAArB;AACA,UAAA,OAAO,CAAC,YAAR,CAAqB,EAAE,CAAC,iBAAxB;AACA,UAAA,OAAO,CAAC,KAAR,GAAgB,KAAhB;AACD,SAJD,MAIO;AACL,UAAA,OAAO,CAAC,YAAR,CAAqB,YAArB;AACA,UAAA,OAAO,CAAC,YAAR,CAAqB,EAArB;AACA,UAAA,OAAO,CAAC,KAAR,GAAgB,IAAhB;AACD;AACF;AACF;AACF;;AACD,SAAO;AACL,IAAA,UADK;AAEL,IAAA,OAFK;AAGL,IAAA;AAHK,GAAP;AAKD","sourcesContent":["import { constant, constVoid, FunctionN } from 'fp-ts/lib/function';\nimport { Ref, ExtractPropTypes, shallowRef, PropType, watch } from 'vue';\nimport { isString } from '../../utils/helpers';\nimport { useDisable, UseDisablePropsDefinition } from '../disable';\nimport { useFieldData } from '../fieldData';\n\nexport const UseValidationPropsDefinition = {\n  useNativeValidation: {\n    type: Boolean as PropType<boolean>,\n    default: true\n  },\n  isValid: {\n    type: Boolean as PropType<boolean>,\n    default: true\n  },\n  'onUpdate:isValid': {\n    type: Function as PropType<FunctionN<[boolean], void>>,\n    default: constant(constVoid)\n  },\n  ...UseDisablePropsDefinition\n};\n\nexport type UseValidationProps = ExtractPropTypes<typeof UseValidationPropsDefinition>;\n\nfunction isHtmlInputElement(el: HTMLElement): el is HTMLInputElement {\n  const newEl = (el as unknown) as HTMLInputElement;\n  return el && typeof newEl.checkValidity === 'function' && isString(newEl.validationMessage);\n}\n\nexport function useValidation(props: UseValidationProps, ref: Ref<HTMLElement>) {\n  const { setters } = useFieldData();\n  const isDisabled = useDisable(props);\n  const isValid = shallowRef(props.isValid);\n  watch(isValid, newValue => {\n    props['onUpdate:isValid'](newValue);\n  });\n  function validate() {\n    if (!isDisabled.value && props.useNativeValidation) {\n      if (isHtmlInputElement(ref.value)) {\n        const el = ref.value;\n        if (!el.checkValidity()) {\n          setters.onNewVariant('is-danger');\n          setters.onNewMessage(el.validationMessage);\n          isValid.value = false;\n        } else {\n          setters.onNewVariant('is-success');\n          setters.onNewMessage('');\n          isValid.value = true;\n        }\n      }\n    }\n  }\n  return {\n    isDisabled,\n    isValid,\n    validate\n  };\n}\n"],"sourceRoot":"","file":"useValidation.js"}