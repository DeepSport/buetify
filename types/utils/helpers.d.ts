import { Eq } from 'fp-ts/lib/Eq';
import { NoticePlacement } from '../types/NoticePlacement';
import { PositionVariant } from '../types/PositionVariant';
export declare const isMobile: {
    Android: () => false | RegExpMatchArray | null;
    BlackBerry: () => false | RegExpMatchArray | null;
    iOS: () => false | RegExpMatchArray | null;
    Opera: () => false | RegExpMatchArray | null;
    Windows: () => false | RegExpMatchArray | null;
    any: () => false | RegExpMatchArray | null;
};
export declare function removeElement(el: HTMLElement): void;
export declare function capitalizeFirstLetter(str: string): string;
export declare function keys<O>(o: O): Array<keyof O>;
export declare function deepEqual(a: any, b: any): boolean;
export declare function getObjectValueByPath(obj: any, path: string, fallback?: any): any;
export declare function isBoolean(val: any): val is boolean;
export declare function isObject(obj: any): obj is object;
export declare function getNestedValue(obj: any, path: (string | number)[], fallback?: any): any;
export declare function isPrimitive(val: any): val is number | string | boolean;
export declare function getNoticePlacement(position: PositionVariant): NoticePlacement;
export declare function getNoticeTransition(position: PositionVariant): object;
export declare function isNil(arg: any): boolean;
export declare const exists: import("fp-ts/lib/function").Predicate<any>;
export declare function isString(arg: any): arg is string;
export declare function isHTMLElement(obj: any): obj is HTMLElement;
export declare const camelize: (str: string) => string;
export declare const alwaysEmptyArray: import("fp-ts/lib/function").Lazy<never[]>;
export declare const alwaysNone: import("fp-ts/lib/function").Lazy<import("fp-ts/lib/Option").Option<never>>;
export declare const alwaysZero: import("fp-ts/lib/function").Lazy<number>;
export declare function remove<A>(E: Eq<A>): (a: A, as: A[]) => A[];
export declare function toggle<A>(E: Eq<A>): (a: A, as: A[]) => A[];
export declare function isEmptyString(str: string): boolean;
